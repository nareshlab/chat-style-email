"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@instantdb";
exports.ids = ["vendor-chunks/@instantdb"];
exports.modules = {

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/IndexedDBStorage.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/IndexedDBStorage.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ IndexedDBStorage)\n/* harmony export */ });\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass IndexedDBStorage {\n    constructor(dbName) {\n        this.dbName = dbName;\n        this._storeName = \"kv\";\n        this._dbPromise = this._init();\n    }\n    _init() {\n        return new Promise((resolve, reject) => {\n            const request = indexedDB.open(this.dbName, 1);\n            request.onerror = (event) => {\n                reject(event);\n            };\n            request.onsuccess = (event) => {\n                resolve(event.target.result);\n            };\n            request.onupgradeneeded = (event) => {\n                const db = event.target.result;\n                db.createObjectStore(this._storeName);\n            };\n        });\n    }\n    getItem(k) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const db = yield this._dbPromise;\n            return new Promise((resolve, reject) => {\n                const transaction = db.transaction([this._storeName], \"readonly\");\n                const objectStore = transaction.objectStore(this._storeName);\n                const request = objectStore.get(k);\n                request.onerror = (event) => {\n                    reject(event);\n                };\n                request.onsuccess = (_event) => {\n                    if (request.result) {\n                        resolve(request.result);\n                    }\n                    else {\n                        resolve(null);\n                    }\n                };\n            });\n        });\n    }\n    setItem(k, v) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const db = yield this._dbPromise;\n            return new Promise((resolve, reject) => {\n                const transaction = db.transaction([this._storeName], \"readwrite\");\n                const objectStore = transaction.objectStore(this._storeName);\n                const request = objectStore.put(v, k);\n                request.onerror = (event) => {\n                    reject(event);\n                };\n                request.onsuccess = (_event) => {\n                    resolve();\n                };\n            });\n        });\n    }\n}\n//# sourceMappingURL=IndexedDBStorage.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL0luZGV4ZWREQlN0b3JhZ2UuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlCQUFpQixTQUFJLElBQUksU0FBSTtBQUM3Qiw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUNlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcREVMTFxcRG9jdW1lbnRzXFxlbWFpbC1jaGF0LWludGVyZmFjZVxcbm9kZV9tb2R1bGVzXFxAaW5zdGFudGRiXFxjb3JlXFxkaXN0XFxtb2R1bGVcXEluZGV4ZWREQlN0b3JhZ2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBJbmRleGVkREJTdG9yYWdlIHtcbiAgICBjb25zdHJ1Y3RvcihkYk5hbWUpIHtcbiAgICAgICAgdGhpcy5kYk5hbWUgPSBkYk5hbWU7XG4gICAgICAgIHRoaXMuX3N0b3JlTmFtZSA9IFwia3ZcIjtcbiAgICAgICAgdGhpcy5fZGJQcm9taXNlID0gdGhpcy5faW5pdCgpO1xuICAgIH1cbiAgICBfaW5pdCgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHJlcXVlc3QgPSBpbmRleGVkREIub3Blbih0aGlzLmRiTmFtZSwgMSk7XG4gICAgICAgICAgICByZXF1ZXN0Lm9uZXJyb3IgPSAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgICByZWplY3QoZXZlbnQpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJlcXVlc3Qub25zdWNjZXNzID0gKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZShldmVudC50YXJnZXQucmVzdWx0KTtcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICByZXF1ZXN0Lm9udXBncmFkZW5lZWRlZCA9IChldmVudCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IGRiID0gZXZlbnQudGFyZ2V0LnJlc3VsdDtcbiAgICAgICAgICAgICAgICBkYi5jcmVhdGVPYmplY3RTdG9yZSh0aGlzLl9zdG9yZU5hbWUpO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGdldEl0ZW0oaykge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgY29uc3QgZGIgPSB5aWVsZCB0aGlzLl9kYlByb21pc2U7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHRyYW5zYWN0aW9uID0gZGIudHJhbnNhY3Rpb24oW3RoaXMuX3N0b3JlTmFtZV0sIFwicmVhZG9ubHlcIik7XG4gICAgICAgICAgICAgICAgY29uc3Qgb2JqZWN0U3RvcmUgPSB0cmFuc2FjdGlvbi5vYmplY3RTdG9yZSh0aGlzLl9zdG9yZU5hbWUpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlcXVlc3QgPSBvYmplY3RTdG9yZS5nZXQoayk7XG4gICAgICAgICAgICAgICAgcmVxdWVzdC5vbmVycm9yID0gKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChldmVudCk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICByZXF1ZXN0Lm9uc3VjY2VzcyA9IChfZXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlcXVlc3QucmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHJlcXVlc3QucmVzdWx0KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUobnVsbCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBzZXRJdGVtKGssIHYpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IGRiID0geWllbGQgdGhpcy5fZGJQcm9taXNlO1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCB0cmFuc2FjdGlvbiA9IGRiLnRyYW5zYWN0aW9uKFt0aGlzLl9zdG9yZU5hbWVdLCBcInJlYWR3cml0ZVwiKTtcbiAgICAgICAgICAgICAgICBjb25zdCBvYmplY3RTdG9yZSA9IHRyYW5zYWN0aW9uLm9iamVjdFN0b3JlKHRoaXMuX3N0b3JlTmFtZSk7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVxdWVzdCA9IG9iamVjdFN0b3JlLnB1dCh2LCBrKTtcbiAgICAgICAgICAgICAgICByZXF1ZXN0Lm9uZXJyb3IgPSAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGV2ZW50KTtcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIHJlcXVlc3Qub25zdWNjZXNzID0gKF9ldmVudCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1JbmRleGVkREJTdG9yYWdlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/IndexedDBStorage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/Reactor.js":
/*!*************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/Reactor.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Reactor)\n/* harmony export */ });\n/* harmony import */ var _utils_log__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/log */ \"(ssr)/./node_modules/@instantdb/core/dist/module/utils/log.js\");\n/* harmony import */ var _utils_weakHash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/weakHash */ \"(ssr)/./node_modules/@instantdb/core/dist/module/utils/weakHash.js\");\n/* harmony import */ var _instaql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./instaql */ \"(ssr)/./node_modules/@instantdb/core/dist/module/instaql.js\");\n/* harmony import */ var _instaml__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./instaml */ \"(ssr)/./node_modules/@instantdb/core/dist/module/instaml.js\");\n/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./store */ \"(ssr)/./node_modules/@instantdb/core/dist/module/store.js\");\n/* harmony import */ var _utils_uuid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/uuid */ \"(ssr)/./node_modules/@instantdb/core/dist/module/utils/uuid.js\");\n/* harmony import */ var _IndexedDBStorage__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./IndexedDBStorage */ \"(ssr)/./node_modules/@instantdb/core/dist/module/IndexedDBStorage.js\");\n/* harmony import */ var _WindowNetworkListener__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./WindowNetworkListener */ \"(ssr)/./node_modules/@instantdb/core/dist/module/WindowNetworkListener.js\");\n/* harmony import */ var _authAPI__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./authAPI */ \"(ssr)/./node_modules/@instantdb/core/dist/module/authAPI.js\");\n/* harmony import */ var _StorageAPI__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./StorageAPI */ \"(ssr)/./node_modules/@instantdb/core/dist/module/StorageAPI.js\");\n/* harmony import */ var _presence__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./presence */ \"(ssr)/./node_modules/@instantdb/core/dist/module/presence.js\");\n/* harmony import */ var _utils_Deferred__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/Deferred */ \"(ssr)/./node_modules/@instantdb/core/dist/module/utils/Deferred.js\");\n/* harmony import */ var _utils_PersistedObject__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utils/PersistedObject */ \"(ssr)/./node_modules/@instantdb/core/dist/module/utils/PersistedObject.js\");\n/* harmony import */ var _model_instaqlResult__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./model/instaqlResult */ \"(ssr)/./node_modules/@instantdb/core/dist/module/model/instaqlResult.js\");\n/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./utils/object */ \"(ssr)/./node_modules/@instantdb/core/dist/module/utils/object.js\");\n/* harmony import */ var _utils_linkIndex__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./utils/linkIndex */ \"(ssr)/./node_modules/@instantdb/core/dist/module/utils/linkIndex.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./version */ \"(ssr)/./node_modules/@instantdb/core/dist/module/version.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// @ts-check\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst STATUS = {\n    CONNECTING: \"connecting\",\n    OPENED: \"opened\",\n    AUTHENTICATED: \"authenticated\",\n    CLOSED: \"closed\",\n    ERRORED: \"errored\",\n};\nconst QUERY_ONCE_TIMEOUT = 30000;\nconst WS_CONNECTING_STATUS = 0;\nconst WS_OPEN_STATUS = 1;\nconst defaultConfig = {\n    apiURI: \"https://api.instantdb.com\",\n    websocketURI: \"wss://api.instantdb.com/runtime/session\",\n};\n// Param that the backend adds if this is an oauth redirect\nconst OAUTH_REDIRECT_PARAM = \"_instant_oauth_redirect\";\nconst currentUserKey = `currentUser`;\nlet _wsId = 0;\nfunction createWebSocket(uri) {\n    const ws = new WebSocket(uri);\n    // @ts-ignore\n    ws._id = _wsId++;\n    return ws;\n}\nfunction isClient() {\n    const hasWindow = typeof window !== \"undefined\";\n    // this checks if we are running in a chrome extension\n    // @ts-expect-error\n    const isChrome = typeof chrome !== \"undefined\";\n    return hasWindow || isChrome;\n}\nconst ignoreLogging = {\n    \"set-presence\": true,\n    \"set-presence-ok\": true,\n    \"refresh-presence\": true,\n};\nfunction querySubsFromJSON(str) {\n    var _a;\n    const parsed = JSON.parse(str);\n    for (const key in parsed) {\n        const v = parsed[key];\n        if ((_a = v === null || v === void 0 ? void 0 : v.result) === null || _a === void 0 ? void 0 : _a.store) {\n            v.result.store = _store__WEBPACK_IMPORTED_MODULE_4__.fromJSON(v.result.store);\n        }\n    }\n    return parsed;\n}\nfunction querySubsToJSON(querySubs) {\n    var _a;\n    const jsonSubs = {};\n    for (const key in querySubs) {\n        const sub = querySubs[key];\n        const jsonSub = Object.assign({}, sub);\n        if ((_a = sub.result) === null || _a === void 0 ? void 0 : _a.store) {\n            jsonSub.result = Object.assign(Object.assign({}, sub.result), { store: _store__WEBPACK_IMPORTED_MODULE_4__.toJSON(sub.result.store) });\n        }\n        jsonSubs[key] = jsonSub;\n    }\n    return JSON.stringify(jsonSubs);\n}\n/**\n * @template {import('./presence').RoomSchemaShape} [RoomSchema = {}]\n */\nclass Reactor {\n    constructor(config, Storage = _IndexedDBStorage__WEBPACK_IMPORTED_MODULE_6__[\"default\"], NetworkListener = _WindowNetworkListener__WEBPACK_IMPORTED_MODULE_7__[\"default\"], versions) {\n        this._isOnline = true;\n        this._isShutdown = false;\n        this.status = STATUS.CONNECTING;\n        /** @type {Record<string, Array<{ q: any, cb: (data: any) => any }>>} */\n        this.queryCbs = {};\n        /** @type {Record<string, Array<{ q: any, eventId: string, dfd: Deferred }>>} */\n        this.queryOnceDfds = {};\n        this.authCbs = [];\n        this.attrsCbs = [];\n        this.mutationErrorCbs = [];\n        this.connectionStatusCbs = [];\n        this.mutationDeferredStore = new Map();\n        this._reconnectTimeoutId = null;\n        this._reconnectTimeoutMs = 0;\n        this._localIdPromises = {};\n        this._errorMessage = null;\n        /** @type {Promise<null | {error: {message: string}}>}**/\n        this._oauthCallbackResponse = null;\n        /** @type {null | import('./utils/linkIndex').LinkIndex}} */\n        this._linkIndex = null;\n        /** @type {Record<string, {isConnected: boolean; error: any}>} */\n        this._rooms = {};\n        /** @type {Record<string, boolean>} */\n        this._roomsPendingLeave = {};\n        this._presence = {};\n        this._broadcastQueue = [];\n        this._broadcastSubs = {};\n        this._currentUserCached = { isLoading: true, error: undefined, user: undefined };\n        this._beforeUnloadCbs = [];\n        this._dataForQueryCache = {};\n        /**\n         *  merge querySubs from storage and in memory. Has the following side\n         *  effects:\n         *  - We notify all queryCbs because results may been added during merge\n         */\n        this._onMergeQuerySubs = (_storageSubs, inMemorySubs) => {\n            const storageSubs = _storageSubs || {};\n            const ret = Object.assign({}, inMemorySubs);\n            // Consider an inMemorySub with no result;\n            // If we have a result from storageSubs, let's add it\n            Object.entries(inMemorySubs).forEach(([hash, querySub]) => {\n                var _a;\n                const storageResult = (_a = storageSubs === null || storageSubs === void 0 ? void 0 : storageSubs[hash]) === null || _a === void 0 ? void 0 : _a.result;\n                const memoryResult = querySub.result;\n                if (storageResult && !memoryResult) {\n                    ret[hash].result = storageResult;\n                }\n            });\n            // Consider a storageSub with no corresponding inMemorySub\n            // This means that at least at this point,\n            // the user has not asked to subscribe to the query.\n            // We may _still_ want to add it, because in just a\n            // few milliseconds, the user will ask to subscribe to the\n            // query.\n            // For now, we can't really tell if the user will ask to subscribe\n            // or not. So for now let's just add the first 10 queries from storage.\n            // Eventually, we could be smarter about this. For example,\n            // we can keep usage information about which queries are popular.\n            const storageKsToAdd = Object.keys(storageSubs)\n                .filter((k) => !inMemorySubs[k])\n                .slice(0, 10);\n            storageKsToAdd.forEach((k) => {\n                ret[k] = storageSubs[k];\n            });\n            // Okay, now we have merged our querySubs\n            this.querySubs.set((_) => ret);\n            this.loadedNotifyAll();\n        };\n        /**\n         * merge pendingMutations from storage and in memory. Has a side effect of\n         * sending mutations that were stored but not acked\n         */\n        this._onMergePendingMutations = (storageMuts, inMemoryMuts) => {\n            const ret = new Map([...storageMuts.entries(), ...inMemoryMuts.entries()]);\n            this.pendingMutations.set((_) => ret);\n            this.loadedNotifyAll();\n            const rewrittenStorageMuts = this._rewriteMutations(this.attrs, storageMuts);\n            rewrittenStorageMuts.forEach((mut, k) => {\n                if (!inMemoryMuts.has(k) && !mut[\"tx-id\"]) {\n                    this._sendMutation(k, mut);\n                }\n            });\n        };\n        // ---------------------------\n        // Queries\n        this.getPreviousResult = (q) => {\n            const hash = (0,_utils_weakHash__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(q);\n            return this.dataForQuery(hash);\n        };\n        /** Re-run instaql and call all callbacks with new data */\n        this.notifyOne = (hash) => {\n            var _a, _b;\n            const cbs = (_a = this.queryCbs[hash]) !== null && _a !== void 0 ? _a : [];\n            const prevData = (_b = this._dataForQueryCache[hash]) === null || _b === void 0 ? void 0 : _b.data;\n            const data = this.dataForQuery(hash);\n            if (!data)\n                return;\n            if ((0,_utils_object__WEBPACK_IMPORTED_MODULE_14__.areObjectsDeepEqual)(data, prevData))\n                return;\n            cbs.forEach((r) => r.cb(data));\n        };\n        this.notifyOneQueryOnce = (hash) => {\n            var _a;\n            const dfds = (_a = this.queryOnceDfds[hash]) !== null && _a !== void 0 ? _a : [];\n            const data = this.dataForQuery(hash);\n            dfds.forEach((r) => {\n                this._completeQueryOnce(r.q, hash, r.dfd);\n                r.dfd.resolve(data);\n            });\n        };\n        this.notifyQueryError = (hash, error) => {\n            const cbs = this.queryCbs[hash] || [];\n            cbs.forEach((r) => r.cb({ error }));\n        };\n        /** Applies transactions locally and sends transact message to server */\n        this.pushTx = (chunks) => {\n            try {\n                const txSteps = _instaml__WEBPACK_IMPORTED_MODULE_3__.transform({ attrs: this.optimisticAttrs(), schema: this.config.schema }, chunks);\n                return this.pushOps(txSteps);\n            }\n            catch (e) {\n                return this.pushOps([], e);\n            }\n        };\n        /**\n         * @param {*} txSteps\n         * @param {*} [error]\n         * @returns\n         */\n        this.pushOps = (txSteps, error) => {\n            const eventId = (0,_utils_uuid__WEBPACK_IMPORTED_MODULE_5__[\"default\"])();\n            const mutation = {\n                op: \"transact\",\n                \"tx-steps\": txSteps,\n                error,\n            };\n            this.pendingMutations.set((prev) => {\n                prev.set(eventId, mutation);\n                return prev;\n            });\n            const dfd = new _utils_Deferred__WEBPACK_IMPORTED_MODULE_11__.Deferred();\n            this.mutationDeferredStore.set(eventId, dfd);\n            this._sendMutation(eventId, mutation);\n            this.notifyAll();\n            return dfd.promise;\n        };\n        this._wsOnOpen = (e) => {\n            const targetWs = e.target;\n            if (this._ws !== targetWs) {\n                _utils_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"].info(\"[socket][open]\", targetWs._id, \"skip; this is no longer the current ws\");\n                return;\n            }\n            _utils_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"].info(\"[socket][open]\", this._ws._id);\n            this._setStatus(STATUS.OPENED);\n            this.getCurrentUser().then((resp) => {\n                var _a;\n                this._trySend((0,_utils_uuid__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(), {\n                    op: \"init\",\n                    \"app-id\": this.config.appId,\n                    \"refresh-token\": (_a = resp.user) === null || _a === void 0 ? void 0 : _a[\"refresh_token\"],\n                    versions: this.versions,\n                    // If an admin token is provided for an app, we will\n                    // skip all permission checks. This is an advanced feature,\n                    // to let users write internal tools\n                    // This option is not exposed in `Config`, as it's\n                    // not ready for prme time\n                    \"__admin-token\": this.config.__adminToken,\n                });\n            });\n        };\n        this._wsOnMessage = (e) => {\n            const targetWs = e.target;\n            const m = JSON.parse(e.data.toString());\n            if (this._ws !== targetWs) {\n                _utils_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"].info(\"[socket][message]\", targetWs._id, m, \"skip; this is no longer the current ws\");\n                return;\n            }\n            this._handleReceive(targetWs._id, JSON.parse(e.data.toString()));\n        };\n        this._wsOnError = (e) => {\n            const targetWs = e.target;\n            if (this._ws !== targetWs) {\n                _utils_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"].info(\"[socket][error]\", targetWs._id, \"skip; this is no longer the current ws\");\n                return;\n            }\n            _utils_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error(\"[socket][error]\", targetWs._id, e);\n        };\n        this._wsOnClose = (e) => {\n            const targetWs = e.target;\n            if (this._ws !== targetWs) {\n                _utils_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"].info(\"[socket][close]\", targetWs._id, \"skip; this is no longer the current ws\");\n                return;\n            }\n            this._setStatus(STATUS.CLOSED);\n            for (const room of Object.values(this._rooms)) {\n                room.isConnected = false;\n            }\n            if (this._isShutdown) {\n                _utils_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"].info(\"[socket][close]\", targetWs._id, \"Reactor has been shut down and will not reconnect\");\n                return;\n            }\n            _utils_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"].info(\"[socket][close]\", targetWs._id, \"schedule reconnect, ms =\", this._reconnectTimeoutMs);\n            setTimeout(() => {\n                this._reconnectTimeoutMs = Math.min(this._reconnectTimeoutMs + 1000, 10000);\n                if (!this._isOnline) {\n                    _utils_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"].info(\"[socket][close]\", targetWs._id, \"we are offline, no need to start socket\");\n                    return;\n                }\n                this._startSocket();\n            }, this._reconnectTimeoutMs);\n        };\n        this.config = Object.assign(Object.assign({}, defaultConfig), config);\n        this.versions = Object.assign(Object.assign({}, (versions || {})), { \"@instantdb/core\": _version__WEBPACK_IMPORTED_MODULE_16__[\"default\"] });\n        if (this.config.schema) {\n            this._linkIndex = (0,_utils_linkIndex__WEBPACK_IMPORTED_MODULE_15__.createLinkIndex)(this.config.schema);\n        }\n        // This is to protect us against running\n        // server-side.\n        if (!isClient()) {\n            return;\n        }\n        if (typeof BroadcastChannel === \"function\") {\n            this._broadcastChannel = new BroadcastChannel(\"@instantdb\");\n            this._broadcastChannel.addEventListener(\"message\", (e) => __awaiter(this, void 0, void 0, function* () {\n                var _a;\n                if (((_a = e.data) === null || _a === void 0 ? void 0 : _a.type) === \"auth\") {\n                    const res = yield this.getCurrentUser();\n                    this.updateUser(res.user);\n                }\n            }));\n        }\n        this._oauthCallbackResponse = this._oauthLoginInit();\n        this._initStorage(Storage);\n        // kick off a request to cache it\n        this.getCurrentUser();\n        NetworkListener.getIsOnline().then((isOnline) => {\n            this._isOnline = isOnline;\n            this._startSocket();\n            NetworkListener.listen((isOnline) => {\n                // We do this because react native's NetInfo\n                // fires multiple online events.\n                // We only want to handle one state change\n                if (isOnline === this._isOnline) {\n                    return;\n                }\n                _utils_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"].info(\"[network] online =\", isOnline);\n                this._isOnline = isOnline;\n                if (this._isOnline) {\n                    this._startSocket();\n                }\n            });\n        });\n        if (typeof addEventListener !== \"undefined\") {\n            this._beforeUnload = this._beforeUnload.bind(this);\n            addEventListener(\"beforeunload\", this._beforeUnload);\n        }\n    }\n    _initStorage(Storage) {\n        this._persister = new Storage(`instant_${this.config.appId}_5`);\n        this.querySubs = new _utils_PersistedObject__WEBPACK_IMPORTED_MODULE_12__.PersistedObject(this._persister, \"querySubs\", {}, this._onMergeQuerySubs, querySubsToJSON, querySubsFromJSON);\n        this.pendingMutations = new _utils_PersistedObject__WEBPACK_IMPORTED_MODULE_12__.PersistedObject(this._persister, \"pendingMutations\", new Map(), this._onMergePendingMutations, (x) => {\n            return JSON.stringify([...x.entries()]);\n        }, (x) => {\n            return new Map(JSON.parse(x));\n        });\n        this._beforeUnloadCbs.push(() => {\n            this.pendingMutations.flush();\n            this.querySubs.flush();\n        });\n    }\n    _beforeUnload() {\n        for (const cb of this._beforeUnloadCbs) {\n            cb();\n        }\n    }\n    /**\n     * @param {'enqueued' | 'pending' | 'synced' | 'timeout' |  'error' } status\n     * @param string clientId\n     * @param {{message?: string, hint?: string, error?: Error}} [errDetails]\n     */\n    _finishTransaction(status, clientId, errDetails) {\n        const dfd = this.mutationDeferredStore.get(clientId);\n        this.mutationDeferredStore.delete(clientId);\n        const ok = status !== \"error\" && status !== \"timeout\";\n        if (!dfd && !ok) {\n            // console.erroring here, as there are no listeners to let know\n            console.error(\"Mutation failed\", Object.assign({ status, clientId }, errDetails));\n        }\n        if (!dfd) {\n            return;\n        }\n        if (ok) {\n            dfd.resolve({ status, clientId });\n        }\n        else {\n            dfd.reject(Object.assign({ status, clientId }, errDetails));\n        }\n    }\n    _setStatus(status, err) {\n        this.status = status;\n        this._errorMessage = err;\n        this.notifyConnectionStatusSubs(status);\n    }\n    _flushEnqueuedRoomData(roomId) {\n        var _a, _b;\n        const enqueuedUserPresence = (_b = (_a = this._presence[roomId]) === null || _a === void 0 ? void 0 : _a.result) === null || _b === void 0 ? void 0 : _b.user;\n        const enqueuedBroadcasts = this._broadcastQueue[roomId];\n        this._broadcastQueue[roomId] = [];\n        if (enqueuedUserPresence) {\n            this._trySetPresence(roomId, enqueuedUserPresence);\n        }\n        if (enqueuedBroadcasts) {\n            for (const item of enqueuedBroadcasts) {\n                const { topic, roomType, data } = item;\n                this._tryBroadcast(roomId, roomType, topic, data);\n            }\n        }\n    }\n    _handleReceive(wsId, msg) {\n        var _a, _b, _c, _d;\n        // opt-out, enabled by default if schema\n        const enableCardinalityInference = Boolean(this.config.schema) &&\n            (\"cardinalityInference\" in this.config\n                ? Boolean(this.config.cardinalityInference)\n                : true);\n        if (!ignoreLogging[msg.op]) {\n            _utils_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"].info(\"[receive]\", wsId, msg.op, msg);\n        }\n        switch (msg.op) {\n            case \"init-ok\":\n                this._setStatus(STATUS.AUTHENTICATED);\n                this._reconnectTimeoutMs = 0;\n                this._setAttrs(msg.attrs);\n                this._flushPendingMessages();\n                // (EPH): set session-id, so we know\n                // which item is us\n                this._sessionId = msg[\"session-id\"];\n                for (const roomId of Object.keys(this._rooms)) {\n                    this._tryJoinRoom(roomId);\n                }\n                break;\n            case \"add-query-exists\":\n                this.notifyOneQueryOnce((0,_utils_weakHash__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(msg.q));\n                break;\n            case \"add-query-ok\":\n                const { q, result } = msg;\n                const hash = (0,_utils_weakHash__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(q);\n                const pageInfo = (_b = (_a = result === null || result === void 0 ? void 0 : result[0]) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b[\"page-info\"];\n                const aggregate = (_d = (_c = result === null || result === void 0 ? void 0 : result[0]) === null || _c === void 0 ? void 0 : _c.data) === null || _d === void 0 ? void 0 : _d[\"aggregate\"];\n                const triples = (0,_model_instaqlResult__WEBPACK_IMPORTED_MODULE_13__.extractTriples)(result);\n                const store = _store__WEBPACK_IMPORTED_MODULE_4__.createStore(this.attrs, triples, enableCardinalityInference, this._linkIndex);\n                this.querySubs.set((prev) => {\n                    prev[hash].result = { store, pageInfo, aggregate };\n                    return prev;\n                });\n                this.notifyOne(hash);\n                this.notifyOneQueryOnce(hash);\n                break;\n            case \"refresh-ok\":\n                const { computations, attrs } = msg;\n                this._setAttrs(attrs);\n                const updates = computations.map((x) => {\n                    var _a, _b, _c, _d;\n                    const q = x[\"instaql-query\"];\n                    const result = x[\"instaql-result\"];\n                    const hash = (0,_utils_weakHash__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(q);\n                    const triples = (0,_model_instaqlResult__WEBPACK_IMPORTED_MODULE_13__.extractTriples)(result);\n                    const store = _store__WEBPACK_IMPORTED_MODULE_4__.createStore(this.attrs, triples, enableCardinalityInference, this._linkIndex);\n                    const pageInfo = (_b = (_a = result === null || result === void 0 ? void 0 : result[0]) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b[\"page-info\"];\n                    const aggregate = (_d = (_c = result === null || result === void 0 ? void 0 : result[0]) === null || _c === void 0 ? void 0 : _c.data) === null || _d === void 0 ? void 0 : _d[\"aggregate\"];\n                    return { hash, store, pageInfo, aggregate };\n                });\n                updates.forEach(({ hash, store, pageInfo, aggregate }) => {\n                    this.querySubs.set((prev) => {\n                        prev[hash].result = { store, pageInfo, aggregate };\n                        return prev;\n                    });\n                });\n                updates.forEach(({ hash }) => {\n                    this.notifyOne(hash);\n                });\n                break;\n            case \"transact-ok\":\n                const { \"client-event-id\": eventId, \"tx-id\": txId } = msg;\n                const muts = this._rewriteMutations(this.attrs, this.pendingMutations.currentValue);\n                const prevMutation = muts.get(eventId);\n                if (!prevMutation) {\n                    break;\n                }\n                // Now that this transaction is accepted, \n                // We can delete it from our queue. \n                this.pendingMutations.set((prev) => {\n                    prev.delete(eventId);\n                    return prev;\n                });\n                // We apply this transaction to all our existing queries\n                const txStepsToApply = prevMutation[\"tx-steps\"];\n                this.querySubs.set((prev) => {\n                    var _a;\n                    for (const [hash, sub] of Object.entries(prev)) {\n                        const store = (_a = sub === null || sub === void 0 ? void 0 : sub.result) === null || _a === void 0 ? void 0 : _a.store;\n                        if (!store) {\n                            continue;\n                        }\n                        const newStore = _store__WEBPACK_IMPORTED_MODULE_4__.transact(store, txStepsToApply);\n                        prev[hash].result.store = newStore;\n                    }\n                    return prev;\n                });\n                const newAttrs = prevMutation[\"tx-steps\"]\n                    .filter(([action, ..._args]) => action === \"add-attr\")\n                    .map(([_action, attr]) => attr)\n                    .concat(Object.values(this.attrs));\n                this._setAttrs(newAttrs);\n                this._finishTransaction(\"synced\", eventId);\n                break;\n            case \"refresh-presence\":\n                const roomId = msg[\"room-id\"];\n                this._setPresencePeers(roomId, msg.data);\n                this._notifyPresenceSubs(roomId);\n                break;\n            case \"server-broadcast\":\n                const room = msg[\"room-id\"];\n                const topic = msg.topic;\n                this._notifyBroadcastSubs(room, topic, msg);\n                break;\n            case \"join-room-ok\":\n                const loadingRoomId = msg[\"room-id\"];\n                const joinedRoom = this._rooms[loadingRoomId];\n                if (!joinedRoom) {\n                    if (this._roomsPendingLeave[loadingRoomId]) {\n                        this._tryLeaveRoom(loadingRoomId);\n                        delete this._roomsPendingLeave[loadingRoomId];\n                    }\n                    break;\n                }\n                joinedRoom.isConnected = true;\n                this._notifyPresenceSubs(loadingRoomId);\n                this._flushEnqueuedRoomData(loadingRoomId);\n                break;\n            case \"join-room-error\":\n                const errorRoomId = msg[\"room-id\"];\n                const errorRoom = this._rooms[errorRoomId];\n                if (errorRoom) {\n                    errorRoom.error = msg[\"error\"];\n                }\n                this._notifyPresenceSubs(errorRoomId);\n                break;\n            case \"error\":\n                this._handleReceiveError(msg);\n                break;\n            default:\n                break;\n        }\n    }\n    /**\n     * @param {'timeout' | 'error'} status\n     * @param {string} eventId\n     * @param {{message?: string, hint?: string, error?: Error}} errDetails\n     */\n    _handleMutationError(status, eventId, errDetails) {\n        const mut = this.pendingMutations.currentValue.get(eventId);\n        if (mut && (status !== \"timeout\" || !mut[\"tx-id\"])) {\n            this.pendingMutations.set((prev) => {\n                prev.delete(eventId);\n                return prev;\n            });\n            this.notifyAll();\n            this.notifyAttrsSubs();\n            this.notifyMutationErrorSubs(errDetails);\n            this._finishTransaction(status, eventId, errDetails);\n        }\n    }\n    _handleReceiveError(msg) {\n        var _a, _b, _c, _d;\n        const eventId = msg[\"client-event-id\"];\n        const prevMutation = this.pendingMutations.currentValue.get(eventId);\n        const errorMessage = {\n            message: msg.message || \"Uh-oh, something went wrong. Ping Joe & Stopa.\",\n        };\n        if (msg.hint) {\n            errorMessage.hint = msg.hint;\n        }\n        if (prevMutation) {\n            // This must be a transaction error\n            const errDetails = {\n                message: msg.message,\n                hint: msg.hint,\n            };\n            this._handleMutationError(\"error\", eventId, errDetails);\n            return;\n        }\n        const q = (_a = msg[\"original-event\"]) === null || _a === void 0 ? void 0 : _a.q;\n        if (q && ((_b = msg[\"original-event\"]) === null || _b === void 0 ? void 0 : _b.op) === \"add-query\") {\n            const hash = (0,_utils_weakHash__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(q);\n            this.notifyQueryError((0,_utils_weakHash__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(q), errorMessage);\n            this.notifyQueryOnceError(q, hash, eventId, errorMessage);\n            return;\n        }\n        const isInitError = ((_c = msg[\"original-event\"]) === null || _c === void 0 ? void 0 : _c.op) === \"init\";\n        if (isInitError) {\n            if (msg.type === \"record-not-found\" &&\n                ((_d = msg.hint) === null || _d === void 0 ? void 0 : _d[\"record-type\"]) === \"app-user\") {\n                // User has been logged out\n                this.changeCurrentUser(null);\n                return;\n            }\n            // We failed to init\n            this._setStatus(STATUS.ERRORED, errorMessage);\n            this.notifyAll();\n            return;\n        }\n        // We've caught some error which has no corresponding listener.\n        // Let's console.error to let the user know.\n        const errorObj = Object.assign({}, msg);\n        delete errorObj.message;\n        delete errorObj.hint;\n        console.error(msg.message, errorObj);\n        if (msg.hint) {\n            console.error(\"This error comes with some debugging information. Here it is: \\n\", msg.hint);\n        }\n    }\n    notifyQueryOnceError(q, hash, eventId, e) {\n        var _a;\n        const r = (_a = this.queryOnceDfds[hash]) === null || _a === void 0 ? void 0 : _a.find((r) => r.eventId === eventId);\n        if (!r)\n            return;\n        r.dfd.reject(e);\n        this._completeQueryOnce(q, hash, r.dfd);\n    }\n    _setAttrs(attrs) {\n        this.attrs = attrs.reduce((acc, attr) => {\n            acc[attr.id] = attr;\n            return acc;\n        }, {});\n        this.notifyAttrsSubs();\n    }\n    _startQuerySub(q, hash) {\n        const eventId = (0,_utils_uuid__WEBPACK_IMPORTED_MODULE_5__[\"default\"])();\n        this.querySubs.set((prev) => {\n            prev[hash] = prev[hash] || { q, result: null, eventId };\n            return prev;\n        });\n        this._trySendAuthed(eventId, { op: \"add-query\", q });\n        return eventId;\n    }\n    /**\n     *  When a user subscribes to a query the following side effects occur:\n     *\n     *  - We update querySubs to include the new query\n     *  - We update queryCbs to include the new cb\n     *  - If we already have a result for the query we call cb immediately\n     *  - We send the server an `add-query` message\n     *\n     *  Returns an unsubscribe function\n     */\n    subscribeQuery(q, cb) {\n        var _a;\n        const hash = (0,_utils_weakHash__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(q);\n        const prevResult = this.getPreviousResult(q);\n        if (prevResult) {\n            cb(prevResult);\n        }\n        this.queryCbs[hash] = (_a = this.queryCbs[hash]) !== null && _a !== void 0 ? _a : [];\n        this.queryCbs[hash].push({ q, cb });\n        this._startQuerySub(q, hash);\n        return () => {\n            this._unsubQuery(q, hash, cb);\n        };\n    }\n    queryOnce(q) {\n        var _a;\n        const dfd = new _utils_Deferred__WEBPACK_IMPORTED_MODULE_11__.Deferred();\n        if (!this._isOnline) {\n            dfd.reject(new Error(\"We can't run `queryOnce`, because the device is offline.\"));\n            return dfd.promise;\n        }\n        if (!this.querySubs) {\n            dfd.reject(new Error(\"We can't run `queryOnce` on the backend. Use adminAPI.query instead: https://www.instantdb.com/docs/backend#query\"));\n            return dfd.promise;\n        }\n        const hash = (0,_utils_weakHash__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(q);\n        const eventId = this._startQuerySub(q, hash);\n        this.queryOnceDfds[hash] = (_a = this.queryOnceDfds[hash]) !== null && _a !== void 0 ? _a : [];\n        this.queryOnceDfds[hash].push({ q, dfd, eventId });\n        setTimeout(() => dfd.reject(new Error(\"Query timed out\")), QUERY_ONCE_TIMEOUT);\n        return dfd.promise;\n    }\n    _completeQueryOnce(q, hash, dfd) {\n        if (!this.queryOnceDfds[hash])\n            return;\n        this.queryOnceDfds[hash] = this.queryOnceDfds[hash].filter((r) => r.dfd !== dfd);\n        this._cleanupQuery(q, hash);\n    }\n    _unsubQuery(q, hash, cb) {\n        if (!this.queryCbs[hash])\n            return;\n        this.queryCbs[hash] = this.queryCbs[hash].filter((r) => r.cb !== cb);\n        this._cleanupQuery(q, hash);\n    }\n    _cleanupQuery(q, hash) {\n        var _a, _b;\n        const hasListeners = ((_a = this.queryCbs[hash]) === null || _a === void 0 ? void 0 : _a.length) || ((_b = this.queryOnceDfds[hash]) === null || _b === void 0 ? void 0 : _b.length);\n        if (hasListeners)\n            return;\n        delete this.queryCbs[hash];\n        delete this.queryOnceDfds[hash];\n        this._trySendAuthed((0,_utils_uuid__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(), { op: \"remove-query\", q });\n    }\n    // When we `pushTx`, it's possible that we don't yet have `this.attrs`\n    // This means that `tx-steps` in `pendingMutations` will include `add-attr`\n    // commands for attrs that already exist.\n    //\n    // This will also affect `add-triple` and `retract-triple` which\n    // reference attr-ids that do not match the server.\n    //\n    // We fix this by rewriting `tx-steps` in each `pendingMutation`.\n    // We remove `add-attr` commands for attrs that already exist.\n    // We update `add-triple` and `retract-triple` commands to use the\n    // server attr-ids.\n    _rewriteMutations(attrs, muts) {\n        if (!attrs)\n            return muts;\n        const findExistingAttr = (attr) => {\n            const [_, etype, label] = attr[\"forward-identity\"];\n            const existing = _instaml__WEBPACK_IMPORTED_MODULE_3__.getAttrByFwdIdentName(attrs, etype, label);\n            return existing;\n        };\n        const findReverseAttr = (attr) => {\n            const [_, etype, label] = attr[\"forward-identity\"];\n            const revAttr = _instaml__WEBPACK_IMPORTED_MODULE_3__.getAttrByReverseIdentName(attrs, etype, label);\n            return revAttr;\n        };\n        const mapping = { attrIdMap: {}, refSwapAttrIds: new Set() };\n        const rewriteTxSteps = (txSteps) => {\n            const retTxSteps = [];\n            for (const txStep of txSteps) {\n                const [action] = txStep;\n                // Handles add-attr\n                // If existing, we drop it, and track it\n                // to update add/retract triples\n                if (action === \"add-attr\") {\n                    const [_action, attr] = txStep;\n                    const existing = findExistingAttr(attr);\n                    if (existing) {\n                        mapping.attrIdMap[attr.id] = existing.id;\n                        continue;\n                    }\n                    if (attr[\"value-type\"] === \"ref\") {\n                        const revAttr = findReverseAttr(attr);\n                        if (revAttr) {\n                            mapping.attrIdMap[attr.id] = revAttr.id;\n                            mapping.refSwapAttrIds.add(attr.id);\n                            continue;\n                        }\n                    }\n                }\n                // Handles add-triple|retract-triple\n                // If in mapping, we update the attr-id\n                const newTxStep = _instaml__WEBPACK_IMPORTED_MODULE_3__.rewriteStep(mapping, txStep);\n                retTxSteps.push(newTxStep);\n            }\n            return retTxSteps;\n        };\n        const rewritten = new Map();\n        for (const [k, mut] of muts.entries()) {\n            rewritten.set(k, Object.assign(Object.assign({}, mut), { \"tx-steps\": rewriteTxSteps(mut[\"tx-steps\"]) }));\n        }\n        return rewritten;\n    }\n    // ---------------------------\n    // Transact\n    optimisticAttrs() {\n        var _a;\n        const pendingMutationSteps = [\n            ...this.pendingMutations.currentValue.values(),\n        ] // hack due to Map()\n            .flatMap((x) => x[\"tx-steps\"]);\n        const deletedAttrIds = new Set(pendingMutationSteps\n            .filter(([action, _attr]) => action === \"delete-attr\")\n            .map(([_action, id]) => id));\n        const pendingAttrs = [];\n        for (const [_action, attr] of pendingMutationSteps) {\n            if (_action === \"add-attr\") {\n                pendingAttrs.push(attr);\n            }\n            else if (_action === \"update-attr\" &&\n                attr.id &&\n                ((_a = this.attrs) === null || _a === void 0 ? void 0 : _a[attr.id])) {\n                const fullAttr = Object.assign(Object.assign({}, this.attrs[attr.id]), attr);\n                pendingAttrs.push(fullAttr);\n            }\n        }\n        const attrsWithoutDeleted = [\n            ...Object.values(this.attrs || {}),\n            ...pendingAttrs,\n        ].filter((a) => !deletedAttrIds.has(a.id));\n        const attrsRecord = Object.fromEntries(attrsWithoutDeleted.map((a) => [a.id, a]));\n        return attrsRecord;\n    }\n    /** Runs instaql on a query and a store */\n    dataForQuery(hash) {\n        const errorMessage = this._errorMessage;\n        if (errorMessage) {\n            return { error: errorMessage };\n        }\n        if (!this.querySubs)\n            return;\n        if (!this.pendingMutations)\n            return;\n        const querySubVersion = this.querySubs.version();\n        const querySubs = this.querySubs.currentValue;\n        const pendingMutationsVersion = this.pendingMutations.version();\n        const pendingMutations = this.pendingMutations.currentValue;\n        const { q, result } = querySubs[hash] || {};\n        if (!result)\n            return;\n        const cached = this._dataForQueryCache[hash];\n        if (cached &&\n            querySubVersion === cached.querySubVersion &&\n            pendingMutationsVersion === cached.pendingMutationsVersion) {\n            return cached.data;\n        }\n        const { store, pageInfo, aggregate } = result;\n        const muts = this._rewriteMutations(store.attrs, pendingMutations);\n        const txSteps = [...muts.values()].flatMap((x) => x[\"tx-steps\"]);\n        const newStore = _store__WEBPACK_IMPORTED_MODULE_4__.transact(store, txSteps);\n        const resp = (0,_instaql__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({ store: newStore, pageInfo, aggregate }, q);\n        this._dataForQueryCache[hash] = {\n            querySubVersion,\n            pendingMutationsVersion,\n            data: resp,\n        };\n        return resp;\n    }\n    /** Re-compute all subscriptions */\n    notifyAll() {\n        Object.keys(this.queryCbs).forEach((hash) => {\n            this.notifyOne(hash);\n        });\n    }\n    loadedNotifyAll() {\n        if (this.pendingMutations.isLoading() || this.querySubs.isLoading())\n            return;\n        this.notifyAll();\n    }\n    shutdown() {\n        this._isShutdown = true;\n        this._ws.close();\n    }\n    /**\n     * Sends mutation to server and schedules a timeout to cancel it if\n     * we don't hear back in time.\n     * Note: If we're offline we don't schedule a timeout, we'll schedule it\n     * later once we're back online and send the mutation again\n     *\n     */\n    _sendMutation(eventId, mutation) {\n        if (mutation.error) {\n            this._handleMutationError(\"error\", eventId, {\n                error: mutation.error,\n                message: mutation.error.message,\n            });\n            return;\n        }\n        if (this.status !== STATUS.AUTHENTICATED) {\n            this._finishTransaction(\"enqueued\", eventId);\n            return;\n        }\n        const timeoutMs = Math.max(5000, this.pendingMutations.currentValue.size * 5000);\n        if (!this._isOnline) {\n            this._finishTransaction(\"enqueued\", eventId);\n        }\n        else {\n            this._trySend(eventId, mutation);\n            // If a transaction is pending for over 3 seconds,\n            // we want to unblock the UX, so mark it as pending\n            // and keep trying to process the transaction in the background\n            setTimeout(() => {\n                this._finishTransaction(\"pending\", eventId);\n            }, 3000);\n            setTimeout(() => {\n                if (!this._isOnline) {\n                    return;\n                }\n                // If we are here, this means that we have sent this mutation, we are online\n                // but we have not received a response. If it's this long, something must be wrong,\n                // so we error with a timeout.\n                this._handleMutationError(\"timeout\", eventId, {\n                    message: \"transaction timed out\",\n                });\n            }, timeoutMs);\n        }\n    }\n    // ---------------------------\n    // Websocket\n    /** Send messages we accumulated while we were connecting */\n    _flushPendingMessages() {\n        const subs = Object.keys(this.queryCbs).map((hash) => {\n            return this.querySubs.currentValue[hash];\n        });\n        // Note: we should not have any nulls in subs, but we're\n        // doing this defensively just in case.\n        const safeSubs = subs.filter((x) => x);\n        safeSubs.forEach(({ eventId, q }) => {\n            this._trySendAuthed(eventId, { op: \"add-query\", q });\n        });\n        Object.values(this.queryOnceDfds)\n            .flat()\n            .forEach(({ eventId, q }) => {\n            this._trySendAuthed(eventId, { op: \"add-query\", q });\n        });\n        const muts = this._rewriteMutations(this.attrs, this.pendingMutations.currentValue);\n        muts.forEach((mut, eventId) => {\n            if (!mut[\"tx-id\"]) {\n                this._sendMutation(eventId, mut);\n            }\n        });\n    }\n    _trySendAuthed(...args) {\n        if (this.status !== STATUS.AUTHENTICATED) {\n            return;\n        }\n        this._trySend(...args);\n    }\n    _trySend(eventId, msg, opts) {\n        if (this._ws.readyState !== WS_OPEN_STATUS) {\n            return;\n        }\n        if (!ignoreLogging[msg.op]) {\n            _utils_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"].info(\"[send]\", this._ws._id, msg.op, msg);\n        }\n        this._ws.send(JSON.stringify(Object.assign({ \"client-event-id\": eventId }, msg)));\n    }\n    _startSocket() {\n        if (this._ws && this._ws.readyState == WS_CONNECTING_STATUS) {\n            // Our current websocket is in a 'connecting' state.\n            // There's no need to start another one, as the socket is\n            // effectively fresh.\n            _utils_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"].info(\"[socket][start]\", this._ws._id, \"maintained as current ws, we were still in a connecting state\");\n            return;\n        }\n        const prevWs = this._ws;\n        this._ws = createWebSocket(`${this.config.websocketURI}?app_id=${this.config.appId}`);\n        this._ws.onopen = this._wsOnOpen;\n        this._ws.onmessage = this._wsOnMessage;\n        this._ws.onclose = this._wsOnClose;\n        this._ws.onerror = this._wsOnError;\n        _utils_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"].info(\"[socket][start]\", this._ws._id);\n        if ((prevWs === null || prevWs === void 0 ? void 0 : prevWs.readyState) === WS_OPEN_STATUS) {\n            // When the network dies, it doesn't always mean that our\n            // socket connection will fire a close event.\n            //\n            // We _could_ re-use the old socket, if the network drop was a\n            // few seconds. But, to be safe right now we always create a new socket.\n            //\n            // This means that we have to make sure to kill the previous one ourselves.\n            // c.f https://issues.chromium.org/issues/41343684\n            _utils_log__WEBPACK_IMPORTED_MODULE_0__[\"default\"].info(\"[socket][start]\", this._ws._id, \"close previous ws id = \", prevWs._id);\n            prevWs.close();\n        }\n    }\n    /**\n     * Given a key, returns a stable local id, unique to this device and app.\n     *\n     * This can be useful if you want to create guest ids for example.\n     *\n     * Note: If the user deletes their local storage, this id will change.\n     *\n     * We use this._localIdPromises to ensure that we only generate a local\n     * id once, even if multiple callers call this function concurrently.\n     */\n    getLocalId(name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const k = `localToken_${name}`;\n            const id = yield this._persister.getItem(k);\n            if (id)\n                return id;\n            if (this._localIdPromises[k]) {\n                return this._localIdPromises[k];\n            }\n            const newId = (0,_utils_uuid__WEBPACK_IMPORTED_MODULE_5__[\"default\"])();\n            this._localIdPromises[k] = this._persister\n                .setItem(k, newId)\n                .then(() => newId);\n            return this._localIdPromises[k];\n        });\n    }\n    // ----\n    // Auth\n    _replaceUrlAfterOAuth() {\n        if (typeof URL === \"undefined\") {\n            return;\n        }\n        const url = new URL(window.location.href);\n        if (url.searchParams.get(OAUTH_REDIRECT_PARAM)) {\n            const startUrl = url.toString();\n            url.searchParams.delete(OAUTH_REDIRECT_PARAM);\n            url.searchParams.delete(\"code\");\n            url.searchParams.delete(\"error\");\n            const newPath = url.pathname +\n                (url.searchParams.size ? \"?\" + url.searchParams : \"\") +\n                url.hash;\n            // Note: In next.js, this will revert to the old state if user navigates\n            //       back. We would need to allow framework specific routing to work\n            //       around that problem.\n            history.replaceState(history.state, \"\", newPath);\n            // navigation is part of the HTML spec, but not supported by Safari\n            // or Firefox yet:\n            // https://developer.mozilla.org/en-US/docs/Web/API/Navigation_API#browser_compatibility\n            if (\n            // @ts-ignore (waiting for ts support)\n            typeof navigation === \"object\" &&\n                // @ts-ignore (waiting for ts support)\n                typeof navigation.addEventListener === \"function\" &&\n                // @ts-ignore (waiting for ts support)\n                typeof navigation.removeEventListener === \"function\") {\n                let ran = false;\n                // The next.js app router will reset the URL when the router loads.\n                // This puts it back after the router loads.\n                const listener = (e) => {\n                    var _a;\n                    if (!ran) {\n                        ran = true;\n                        // @ts-ignore (waiting for ts support)\n                        navigation.removeEventListener(\"navigate\", listener);\n                        if (!e.userInitiated &&\n                            e.navigationType === \"replace\" &&\n                            ((_a = e.destination) === null || _a === void 0 ? void 0 : _a.url) === startUrl) {\n                            history.replaceState(history.state, \"\", newPath);\n                        }\n                    }\n                };\n                // @ts-ignore (waiting for ts support)\n                navigation.addEventListener(\"navigate\", listener);\n            }\n        }\n    }\n    /**\n     *\n     * @returns Promise<null | {error: {message: string}}>\n     */\n    _oauthLoginInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c, _d;\n            if (typeof window === \"undefined\" ||\n                typeof window.location === \"undefined\" ||\n                typeof URLSearchParams === \"undefined\") {\n                return null;\n            }\n            const params = new URLSearchParams(window.location.search);\n            if (!params.get(OAUTH_REDIRECT_PARAM)) {\n                return null;\n            }\n            const error = params.get(\"error\");\n            if (error) {\n                this._replaceUrlAfterOAuth();\n                return { error: { message: error } };\n            }\n            const code = params.get(\"code\");\n            if (!code) {\n                return null;\n            }\n            this._replaceUrlAfterOAuth();\n            try {\n                const { user } = yield _authAPI__WEBPACK_IMPORTED_MODULE_8__.exchangeCodeForToken({\n                    apiURI: this.config.apiURI,\n                    appId: this.config.appId,\n                    code,\n                });\n                this.setCurrentUser(user);\n                return null;\n            }\n            catch (e) {\n                if (((_a = e === null || e === void 0 ? void 0 : e.body) === null || _a === void 0 ? void 0 : _a.type) === \"record-not-found\" &&\n                    ((_c = (_b = e === null || e === void 0 ? void 0 : e.body) === null || _b === void 0 ? void 0 : _b.hint) === null || _c === void 0 ? void 0 : _c[\"record-type\"]) === \"app-oauth-code\" &&\n                    (yield this._hasCurrentUser())) {\n                    // We probably just weren't able to clean up the URL, so\n                    // let's just ignore this error\n                    return null;\n                }\n                const message = ((_d = e === null || e === void 0 ? void 0 : e.body) === null || _d === void 0 ? void 0 : _d.message) || \"Error logging in.\";\n                return { error: { message } };\n            }\n        });\n    }\n    _waitForOAuthCallbackResponse() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this._oauthCallbackResponse;\n        });\n    }\n    __subscribeMutationErrors(cb) {\n        this.mutationErrorCbs.push(cb);\n        return () => {\n            this.mutationErrorCbs = this.mutationErrorCbs.filter((x) => x !== cb);\n        };\n    }\n    subscribeAuth(cb) {\n        this.authCbs.push(cb);\n        const currUserCached = this._currentUserCached;\n        if (!currUserCached.isLoading) {\n            cb(this._currentUserCached);\n        }\n        let unsubbed = false;\n        this.getCurrentUser().then((resp) => {\n            if (unsubbed)\n                return;\n            if ((0,_utils_object__WEBPACK_IMPORTED_MODULE_14__.areObjectsDeepEqual)(resp, currUserCached))\n                return;\n            cb(resp);\n        });\n        return () => {\n            unsubbed = true;\n            this.authCbs = this.authCbs.filter((x) => x !== cb);\n        };\n    }\n    subscribeConnectionStatus(cb) {\n        this.connectionStatusCbs.push(cb);\n        return () => {\n            this.connectionStatusCbs = this.connectionStatusCbs.filter((x) => x !== cb);\n        };\n    }\n    subscribeAttrs(cb) {\n        this.attrsCbs.push(cb);\n        if (this.attrs) {\n            cb(this.attrs);\n        }\n        return () => {\n            this.attrsCbs = this.attrsCbs.filter((x) => x !== cb);\n        };\n    }\n    notifyAuthSubs(user) {\n        this.authCbs.forEach((cb) => cb(user));\n    }\n    notifyMutationErrorSubs(error) {\n        this.mutationErrorCbs.forEach((cb) => cb(error));\n    }\n    notifyAttrsSubs() {\n        if (!this.attrs)\n            return;\n        const oas = this.optimisticAttrs();\n        this.attrsCbs.forEach((cb) => cb(oas));\n    }\n    notifyConnectionStatusSubs(status) {\n        this.connectionStatusCbs.forEach((cb) => cb(status));\n    }\n    setCurrentUser(user) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._persister.setItem(currentUserKey, JSON.stringify(user));\n        });\n    }\n    getCurrentUserCached() {\n        return this._currentUserCached;\n    }\n    getCurrentUser() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const oauthResp = yield this._waitForOAuthCallbackResponse();\n            if (oauthResp === null || oauthResp === void 0 ? void 0 : oauthResp.error) {\n                const errorV = { error: oauthResp.error, user: undefined };\n                this._currentUserCached = Object.assign({ isLoading: false }, errorV);\n                return errorV;\n            }\n            const user = yield this._persister.getItem(currentUserKey);\n            const userV = { user: JSON.parse(user), error: undefined };\n            this._currentUserCached = Object.assign({ isLoading: false }, userV);\n            return userV;\n        });\n    }\n    _hasCurrentUser() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const user = yield this._persister.getItem(currentUserKey);\n            return JSON.parse(user) != null;\n        });\n    }\n    changeCurrentUser(newUser) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const { user: oldUser } = yield this.getCurrentUser();\n            if ((0,_utils_object__WEBPACK_IMPORTED_MODULE_14__.areObjectsDeepEqual)(oldUser, newUser)) {\n                // We were already logged in as the newUser, don't\n                // bother updating\n                return;\n            }\n            yield this.setCurrentUser(newUser);\n            // We need to remove all `result` from querySubs,\n            // as they are no longer valid for the new user\n            this.updateUser(newUser);\n            try {\n                (_a = this._broadcastChannel) === null || _a === void 0 ? void 0 : _a.postMessage({ type: \"auth\" });\n            }\n            catch (error) {\n                console.error(\"Error posting message to broadcast channel\", error);\n            }\n        });\n    }\n    updateUser(newUser) {\n        const newV = { error: undefined, user: newUser };\n        this._currentUserCached = Object.assign({ isLoading: false }, newV);\n        this._dataForQueryCache = {};\n        this.querySubs.set((prev) => {\n            Object.keys(prev).forEach((k) => {\n                delete prev[k].result;\n            });\n            return prev;\n        });\n        this._reconnectTimeoutMs = 0;\n        this._ws.close();\n        this._oauthCallbackResponse = null;\n        this.notifyAuthSubs(newV);\n    }\n    sendMagicCode({ email }) {\n        return _authAPI__WEBPACK_IMPORTED_MODULE_8__.sendMagicCode({\n            apiURI: this.config.apiURI,\n            appId: this.config.appId,\n            email: email,\n        });\n    }\n    signInWithMagicCode(_a) {\n        return __awaiter(this, arguments, void 0, function* ({ email, code }) {\n            const res = yield _authAPI__WEBPACK_IMPORTED_MODULE_8__.verifyMagicCode({\n                apiURI: this.config.apiURI,\n                appId: this.config.appId,\n                email,\n                code,\n            });\n            yield this.changeCurrentUser(res.user);\n            return res;\n        });\n    }\n    signInWithCustomToken(authToken) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield _authAPI__WEBPACK_IMPORTED_MODULE_8__.verifyRefreshToken({\n                apiURI: this.config.apiURI,\n                appId: this.config.appId,\n                refreshToken: authToken,\n            });\n            yield this.changeCurrentUser(res.user);\n            return res;\n        });\n    }\n    signOut() {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const currentUser = yield this.getCurrentUser();\n            const refreshToken = (_a = currentUser === null || currentUser === void 0 ? void 0 : currentUser.user) === null || _a === void 0 ? void 0 : _a.refresh_token;\n            if (refreshToken) {\n                try {\n                    yield _authAPI__WEBPACK_IMPORTED_MODULE_8__.signOut({\n                        apiURI: this.config.apiURI,\n                        appId: this.config.appId,\n                        refreshToken,\n                    });\n                }\n                catch (e) { }\n            }\n            yield this.changeCurrentUser(null);\n        });\n    }\n    /**\n     * Creates an OAuth authorization URL.\n     * @param {Object} params - The parameters to create the authorization URL.\n     * @param {string} params.clientName - The name of the client requesting authorization.\n     * @param {string} params.redirectURL - The URL to redirect users to after authorization.\n     * @returns {string} The created authorization URL.\n     */\n    createAuthorizationURL({ clientName, redirectURL }) {\n        const { apiURI, appId } = this.config;\n        return `${apiURI}/runtime/oauth/start?app_id=${appId}&client_name=${clientName}&redirect_uri=${redirectURL}`;\n    }\n    exchangeCodeForToken(_a) {\n        return __awaiter(this, arguments, void 0, function* ({ code, codeVerifier }) {\n            const res = yield _authAPI__WEBPACK_IMPORTED_MODULE_8__.exchangeCodeForToken({\n                apiURI: this.config.apiURI,\n                appId: this.config.appId,\n                code: code,\n                codeVerifier,\n            });\n            yield this.changeCurrentUser(res.user);\n            return res;\n        });\n    }\n    issuerURI() {\n        const { apiURI, appId } = this.config;\n        return `${apiURI}/runtime/${appId}`;\n    }\n    /**\n     * @param {Object} params\n     * @param {string} params.clientName - The name of the client requesting authorization.\n     * @param {string} params.idToken - The id_token from the external service\n     * @param {string | null | undefined} [params.nonce] - The nonce used when requesting the id_token from the external service\n     */\n    signInWithIdToken(_a) {\n        return __awaiter(this, arguments, void 0, function* ({ idToken, clientName, nonce }) {\n            var _b;\n            const currentUser = yield this.getCurrentUser();\n            const refreshToken = (_b = currentUser === null || currentUser === void 0 ? void 0 : currentUser.user) === null || _b === void 0 ? void 0 : _b.refresh_token;\n            const res = yield _authAPI__WEBPACK_IMPORTED_MODULE_8__.signInWithIdToken({\n                apiURI: this.config.apiURI,\n                appId: this.config.appId,\n                idToken,\n                clientName,\n                nonce,\n                refreshToken,\n            });\n            yield this.changeCurrentUser(res.user);\n            return res;\n        });\n    }\n    // --------\n    // Rooms\n    joinRoom(roomId) {\n        if (!this._rooms[roomId]) {\n            this._rooms[roomId] = {\n                isConnected: false,\n                error: undefined,\n            };\n        }\n        this._presence[roomId] = this._presence[roomId] || {};\n        this._tryJoinRoom(roomId);\n        return () => {\n            this._cleanupRoom(roomId);\n        };\n    }\n    _cleanupRoom(roomId) {\n        var _a, _b, _c, _d;\n        if (!((_b = (_a = this._presence[roomId]) === null || _a === void 0 ? void 0 : _a.handlers) === null || _b === void 0 ? void 0 : _b.length) &&\n            !Object.keys((_c = this._broadcastSubs[roomId]) !== null && _c !== void 0 ? _c : {}).length) {\n            const isConnected = (_d = this._rooms[roomId]) === null || _d === void 0 ? void 0 : _d.isConnected;\n            delete this._rooms[roomId];\n            delete this._presence[roomId];\n            delete this._broadcastSubs[roomId];\n            if (isConnected) {\n                this._tryLeaveRoom(roomId);\n            }\n            else {\n                this._roomsPendingLeave[roomId] = true;\n            }\n        }\n    }\n    // --------\n    // Presence\n    // TODO: look into typing again\n    getPresence(roomType, roomId, opts = {}) {\n        const room = this._rooms[roomId];\n        const presence = this._presence[roomId];\n        if (!room || !presence || !presence.result)\n            return null;\n        return Object.assign(Object.assign({}, (0,_presence__WEBPACK_IMPORTED_MODULE_10__.buildPresenceSlice)(presence.result, opts, this._sessionId)), { isLoading: !room.isConnected, error: room.error });\n    }\n    // TODO: look into typing again\n    publishPresence(roomType, roomId, partialData) {\n        const room = this._rooms[roomId];\n        const presence = this._presence[roomId];\n        if (!room || !presence) {\n            return;\n        }\n        presence.result = presence.result || {};\n        const data = Object.assign(Object.assign({}, presence.result.user), partialData);\n        presence.result.user = data;\n        if (!room.isConnected) {\n            return;\n        }\n        this._trySetPresence(roomId, data);\n        this._notifyPresenceSubs(roomId);\n    }\n    _trySetPresence(roomId, data) {\n        this._trySendAuthed((0,_utils_uuid__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(), {\n            op: \"set-presence\",\n            \"room-id\": roomId,\n            data,\n        });\n    }\n    _tryJoinRoom(roomId) {\n        this._trySendAuthed((0,_utils_uuid__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(), { op: \"join-room\", \"room-id\": roomId });\n        delete this._roomsPendingLeave[roomId];\n    }\n    _tryLeaveRoom(roomId) {\n        this._trySendAuthed((0,_utils_uuid__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(), { op: \"leave-room\", \"room-id\": roomId });\n    }\n    // TODO: look into typing again\n    subscribePresence(roomType, roomId, opts, cb) {\n        const leaveRoom = this.joinRoom(roomId);\n        const handler = Object.assign(Object.assign({}, opts), { roomId, cb, prev: null });\n        this._presence[roomId] = this._presence[roomId] || {};\n        this._presence[roomId].handlers = this._presence[roomId].handlers || [];\n        this._presence[roomId].handlers.push(handler);\n        this._notifyPresenceSub(roomId, handler);\n        return () => {\n            var _a, _b, _c;\n            this._presence[roomId].handlers =\n                (_c = (_b = (_a = this._presence[roomId]) === null || _a === void 0 ? void 0 : _a.handlers) === null || _b === void 0 ? void 0 : _b.filter((x) => x !== handler)) !== null && _c !== void 0 ? _c : [];\n            leaveRoom();\n        };\n    }\n    _notifyPresenceSubs(roomId) {\n        var _a, _b;\n        (_b = (_a = this._presence[roomId]) === null || _a === void 0 ? void 0 : _a.handlers) === null || _b === void 0 ? void 0 : _b.forEach((handler) => {\n            this._notifyPresenceSub(roomId, handler);\n        });\n    }\n    _notifyPresenceSub(roomId, handler) {\n        const slice = this.getPresence(\"\", roomId, handler);\n        if (!slice) {\n            return;\n        }\n        if (handler.prev && !(0,_presence__WEBPACK_IMPORTED_MODULE_10__.hasPresenceResponseChanged)(slice, handler.prev)) {\n            return;\n        }\n        handler.prev = slice;\n        handler.cb(slice);\n    }\n    _setPresencePeers(roomId, data) {\n        const sessions = Object.assign({}, data);\n        // no need to keep track of `user`\n        delete sessions[this._sessionId];\n        const peers = Object.fromEntries(Object.entries(sessions).map(([k, v]) => [k, v.data]));\n        this._presence[roomId] = this._presence[roomId] || {};\n        this._presence[roomId].result = this._presence[roomId].result || {};\n        this._presence[roomId].result.peers = peers;\n    }\n    // --------\n    // Broadcast\n    publishTopic({ roomType, roomId, topic, data }) {\n        var _a;\n        const room = this._rooms[roomId];\n        if (!room) {\n            return;\n        }\n        if (!room.isConnected) {\n            this._broadcastQueue[roomId] = (_a = this._broadcastQueue[roomId]) !== null && _a !== void 0 ? _a : [];\n            this._broadcastQueue[roomId].push({ topic, roomType, data });\n            return;\n        }\n        this._tryBroadcast(roomId, roomType, topic, data);\n    }\n    _tryBroadcast(roomId, roomType, topic, data) {\n        this._trySendAuthed((0,_utils_uuid__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(), {\n            op: \"client-broadcast\",\n            \"room-id\": roomId,\n            roomType,\n            topic,\n            data,\n        });\n    }\n    subscribeTopic(roomId, topic, cb) {\n        const leaveRoom = this.joinRoom(roomId);\n        this._broadcastSubs[roomId] = this._broadcastSubs[roomId] || {};\n        this._broadcastSubs[roomId][topic] =\n            this._broadcastSubs[roomId][topic] || [];\n        this._broadcastSubs[roomId][topic].push(cb);\n        this._presence[roomId] = this._presence[roomId] || {};\n        return () => {\n            this._broadcastSubs[roomId][topic] = this._broadcastSubs[roomId][topic].filter((x) => x !== cb);\n            if (!this._broadcastSubs[roomId][topic].length) {\n                delete this._broadcastSubs[roomId][topic];\n            }\n            leaveRoom();\n        };\n    }\n    _notifyBroadcastSubs(room, topic, msg) {\n        var _a, _b, _c;\n        (_c = (_b = (_a = this._broadcastSubs) === null || _a === void 0 ? void 0 : _a[room]) === null || _b === void 0 ? void 0 : _b[topic]) === null || _c === void 0 ? void 0 : _c.forEach((cb) => {\n            var _a, _b, _c, _d, _e, _f;\n            const data = (_a = msg.data) === null || _a === void 0 ? void 0 : _a.data;\n            const peer = msg.data[\"peer-id\"] === this._sessionId\n                ? (_c = (_b = this._presence[room]) === null || _b === void 0 ? void 0 : _b.result) === null || _c === void 0 ? void 0 : _c.user\n                : (_f = (_e = (_d = this._presence[room]) === null || _d === void 0 ? void 0 : _d.result) === null || _e === void 0 ? void 0 : _e.peers) === null || _f === void 0 ? void 0 : _f[msg.data[\"peer-id\"]];\n            return cb(data, peer);\n        });\n    }\n    // --------\n    // Storage\n    upload(path, file) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const currentUser = yield this.getCurrentUser();\n            const refreshToken = (_a = currentUser === null || currentUser === void 0 ? void 0 : currentUser.user) === null || _a === void 0 ? void 0 : _a.refresh_token;\n            const fileName = path || file.name;\n            const url = yield _StorageAPI__WEBPACK_IMPORTED_MODULE_9__.getSignedUploadUrl({\n                apiURI: this.config.apiURI,\n                appId: this.config.appId,\n                fileName: fileName,\n                refreshToken: refreshToken,\n            });\n            const isSuccess = yield _StorageAPI__WEBPACK_IMPORTED_MODULE_9__.upload(url, file);\n            return isSuccess;\n        });\n    }\n    getDownloadUrl(path) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const currentUser = yield this.getCurrentUser();\n            const refreshToken = (_a = currentUser === null || currentUser === void 0 ? void 0 : currentUser.user) === null || _a === void 0 ? void 0 : _a.refresh_token;\n            const url = yield _StorageAPI__WEBPACK_IMPORTED_MODULE_9__.getDownloadUrl({\n                apiURI: this.config.apiURI,\n                appId: this.config.appId,\n                path: path,\n                refreshToken: refreshToken,\n            });\n            return url;\n        });\n    }\n    deleteFile(path) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const currentUser = yield this.getCurrentUser();\n            const refreshToken = (_a = currentUser === null || currentUser === void 0 ? void 0 : currentUser.user) === null || _a === void 0 ? void 0 : _a.refresh_token;\n            const result = yield _StorageAPI__WEBPACK_IMPORTED_MODULE_9__.deleteFile({\n                apiURI: this.config.apiURI,\n                appId: this.config.appId,\n                path: path,\n                refreshToken: refreshToken,\n            });\n            return result;\n        });\n    }\n}\n//# sourceMappingURL=Reactor.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/Reactor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/StorageAPI.js":
/*!****************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/StorageAPI.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteFile: () => (/* binding */ deleteFile),\n/* harmony export */   getDownloadUrl: () => (/* binding */ getDownloadUrl),\n/* harmony export */   getSignedUploadUrl: () => (/* binding */ getSignedUploadUrl),\n/* harmony export */   upload: () => (/* binding */ upload)\n/* harmony export */ });\n/* harmony import */ var _utils_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/fetch */ \"(ssr)/./node_modules/@instantdb/core/dist/module/utils/fetch.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nfunction getSignedUploadUrl(_a) {\n    return __awaiter(this, arguments, void 0, function* ({ apiURI, appId, fileName, refreshToken, metadata = {}, }) {\n        const { data } = yield (0,_utils_fetch__WEBPACK_IMPORTED_MODULE_0__.jsonFetch)(`${apiURI}/storage/signed-upload-url`, {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n                authorization: `Bearer ${refreshToken}`,\n            },\n            body: JSON.stringify({\n                app_id: appId,\n                filename: fileName,\n            }),\n        });\n        return data;\n    });\n}\nfunction upload(presignedUrl, file) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const response = yield fetch(presignedUrl, {\n            method: \"PUT\",\n            body: file,\n            headers: {\n                \"Content-Type\": file.type,\n            },\n        });\n        return response.ok;\n    });\n}\nfunction getDownloadUrl(_a) {\n    return __awaiter(this, arguments, void 0, function* ({ apiURI, appId, path, refreshToken, }) {\n        const { data } = yield (0,_utils_fetch__WEBPACK_IMPORTED_MODULE_0__.jsonFetch)(`${apiURI}/storage/signed-download-url?app_id=${appId}&filename=${encodeURIComponent(path)}`, {\n            method: \"GET\",\n            headers: {\n                \"content-type\": \"application/json\",\n                authorization: `Bearer ${refreshToken}`,\n            },\n        });\n        return data;\n    });\n}\nfunction deleteFile(_a) {\n    return __awaiter(this, arguments, void 0, function* ({ apiURI, appId, path, refreshToken, }) {\n        const { data } = yield (0,_utils_fetch__WEBPACK_IMPORTED_MODULE_0__.jsonFetch)(`${apiURI}/storage/files?app_id=${appId}&filename=${encodeURIComponent(path)}`, {\n            method: \"DELETE\",\n            headers: {\n                \"content-type\": \"application/json\",\n                authorization: `Bearer ${refreshToken}`,\n            },\n        });\n        return data;\n    });\n}\n//# sourceMappingURL=StorageAPI.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL1N0b3JhZ2VBUEkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxpQkFBaUIsU0FBSSxJQUFJLFNBQUk7QUFDN0IsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDMEM7QUFDbkM7QUFDUCwyREFBMkQsb0RBQW9ELEdBQUc7QUFDbEgsZ0JBQWdCLE9BQU8sUUFBUSx1REFBUyxJQUFJLE9BQU87QUFDbkQ7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLGFBQWE7QUFDdEQsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQSxLQUFLO0FBQ0w7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQSxLQUFLO0FBQ0w7QUFDTztBQUNQLDJEQUEyRCxvQ0FBb0M7QUFDL0YsZ0JBQWdCLE9BQU8sUUFBUSx1REFBUyxJQUFJLE9BQU8sc0NBQXNDLE1BQU0sWUFBWSx5QkFBeUI7QUFDcEk7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLGFBQWE7QUFDdEQsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNPO0FBQ1AsMkRBQTJELG9DQUFvQztBQUMvRixnQkFBZ0IsT0FBTyxRQUFRLHVEQUFTLElBQUksT0FBTyx3QkFBd0IsTUFBTSxZQUFZLHlCQUF5QjtBQUN0SDtBQUNBO0FBQ0E7QUFDQSx5Q0FBeUMsYUFBYTtBQUN0RCxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcREVMTFxcRG9jdW1lbnRzXFxlbWFpbC1jaGF0LWludGVyZmFjZVxcbm9kZV9tb2R1bGVzXFxAaW5zdGFudGRiXFxjb3JlXFxkaXN0XFxtb2R1bGVcXFN0b3JhZ2VBUEkuanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5pbXBvcnQgeyBqc29uRmV0Y2ggfSBmcm9tIFwiLi91dGlscy9mZXRjaFwiO1xuZXhwb3J0IGZ1bmN0aW9uIGdldFNpZ25lZFVwbG9hZFVybChfYSkge1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgYXJndW1lbnRzLCB2b2lkIDAsIGZ1bmN0aW9uKiAoeyBhcGlVUkksIGFwcElkLCBmaWxlTmFtZSwgcmVmcmVzaFRva2VuLCBtZXRhZGF0YSA9IHt9LCB9KSB7XG4gICAgICAgIGNvbnN0IHsgZGF0YSB9ID0geWllbGQganNvbkZldGNoKGAke2FwaVVSSX0vc3RvcmFnZS9zaWduZWQtdXBsb2FkLXVybGAsIHtcbiAgICAgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICAgICAgICAgICAgYXV0aG9yaXphdGlvbjogYEJlYXJlciAke3JlZnJlc2hUb2tlbn1gLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgICAgICBhcHBfaWQ6IGFwcElkLFxuICAgICAgICAgICAgICAgIGZpbGVuYW1lOiBmaWxlTmFtZSxcbiAgICAgICAgICAgIH0pLFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gdXBsb2FkKHByZXNpZ25lZFVybCwgZmlsZSkge1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0geWllbGQgZmV0Y2gocHJlc2lnbmVkVXJsLCB7XG4gICAgICAgICAgICBtZXRob2Q6IFwiUFVUXCIsXG4gICAgICAgICAgICBib2R5OiBmaWxlLFxuICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IGZpbGUudHlwZSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gcmVzcG9uc2Uub2s7XG4gICAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0RG93bmxvYWRVcmwoX2EpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIGFyZ3VtZW50cywgdm9pZCAwLCBmdW5jdGlvbiogKHsgYXBpVVJJLCBhcHBJZCwgcGF0aCwgcmVmcmVzaFRva2VuLCB9KSB7XG4gICAgICAgIGNvbnN0IHsgZGF0YSB9ID0geWllbGQganNvbkZldGNoKGAke2FwaVVSSX0vc3RvcmFnZS9zaWduZWQtZG93bmxvYWQtdXJsP2FwcF9pZD0ke2FwcElkfSZmaWxlbmFtZT0ke2VuY29kZVVSSUNvbXBvbmVudChwYXRoKX1gLCB7XG4gICAgICAgICAgICBtZXRob2Q6IFwiR0VUXCIsXG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICAgICAgICAgICAgYXV0aG9yaXphdGlvbjogYEJlYXJlciAke3JlZnJlc2hUb2tlbn1gLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBkYXRhO1xuICAgIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGRlbGV0ZUZpbGUoX2EpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIGFyZ3VtZW50cywgdm9pZCAwLCBmdW5jdGlvbiogKHsgYXBpVVJJLCBhcHBJZCwgcGF0aCwgcmVmcmVzaFRva2VuLCB9KSB7XG4gICAgICAgIGNvbnN0IHsgZGF0YSB9ID0geWllbGQganNvbkZldGNoKGAke2FwaVVSSX0vc3RvcmFnZS9maWxlcz9hcHBfaWQ9JHthcHBJZH0mZmlsZW5hbWU9JHtlbmNvZGVVUklDb21wb25lbnQocGF0aCl9YCwge1xuICAgICAgICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxuICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgIFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgICAgICAgIGF1dGhvcml6YXRpb246IGBCZWFyZXIgJHtyZWZyZXNoVG9rZW59YCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gZGF0YTtcbiAgICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVN0b3JhZ2VBUEkuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/StorageAPI.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/WindowNetworkListener.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/WindowNetworkListener.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ WindowNetworkListener)\n/* harmony export */ });\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass WindowNetworkListener {\n    static getIsOnline() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return navigator.onLine;\n        });\n    }\n    static listen(f) {\n        const onOnline = () => {\n            f(true);\n        };\n        const onOffline = () => {\n            f(false);\n        };\n        addEventListener(\"online\", onOnline);\n        addEventListener(\"offline\", onOffline);\n        return () => {\n            removeEventListener(\"online\", onOnline);\n            removeEventListener(\"offline\", onOffline);\n        };\n    }\n}\n//# sourceMappingURL=WindowNetworkListener.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL1dpbmRvd05ldHdvcmtMaXN0ZW5lci5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUJBQWlCLFNBQUksSUFBSSxTQUFJO0FBQzdCLDRCQUE0QiwrREFBK0QsaUJBQWlCO0FBQzVHO0FBQ0Esb0NBQW9DLE1BQU0sK0JBQStCLFlBQVk7QUFDckYsbUNBQW1DLE1BQU0sbUNBQW1DLFlBQVk7QUFDeEYsZ0NBQWdDO0FBQ2hDO0FBQ0EsS0FBSztBQUNMO0FBQ2U7QUFDZjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxERUxMXFxEb2N1bWVudHNcXGVtYWlsLWNoYXQtaW50ZXJmYWNlXFxub2RlX21vZHVsZXNcXEBpbnN0YW50ZGJcXGNvcmVcXGRpc3RcXG1vZHVsZVxcV2luZG93TmV0d29ya0xpc3RlbmVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgV2luZG93TmV0d29ya0xpc3RlbmVyIHtcbiAgICBzdGF0aWMgZ2V0SXNPbmxpbmUoKSB7XG4gICAgICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICByZXR1cm4gbmF2aWdhdG9yLm9uTGluZTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHN0YXRpYyBsaXN0ZW4oZikge1xuICAgICAgICBjb25zdCBvbk9ubGluZSA9ICgpID0+IHtcbiAgICAgICAgICAgIGYodHJ1ZSk7XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IG9uT2ZmbGluZSA9ICgpID0+IHtcbiAgICAgICAgICAgIGYoZmFsc2UpO1xuICAgICAgICB9O1xuICAgICAgICBhZGRFdmVudExpc3RlbmVyKFwib25saW5lXCIsIG9uT25saW5lKTtcbiAgICAgICAgYWRkRXZlbnRMaXN0ZW5lcihcIm9mZmxpbmVcIiwgb25PZmZsaW5lKTtcbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIHJlbW92ZUV2ZW50TGlzdGVuZXIoXCJvbmxpbmVcIiwgb25PbmxpbmUpO1xuICAgICAgICAgICAgcmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm9mZmxpbmVcIiwgb25PZmZsaW5lKTtcbiAgICAgICAgfTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1XaW5kb3dOZXR3b3JrTGlzdGVuZXIuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/WindowNetworkListener.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/authAPI.js":
/*!*************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/authAPI.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   exchangeCodeForToken: () => (/* binding */ exchangeCodeForToken),\n/* harmony export */   sendMagicCode: () => (/* binding */ sendMagicCode),\n/* harmony export */   signInWithIdToken: () => (/* binding */ signInWithIdToken),\n/* harmony export */   signOut: () => (/* binding */ signOut),\n/* harmony export */   verifyMagicCode: () => (/* binding */ verifyMagicCode),\n/* harmony export */   verifyRefreshToken: () => (/* binding */ verifyRefreshToken)\n/* harmony export */ });\n/* harmony import */ var _utils_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/fetch */ \"(ssr)/./node_modules/@instantdb/core/dist/module/utils/fetch.js\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nfunction sendMagicCode({ apiURI, appId, email }) {\n    return (0,_utils_fetch__WEBPACK_IMPORTED_MODULE_0__.jsonFetch)(`${apiURI}/runtime/auth/send_magic_code`, {\n        method: \"POST\",\n        headers: { \"content-type\": \"application/json\" },\n        body: JSON.stringify({ \"app-id\": appId, email }),\n    });\n}\nfunction verifyMagicCode(_a) {\n    return __awaiter(this, arguments, void 0, function* ({ apiURI, appId, email, code }) {\n        const res = yield (0,_utils_fetch__WEBPACK_IMPORTED_MODULE_0__.jsonFetch)(`${apiURI}/runtime/auth/verify_magic_code`, {\n            method: \"POST\",\n            headers: { \"content-type\": \"application/json\" },\n            body: JSON.stringify({ \"app-id\": appId, email, code }),\n        });\n        return res;\n    });\n}\nfunction verifyRefreshToken(_a) {\n    return __awaiter(this, arguments, void 0, function* ({ apiURI, appId, refreshToken }) {\n        const res = yield (0,_utils_fetch__WEBPACK_IMPORTED_MODULE_0__.jsonFetch)(`${apiURI}/runtime/auth/verify_refresh_token`, {\n            method: \"POST\",\n            headers: { \"content-type\": \"application/json\" },\n            body: JSON.stringify({\n                \"app-id\": appId,\n                \"refresh-token\": refreshToken,\n            }),\n        });\n        return res;\n    });\n}\n/**\n * @param {Object} params\n * @param {string} params.apiURI\n * @param {string} params.appId\n * @param {string} params.code\n * @param {string | null | undefined} [params.codeVerifier]\n */\nfunction exchangeCodeForToken(_a) {\n    return __awaiter(this, arguments, void 0, function* ({ apiURI, appId, code, codeVerifier, }) {\n        const res = yield (0,_utils_fetch__WEBPACK_IMPORTED_MODULE_0__.jsonFetch)(`${apiURI}/runtime/oauth/token`, {\n            method: \"POST\",\n            headers: { \"content-type\": \"application/json\" },\n            body: JSON.stringify({\n                app_id: appId,\n                code: code,\n                code_verifier: codeVerifier,\n            }),\n        });\n        return res;\n    });\n}\n/**\n * @param {Object} params\n * @param {string} params.apiURI\n * @param {string} params.appId\n * @param {string} params.clientName\n * @param {string} params.idToken\n * @param {string | null | undefined} [params.refreshToken]\n * @param {string | null | undefined} [params.nonce]\n */\nfunction signInWithIdToken(_a) {\n    return __awaiter(this, arguments, void 0, function* ({ apiURI, appId, nonce, idToken, clientName, refreshToken, }) {\n        const res = yield (0,_utils_fetch__WEBPACK_IMPORTED_MODULE_0__.jsonFetch)(`${apiURI}/runtime/oauth/id_token`, {\n            method: \"POST\",\n            headers: { \"content-type\": \"application/json\" },\n            body: JSON.stringify({\n                app_id: appId,\n                nonce,\n                id_token: idToken,\n                client_name: clientName,\n                refresh_token: refreshToken,\n            }),\n        });\n        return res;\n    });\n}\n/**\n * @param {Object} params\n * @param {string} params.apiURI\n * @param {string} params.appId\n * @param {string} params.refreshToken\n */\nfunction signOut(_a) {\n    return __awaiter(this, arguments, void 0, function* ({ apiURI, appId, refreshToken }) {\n        const res = yield (0,_utils_fetch__WEBPACK_IMPORTED_MODULE_0__.jsonFetch)(`${apiURI}/runtime/signout`, {\n            method: \"POST\",\n            headers: {\n                \"content-type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                app_id: appId,\n                refresh_token: refreshToken,\n            }),\n        });\n        return res;\n    });\n}\n//# sourceMappingURL=authAPI.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL2F1dGhBUEkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLGlCQUFpQixTQUFJLElBQUksU0FBSTtBQUM3Qiw0QkFBNEIsK0RBQStELGlCQUFpQjtBQUM1RztBQUNBLG9DQUFvQyxNQUFNLCtCQUErQixZQUFZO0FBQ3JGLG1DQUFtQyxNQUFNLG1DQUFtQyxZQUFZO0FBQ3hGLGdDQUFnQztBQUNoQztBQUNBLEtBQUs7QUFDTDtBQUMwQztBQUNuQyx5QkFBeUIsc0JBQXNCO0FBQ3RELFdBQVcsdURBQVMsSUFBSSxPQUFPO0FBQy9CO0FBQ0EsbUJBQW1CLG9DQUFvQztBQUN2RCwrQkFBK0Isd0JBQXdCO0FBQ3ZELEtBQUs7QUFDTDtBQUNPO0FBQ1AsMkRBQTJELDRCQUE0QjtBQUN2RiwwQkFBMEIsdURBQVMsSUFBSSxPQUFPO0FBQzlDO0FBQ0EsdUJBQXVCLG9DQUFvQztBQUMzRCxtQ0FBbUMsOEJBQThCO0FBQ2pFLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNPO0FBQ1AsMkRBQTJELDZCQUE2QjtBQUN4RiwwQkFBMEIsdURBQVMsSUFBSSxPQUFPO0FBQzlDO0FBQ0EsdUJBQXVCLG9DQUFvQztBQUMzRDtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVywyQkFBMkI7QUFDdEM7QUFDTztBQUNQLDJEQUEyRCxvQ0FBb0M7QUFDL0YsMEJBQTBCLHVEQUFTLElBQUksT0FBTztBQUM5QztBQUNBLHVCQUF1QixvQ0FBb0M7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsMkJBQTJCO0FBQ3RDLFdBQVcsMkJBQTJCO0FBQ3RDO0FBQ087QUFDUCwyREFBMkQsMERBQTBEO0FBQ3JILDBCQUEwQix1REFBUyxJQUFJLE9BQU87QUFDOUM7QUFDQSx1QkFBdUIsb0NBQW9DO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQjtBQUNPO0FBQ1AsMkRBQTJELDZCQUE2QjtBQUN4RiwwQkFBMEIsdURBQVMsSUFBSSxPQUFPO0FBQzlDO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcREVMTFxcRG9jdW1lbnRzXFxlbWFpbC1jaGF0LWludGVyZmFjZVxcbm9kZV9tb2R1bGVzXFxAaW5zdGFudGRiXFxjb3JlXFxkaXN0XFxtb2R1bGVcXGF1dGhBUEkuanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5pbXBvcnQgeyBqc29uRmV0Y2ggfSBmcm9tIFwiLi91dGlscy9mZXRjaFwiO1xuZXhwb3J0IGZ1bmN0aW9uIHNlbmRNYWdpY0NvZGUoeyBhcGlVUkksIGFwcElkLCBlbWFpbCB9KSB7XG4gICAgcmV0dXJuIGpzb25GZXRjaChgJHthcGlVUkl9L3J1bnRpbWUvYXV0aC9zZW5kX21hZ2ljX2NvZGVgLCB7XG4gICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgIGhlYWRlcnM6IHsgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIgfSxcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyBcImFwcC1pZFwiOiBhcHBJZCwgZW1haWwgfSksXG4gICAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gdmVyaWZ5TWFnaWNDb2RlKF9hKSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCBhcmd1bWVudHMsIHZvaWQgMCwgZnVuY3Rpb24qICh7IGFwaVVSSSwgYXBwSWQsIGVtYWlsLCBjb2RlIH0pIHtcbiAgICAgICAgY29uc3QgcmVzID0geWllbGQganNvbkZldGNoKGAke2FwaVVSSX0vcnVudGltZS9hdXRoL3ZlcmlmeV9tYWdpY19jb2RlYCwge1xuICAgICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgICAgICAgIGhlYWRlcnM6IHsgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIgfSxcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHsgXCJhcHAtaWRcIjogYXBwSWQsIGVtYWlsLCBjb2RlIH0pLFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHJlcztcbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB2ZXJpZnlSZWZyZXNoVG9rZW4oX2EpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIGFyZ3VtZW50cywgdm9pZCAwLCBmdW5jdGlvbiogKHsgYXBpVVJJLCBhcHBJZCwgcmVmcmVzaFRva2VuIH0pIHtcbiAgICAgICAgY29uc3QgcmVzID0geWllbGQganNvbkZldGNoKGAke2FwaVVSSX0vcnVudGltZS9hdXRoL3ZlcmlmeV9yZWZyZXNoX3Rva2VuYCwge1xuICAgICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgICAgICAgIGhlYWRlcnM6IHsgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIgfSxcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgICAgICBcImFwcC1pZFwiOiBhcHBJZCxcbiAgICAgICAgICAgICAgICBcInJlZnJlc2gtdG9rZW5cIjogcmVmcmVzaFRva2VuLFxuICAgICAgICAgICAgfSksXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gcmVzO1xuICAgIH0pO1xufVxuLyoqXG4gKiBAcGFyYW0ge09iamVjdH0gcGFyYW1zXG4gKiBAcGFyYW0ge3N0cmluZ30gcGFyYW1zLmFwaVVSSVxuICogQHBhcmFtIHtzdHJpbmd9IHBhcmFtcy5hcHBJZFxuICogQHBhcmFtIHtzdHJpbmd9IHBhcmFtcy5jb2RlXG4gKiBAcGFyYW0ge3N0cmluZyB8IG51bGwgfCB1bmRlZmluZWR9IFtwYXJhbXMuY29kZVZlcmlmaWVyXVxuICovXG5leHBvcnQgZnVuY3Rpb24gZXhjaGFuZ2VDb2RlRm9yVG9rZW4oX2EpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIGFyZ3VtZW50cywgdm9pZCAwLCBmdW5jdGlvbiogKHsgYXBpVVJJLCBhcHBJZCwgY29kZSwgY29kZVZlcmlmaWVyLCB9KSB7XG4gICAgICAgIGNvbnN0IHJlcyA9IHlpZWxkIGpzb25GZXRjaChgJHthcGlVUkl9L3J1bnRpbWUvb2F1dGgvdG9rZW5gLCB7XG4gICAgICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgICAgICAgaGVhZGVyczogeyBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIiB9LFxuICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgICAgICAgIGFwcF9pZDogYXBwSWQsXG4gICAgICAgICAgICAgICAgY29kZTogY29kZSxcbiAgICAgICAgICAgICAgICBjb2RlX3ZlcmlmaWVyOiBjb2RlVmVyaWZpZXIsXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiByZXM7XG4gICAgfSk7XG59XG4vKipcbiAqIEBwYXJhbSB7T2JqZWN0fSBwYXJhbXNcbiAqIEBwYXJhbSB7c3RyaW5nfSBwYXJhbXMuYXBpVVJJXG4gKiBAcGFyYW0ge3N0cmluZ30gcGFyYW1zLmFwcElkXG4gKiBAcGFyYW0ge3N0cmluZ30gcGFyYW1zLmNsaWVudE5hbWVcbiAqIEBwYXJhbSB7c3RyaW5nfSBwYXJhbXMuaWRUb2tlblxuICogQHBhcmFtIHtzdHJpbmcgfCBudWxsIHwgdW5kZWZpbmVkfSBbcGFyYW1zLnJlZnJlc2hUb2tlbl1cbiAqIEBwYXJhbSB7c3RyaW5nIHwgbnVsbCB8IHVuZGVmaW5lZH0gW3BhcmFtcy5ub25jZV1cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNpZ25JbldpdGhJZFRva2VuKF9hKSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCBhcmd1bWVudHMsIHZvaWQgMCwgZnVuY3Rpb24qICh7IGFwaVVSSSwgYXBwSWQsIG5vbmNlLCBpZFRva2VuLCBjbGllbnROYW1lLCByZWZyZXNoVG9rZW4sIH0pIHtcbiAgICAgICAgY29uc3QgcmVzID0geWllbGQganNvbkZldGNoKGAke2FwaVVSSX0vcnVudGltZS9vYXV0aC9pZF90b2tlbmAsIHtcbiAgICAgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgICAgICBoZWFkZXJzOiB7IFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiIH0sXG4gICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICAgICAgYXBwX2lkOiBhcHBJZCxcbiAgICAgICAgICAgICAgICBub25jZSxcbiAgICAgICAgICAgICAgICBpZF90b2tlbjogaWRUb2tlbixcbiAgICAgICAgICAgICAgICBjbGllbnRfbmFtZTogY2xpZW50TmFtZSxcbiAgICAgICAgICAgICAgICByZWZyZXNoX3Rva2VuOiByZWZyZXNoVG9rZW4sXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiByZXM7XG4gICAgfSk7XG59XG4vKipcbiAqIEBwYXJhbSB7T2JqZWN0fSBwYXJhbXNcbiAqIEBwYXJhbSB7c3RyaW5nfSBwYXJhbXMuYXBpVVJJXG4gKiBAcGFyYW0ge3N0cmluZ30gcGFyYW1zLmFwcElkXG4gKiBAcGFyYW0ge3N0cmluZ30gcGFyYW1zLnJlZnJlc2hUb2tlblxuICovXG5leHBvcnQgZnVuY3Rpb24gc2lnbk91dChfYSkge1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgYXJndW1lbnRzLCB2b2lkIDAsIGZ1bmN0aW9uKiAoeyBhcGlVUkksIGFwcElkLCByZWZyZXNoVG9rZW4gfSkge1xuICAgICAgICBjb25zdCByZXMgPSB5aWVsZCBqc29uRmV0Y2goYCR7YXBpVVJJfS9ydW50aW1lL3NpZ25vdXRgLCB7XG4gICAgICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgIFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgICAgICBhcHBfaWQ6IGFwcElkLFxuICAgICAgICAgICAgICAgIHJlZnJlc2hfdG9rZW46IHJlZnJlc2hUb2tlbixcbiAgICAgICAgICAgIH0pLFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHJlcztcbiAgICB9KTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWF1dGhBUEkuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/authAPI.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/datalog.js":
/*!*************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/datalog.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   matchPattern: () => (/* binding */ matchPattern),\n/* harmony export */   query: () => (/* binding */ query),\n/* harmony export */   querySingle: () => (/* binding */ querySingle),\n/* harmony export */   queryWhere: () => (/* binding */ queryWhere)\n/* harmony export */ });\n/* harmony import */ var _store_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./store.js */ \"(ssr)/./node_modules/@instantdb/core/dist/module/store.js\");\n// 1. patternMatch\n\nfunction isVariable(x) {\n    return typeof x === \"string\" && x.startsWith(\"?\");\n}\nfunction matchVariable(variable, triplePart, context) {\n    if (context.hasOwnProperty(variable)) {\n        const bound = context[variable];\n        return matchPart(bound, triplePart, context);\n    }\n    return Object.assign(Object.assign({}, context), { [variable]: triplePart });\n}\nfunction matchExact(patternPart, triplePart, context) {\n    return patternPart === triplePart ? context : null;\n}\nfunction matcherForPatternPart(patternPart) {\n    switch (typeof patternPart) {\n        case \"string\":\n            return patternPart.startsWith(\"?\") ? matchVariable : matchExact;\n        default:\n            return matchExact;\n    }\n}\nconst validArgMapProps = [\n    \"in\",\n    \"$in\",\n    \"$not\",\n    \"$isNull\",\n    \"$comparator\", // covers all of $gt, $lt, etc.\n];\n// Checks if an object is an args map\nfunction isArgsMap(patternPart) {\n    for (const prop of validArgMapProps) {\n        if (patternPart.hasOwnProperty(prop)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction matchPart(patternPart, triplePart, context) {\n    if (!context)\n        return null;\n    if (typeof patternPart === \"object\") {\n        // This is an args map, so we'll have already fitered the triples\n        // in `getRelevantTriples`\n        if (isArgsMap(patternPart)) {\n            return context;\n        }\n        return null;\n    }\n    const matcher = matcherForPatternPart(patternPart);\n    return matcher(patternPart, triplePart, context);\n}\nfunction matchPattern(pattern, triple, context) {\n    return pattern.reduce((context, patternPart, idx) => {\n        const triplePart = triple[idx];\n        return matchPart(patternPart, triplePart, context);\n    }, context);\n}\n// 2. querySingle\nfunction querySingle(store, pattern, context) {\n    return relevantTriples(store, pattern, context)\n        .map((triple) => matchPattern(pattern, triple, context))\n        .filter((x) => x);\n}\n// 3. queryWhere\nfunction queryPattern(store, pattern, contexts) {\n    if (pattern.or) {\n        return pattern.or.patterns.flatMap((patterns) => {\n            return queryWhere(store, patterns, contexts);\n        });\n    }\n    if (pattern.and) {\n        return pattern.and.patterns.reduce((contexts, patterns) => {\n            return queryWhere(store, patterns, contexts);\n        }, contexts);\n    }\n    return contexts.flatMap((context) => querySingle(store, pattern, context));\n}\nfunction queryWhere(store, patterns, contexts = [{}]) {\n    return patterns.reduce((contexts, pattern) => {\n        return queryPattern(store, pattern, contexts);\n    }, contexts);\n}\n// 4. query\nfunction actualize(context, find) {\n    if (Array.isArray(find)) {\n        return find.map((findPart) => actualize(context, findPart));\n    }\n    return isVariable(find) ? context[find] : find;\n}\nfunction query(store, { find, where }) {\n    const contexts = queryWhere(store, where);\n    return contexts.map((context) => actualize(context, find));\n}\n// 5. Index\nfunction relevantTriples(store, pattern, context) {\n    return (0,_store_js__WEBPACK_IMPORTED_MODULE_0__.getTriples)(store, actualize(context, pattern));\n}\n//# sourceMappingURL=datalog.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL2RhdGFsb2cuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUN3QztBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLGNBQWMsd0JBQXdCO0FBQy9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDTyxtREFBbUQ7QUFDMUQ7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sd0JBQXdCLGFBQWE7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcscURBQVU7QUFDckI7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxERUxMXFxEb2N1bWVudHNcXGVtYWlsLWNoYXQtaW50ZXJmYWNlXFxub2RlX21vZHVsZXNcXEBpbnN0YW50ZGJcXGNvcmVcXGRpc3RcXG1vZHVsZVxcZGF0YWxvZy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyAxLiBwYXR0ZXJuTWF0Y2hcbmltcG9ydCB7IGdldFRyaXBsZXMgfSBmcm9tIFwiLi9zdG9yZS5qc1wiO1xuZnVuY3Rpb24gaXNWYXJpYWJsZSh4KSB7XG4gICAgcmV0dXJuIHR5cGVvZiB4ID09PSBcInN0cmluZ1wiICYmIHguc3RhcnRzV2l0aChcIj9cIik7XG59XG5mdW5jdGlvbiBtYXRjaFZhcmlhYmxlKHZhcmlhYmxlLCB0cmlwbGVQYXJ0LCBjb250ZXh0KSB7XG4gICAgaWYgKGNvbnRleHQuaGFzT3duUHJvcGVydHkodmFyaWFibGUpKSB7XG4gICAgICAgIGNvbnN0IGJvdW5kID0gY29udGV4dFt2YXJpYWJsZV07XG4gICAgICAgIHJldHVybiBtYXRjaFBhcnQoYm91bmQsIHRyaXBsZVBhcnQsIGNvbnRleHQpO1xuICAgIH1cbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBjb250ZXh0KSwgeyBbdmFyaWFibGVdOiB0cmlwbGVQYXJ0IH0pO1xufVxuZnVuY3Rpb24gbWF0Y2hFeGFjdChwYXR0ZXJuUGFydCwgdHJpcGxlUGFydCwgY29udGV4dCkge1xuICAgIHJldHVybiBwYXR0ZXJuUGFydCA9PT0gdHJpcGxlUGFydCA/IGNvbnRleHQgOiBudWxsO1xufVxuZnVuY3Rpb24gbWF0Y2hlckZvclBhdHRlcm5QYXJ0KHBhdHRlcm5QYXJ0KSB7XG4gICAgc3dpdGNoICh0eXBlb2YgcGF0dGVyblBhcnQpIHtcbiAgICAgICAgY2FzZSBcInN0cmluZ1wiOlxuICAgICAgICAgICAgcmV0dXJuIHBhdHRlcm5QYXJ0LnN0YXJ0c1dpdGgoXCI/XCIpID8gbWF0Y2hWYXJpYWJsZSA6IG1hdGNoRXhhY3Q7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gbWF0Y2hFeGFjdDtcbiAgICB9XG59XG5jb25zdCB2YWxpZEFyZ01hcFByb3BzID0gW1xuICAgIFwiaW5cIixcbiAgICBcIiRpblwiLFxuICAgIFwiJG5vdFwiLFxuICAgIFwiJGlzTnVsbFwiLFxuICAgIFwiJGNvbXBhcmF0b3JcIiwgLy8gY292ZXJzIGFsbCBvZiAkZ3QsICRsdCwgZXRjLlxuXTtcbi8vIENoZWNrcyBpZiBhbiBvYmplY3QgaXMgYW4gYXJncyBtYXBcbmZ1bmN0aW9uIGlzQXJnc01hcChwYXR0ZXJuUGFydCkge1xuICAgIGZvciAoY29uc3QgcHJvcCBvZiB2YWxpZEFyZ01hcFByb3BzKSB7XG4gICAgICAgIGlmIChwYXR0ZXJuUGFydC5oYXNPd25Qcm9wZXJ0eShwcm9wKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuZnVuY3Rpb24gbWF0Y2hQYXJ0KHBhdHRlcm5QYXJ0LCB0cmlwbGVQYXJ0LCBjb250ZXh0KSB7XG4gICAgaWYgKCFjb250ZXh0KVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICBpZiAodHlwZW9mIHBhdHRlcm5QYXJ0ID09PSBcIm9iamVjdFwiKSB7XG4gICAgICAgIC8vIFRoaXMgaXMgYW4gYXJncyBtYXAsIHNvIHdlJ2xsIGhhdmUgYWxyZWFkeSBmaXRlcmVkIHRoZSB0cmlwbGVzXG4gICAgICAgIC8vIGluIGBnZXRSZWxldmFudFRyaXBsZXNgXG4gICAgICAgIGlmIChpc0FyZ3NNYXAocGF0dGVyblBhcnQpKSB7XG4gICAgICAgICAgICByZXR1cm4gY29udGV4dDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgY29uc3QgbWF0Y2hlciA9IG1hdGNoZXJGb3JQYXR0ZXJuUGFydChwYXR0ZXJuUGFydCk7XG4gICAgcmV0dXJuIG1hdGNoZXIocGF0dGVyblBhcnQsIHRyaXBsZVBhcnQsIGNvbnRleHQpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIG1hdGNoUGF0dGVybihwYXR0ZXJuLCB0cmlwbGUsIGNvbnRleHQpIHtcbiAgICByZXR1cm4gcGF0dGVybi5yZWR1Y2UoKGNvbnRleHQsIHBhdHRlcm5QYXJ0LCBpZHgpID0+IHtcbiAgICAgICAgY29uc3QgdHJpcGxlUGFydCA9IHRyaXBsZVtpZHhdO1xuICAgICAgICByZXR1cm4gbWF0Y2hQYXJ0KHBhdHRlcm5QYXJ0LCB0cmlwbGVQYXJ0LCBjb250ZXh0KTtcbiAgICB9LCBjb250ZXh0KTtcbn1cbi8vIDIuIHF1ZXJ5U2luZ2xlXG5leHBvcnQgZnVuY3Rpb24gcXVlcnlTaW5nbGUoc3RvcmUsIHBhdHRlcm4sIGNvbnRleHQpIHtcbiAgICByZXR1cm4gcmVsZXZhbnRUcmlwbGVzKHN0b3JlLCBwYXR0ZXJuLCBjb250ZXh0KVxuICAgICAgICAubWFwKCh0cmlwbGUpID0+IG1hdGNoUGF0dGVybihwYXR0ZXJuLCB0cmlwbGUsIGNvbnRleHQpKVxuICAgICAgICAuZmlsdGVyKCh4KSA9PiB4KTtcbn1cbi8vIDMuIHF1ZXJ5V2hlcmVcbmZ1bmN0aW9uIHF1ZXJ5UGF0dGVybihzdG9yZSwgcGF0dGVybiwgY29udGV4dHMpIHtcbiAgICBpZiAocGF0dGVybi5vcikge1xuICAgICAgICByZXR1cm4gcGF0dGVybi5vci5wYXR0ZXJucy5mbGF0TWFwKChwYXR0ZXJucykgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHF1ZXJ5V2hlcmUoc3RvcmUsIHBhdHRlcm5zLCBjb250ZXh0cyk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBpZiAocGF0dGVybi5hbmQpIHtcbiAgICAgICAgcmV0dXJuIHBhdHRlcm4uYW5kLnBhdHRlcm5zLnJlZHVjZSgoY29udGV4dHMsIHBhdHRlcm5zKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gcXVlcnlXaGVyZShzdG9yZSwgcGF0dGVybnMsIGNvbnRleHRzKTtcbiAgICAgICAgfSwgY29udGV4dHMpO1xuICAgIH1cbiAgICByZXR1cm4gY29udGV4dHMuZmxhdE1hcCgoY29udGV4dCkgPT4gcXVlcnlTaW5nbGUoc3RvcmUsIHBhdHRlcm4sIGNvbnRleHQpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBxdWVyeVdoZXJlKHN0b3JlLCBwYXR0ZXJucywgY29udGV4dHMgPSBbe31dKSB7XG4gICAgcmV0dXJuIHBhdHRlcm5zLnJlZHVjZSgoY29udGV4dHMsIHBhdHRlcm4pID0+IHtcbiAgICAgICAgcmV0dXJuIHF1ZXJ5UGF0dGVybihzdG9yZSwgcGF0dGVybiwgY29udGV4dHMpO1xuICAgIH0sIGNvbnRleHRzKTtcbn1cbi8vIDQuIHF1ZXJ5XG5mdW5jdGlvbiBhY3R1YWxpemUoY29udGV4dCwgZmluZCkge1xuICAgIGlmIChBcnJheS5pc0FycmF5KGZpbmQpKSB7XG4gICAgICAgIHJldHVybiBmaW5kLm1hcCgoZmluZFBhcnQpID0+IGFjdHVhbGl6ZShjb250ZXh0LCBmaW5kUGFydCkpO1xuICAgIH1cbiAgICByZXR1cm4gaXNWYXJpYWJsZShmaW5kKSA/IGNvbnRleHRbZmluZF0gOiBmaW5kO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHF1ZXJ5KHN0b3JlLCB7IGZpbmQsIHdoZXJlIH0pIHtcbiAgICBjb25zdCBjb250ZXh0cyA9IHF1ZXJ5V2hlcmUoc3RvcmUsIHdoZXJlKTtcbiAgICByZXR1cm4gY29udGV4dHMubWFwKChjb250ZXh0KSA9PiBhY3R1YWxpemUoY29udGV4dCwgZmluZCkpO1xufVxuLy8gNS4gSW5kZXhcbmZ1bmN0aW9uIHJlbGV2YW50VHJpcGxlcyhzdG9yZSwgcGF0dGVybiwgY29udGV4dCkge1xuICAgIHJldHVybiBnZXRUcmlwbGVzKHN0b3JlLCBhY3R1YWxpemUoY29udGV4dCwgcGF0dGVybikpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YWxvZy5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/datalog.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/devtool.js":
/*!*************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/devtool.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDevtool: () => (/* binding */ createDevtool)\n/* harmony export */ });\nlet currentDevtool;\nfunction createDevtool(appId) {\n    currentDevtool === null || currentDevtool === void 0 ? void 0 : currentDevtool.dispose();\n    const container = createContainer();\n    const toggler = createToggler(toggleView);\n    const iframe = createIframe(getSrc(appId));\n    function onPostMessage(event) {\n        var _a;\n        if (event.source !== iframe.element.contentWindow)\n            return;\n        if (((_a = event.data) === null || _a === void 0 ? void 0 : _a.type) === \"close\" && container.isVisible()) {\n            toggleView();\n        }\n    }\n    function onKeyDown(event) {\n        const isToggleShortcut = event.shiftKey && event.ctrlKey && event.key === \"0\";\n        const isEsc = event.key === \"Escape\" || event.key === \"Esc\";\n        if (isToggleShortcut) {\n            toggleView();\n        }\n        else if (isEsc && container.isVisible()) {\n            toggleView();\n        }\n    }\n    function toggleView() {\n        if (container.isVisible()) {\n            container.element.style.display = \"none\";\n        }\n        else {\n            container.element.style.display = \"block\";\n            // lazily render iframe on first open\n            if (!container.element.contains(iframe.element)) {\n                container.element.appendChild(iframe.element);\n            }\n        }\n    }\n    function dispose() {\n        container.element.remove();\n        toggler.element.remove();\n        removeEventListener(\"keydown\", onKeyDown);\n        removeEventListener(\"message\", onPostMessage);\n    }\n    function create() {\n        document.body.appendChild(container.element);\n        document.body.appendChild(toggler.element);\n        addEventListener(\"keydown\", onKeyDown);\n        addEventListener(\"message\", onPostMessage);\n        currentDevtool = {\n            dispose,\n        };\n    }\n    return create();\n}\nfunction getSrc(appId) {\n    const isDev = window.DEV_DEVTOOL;\n    const src = `${isDev ? \"http://localhost:3000\" : \"https://instantdb.com\"}/_devtool?appId=${appId}`;\n    return src;\n}\nfunction createIframe(src) {\n    const element = document.createElement(\"iframe\");\n    element.src = src;\n    element.className = \"instant-devtool-iframe\";\n    Object.assign(element.style, {\n        width: \"100%\",\n        height: \"100%\",\n        borderRadius: \"4px\",\n        backgroundColor: \"white\",\n        border: \"none\",\n    });\n    return { element };\n}\nfunction createToggler(onClick) {\n    const logoSVG = `\n    <svg width=\"32\" height=\"32\" viewBox=\"0 0 512 512\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect width=\"512\" height=\"512\" fill=\"black\"/>\n      <rect x=\"97.0973\" y=\"91.3297\" width=\"140\" height=\"330\" fill=\"white\"/>\n    </svg>\n  `;\n    const element = document.createElement(\"button\");\n    element.innerHTML = logoSVG;\n    element.className = \"instant-devtool-toggler\";\n    Object.assign(element.style, {\n        // pos\n        position: \"fixed\",\n        bottom: \"24px\",\n        left: \"24px\",\n        height: \"32px\",\n        width: \"32px\",\n        // layout\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        // look\n        padding: \"0\",\n        margin: \"0\",\n        border: \"none\",\n        cursor: \"pointer\",\n    });\n    element.addEventListener(\"click\", onClick);\n    return { element };\n}\nfunction createContainer() {\n    const element = document.createElement(\"div\");\n    Object.assign(element.style, {\n        position: \"fixed\",\n        bottom: \"24px\",\n        right: \"24px\",\n        left: \"60px\",\n        top: \"72px\",\n        display: \"block\",\n        borderRadius: \"4px\",\n        border: \"1px #ccc solid\",\n        boxShadow: \"0px 0px 8px #00000044\",\n        backgroundColor: \"#eee\",\n        zIndex: \"999990\",\n    });\n    element.style.display = \"none\";\n    element.className = \"instant-devtool-container\";\n    function isVisible() {\n        return element.style.display !== \"none\";\n    }\n    return { element, isVisible };\n}\n//# sourceMappingURL=devtool.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL2RldnRvb2wuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLDBEQUEwRCxrQkFBa0IsTUFBTTtBQUNyRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXERFTExcXERvY3VtZW50c1xcZW1haWwtY2hhdC1pbnRlcmZhY2VcXG5vZGVfbW9kdWxlc1xcQGluc3RhbnRkYlxcY29yZVxcZGlzdFxcbW9kdWxlXFxkZXZ0b29sLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImxldCBjdXJyZW50RGV2dG9vbDtcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVEZXZ0b29sKGFwcElkKSB7XG4gICAgY3VycmVudERldnRvb2wgPT09IG51bGwgfHwgY3VycmVudERldnRvb2wgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGN1cnJlbnREZXZ0b29sLmRpc3Bvc2UoKTtcbiAgICBjb25zdCBjb250YWluZXIgPSBjcmVhdGVDb250YWluZXIoKTtcbiAgICBjb25zdCB0b2dnbGVyID0gY3JlYXRlVG9nZ2xlcih0b2dnbGVWaWV3KTtcbiAgICBjb25zdCBpZnJhbWUgPSBjcmVhdGVJZnJhbWUoZ2V0U3JjKGFwcElkKSk7XG4gICAgZnVuY3Rpb24gb25Qb3N0TWVzc2FnZShldmVudCkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIGlmIChldmVudC5zb3VyY2UgIT09IGlmcmFtZS5lbGVtZW50LmNvbnRlbnRXaW5kb3cpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGlmICgoKF9hID0gZXZlbnQuZGF0YSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnR5cGUpID09PSBcImNsb3NlXCIgJiYgY29udGFpbmVyLmlzVmlzaWJsZSgpKSB7XG4gICAgICAgICAgICB0b2dnbGVWaWV3KCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gb25LZXlEb3duKGV2ZW50KSB7XG4gICAgICAgIGNvbnN0IGlzVG9nZ2xlU2hvcnRjdXQgPSBldmVudC5zaGlmdEtleSAmJiBldmVudC5jdHJsS2V5ICYmIGV2ZW50LmtleSA9PT0gXCIwXCI7XG4gICAgICAgIGNvbnN0IGlzRXNjID0gZXZlbnQua2V5ID09PSBcIkVzY2FwZVwiIHx8IGV2ZW50LmtleSA9PT0gXCJFc2NcIjtcbiAgICAgICAgaWYgKGlzVG9nZ2xlU2hvcnRjdXQpIHtcbiAgICAgICAgICAgIHRvZ2dsZVZpZXcoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChpc0VzYyAmJiBjb250YWluZXIuaXNWaXNpYmxlKCkpIHtcbiAgICAgICAgICAgIHRvZ2dsZVZpZXcoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmdW5jdGlvbiB0b2dnbGVWaWV3KCkge1xuICAgICAgICBpZiAoY29udGFpbmVyLmlzVmlzaWJsZSgpKSB7XG4gICAgICAgICAgICBjb250YWluZXIuZWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb250YWluZXIuZWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICAgICAgICAgICAgLy8gbGF6aWx5IHJlbmRlciBpZnJhbWUgb24gZmlyc3Qgb3BlblxuICAgICAgICAgICAgaWYgKCFjb250YWluZXIuZWxlbWVudC5jb250YWlucyhpZnJhbWUuZWxlbWVudCkpIHtcbiAgICAgICAgICAgICAgICBjb250YWluZXIuZWxlbWVudC5hcHBlbmRDaGlsZChpZnJhbWUuZWxlbWVudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZnVuY3Rpb24gZGlzcG9zZSgpIHtcbiAgICAgICAgY29udGFpbmVyLmVsZW1lbnQucmVtb3ZlKCk7XG4gICAgICAgIHRvZ2dsZXIuZWxlbWVudC5yZW1vdmUoKTtcbiAgICAgICAgcmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgb25LZXlEb3duKTtcbiAgICAgICAgcmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIiwgb25Qb3N0TWVzc2FnZSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIGNyZWF0ZSgpIHtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChjb250YWluZXIuZWxlbWVudCk7XG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodG9nZ2xlci5lbGVtZW50KTtcbiAgICAgICAgYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgb25LZXlEb3duKTtcbiAgICAgICAgYWRkRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIiwgb25Qb3N0TWVzc2FnZSk7XG4gICAgICAgIGN1cnJlbnREZXZ0b29sID0ge1xuICAgICAgICAgICAgZGlzcG9zZSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIGNyZWF0ZSgpO1xufVxuZnVuY3Rpb24gZ2V0U3JjKGFwcElkKSB7XG4gICAgY29uc3QgaXNEZXYgPSB3aW5kb3cuREVWX0RFVlRPT0w7XG4gICAgY29uc3Qgc3JjID0gYCR7aXNEZXYgPyBcImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMFwiIDogXCJodHRwczovL2luc3RhbnRkYi5jb21cIn0vX2RldnRvb2w/YXBwSWQ9JHthcHBJZH1gO1xuICAgIHJldHVybiBzcmM7XG59XG5mdW5jdGlvbiBjcmVhdGVJZnJhbWUoc3JjKSB7XG4gICAgY29uc3QgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpZnJhbWVcIik7XG4gICAgZWxlbWVudC5zcmMgPSBzcmM7XG4gICAgZWxlbWVudC5jbGFzc05hbWUgPSBcImluc3RhbnQtZGV2dG9vbC1pZnJhbWVcIjtcbiAgICBPYmplY3QuYXNzaWduKGVsZW1lbnQuc3R5bGUsIHtcbiAgICAgICAgd2lkdGg6IFwiMTAwJVwiLFxuICAgICAgICBoZWlnaHQ6IFwiMTAwJVwiLFxuICAgICAgICBib3JkZXJSYWRpdXM6IFwiNHB4XCIsXG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogXCJ3aGl0ZVwiLFxuICAgICAgICBib3JkZXI6IFwibm9uZVwiLFxuICAgIH0pO1xuICAgIHJldHVybiB7IGVsZW1lbnQgfTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZVRvZ2dsZXIob25DbGljaykge1xuICAgIGNvbnN0IGxvZ29TVkcgPSBgXG4gICAgPHN2ZyB3aWR0aD1cIjMyXCIgaGVpZ2h0PVwiMzJcIiB2aWV3Qm94PVwiMCAwIDUxMiA1MTJcIiBmaWxsPVwibm9uZVwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj5cbiAgICAgIDxyZWN0IHdpZHRoPVwiNTEyXCIgaGVpZ2h0PVwiNTEyXCIgZmlsbD1cImJsYWNrXCIvPlxuICAgICAgPHJlY3QgeD1cIjk3LjA5NzNcIiB5PVwiOTEuMzI5N1wiIHdpZHRoPVwiMTQwXCIgaGVpZ2h0PVwiMzMwXCIgZmlsbD1cIndoaXRlXCIvPlxuICAgIDwvc3ZnPlxuICBgO1xuICAgIGNvbnN0IGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICAgIGVsZW1lbnQuaW5uZXJIVE1MID0gbG9nb1NWRztcbiAgICBlbGVtZW50LmNsYXNzTmFtZSA9IFwiaW5zdGFudC1kZXZ0b29sLXRvZ2dsZXJcIjtcbiAgICBPYmplY3QuYXNzaWduKGVsZW1lbnQuc3R5bGUsIHtcbiAgICAgICAgLy8gcG9zXG4gICAgICAgIHBvc2l0aW9uOiBcImZpeGVkXCIsXG4gICAgICAgIGJvdHRvbTogXCIyNHB4XCIsXG4gICAgICAgIGxlZnQ6IFwiMjRweFwiLFxuICAgICAgICBoZWlnaHQ6IFwiMzJweFwiLFxuICAgICAgICB3aWR0aDogXCIzMnB4XCIsXG4gICAgICAgIC8vIGxheW91dFxuICAgICAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICAgICAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgICAgICAganVzdGlmeUNvbnRlbnQ6IFwiY2VudGVyXCIsXG4gICAgICAgIC8vIGxvb2tcbiAgICAgICAgcGFkZGluZzogXCIwXCIsXG4gICAgICAgIG1hcmdpbjogXCIwXCIsXG4gICAgICAgIGJvcmRlcjogXCJub25lXCIsXG4gICAgICAgIGN1cnNvcjogXCJwb2ludGVyXCIsXG4gICAgfSk7XG4gICAgZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgb25DbGljayk7XG4gICAgcmV0dXJuIHsgZWxlbWVudCB9O1xufVxuZnVuY3Rpb24gY3JlYXRlQ29udGFpbmVyKCkge1xuICAgIGNvbnN0IGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIE9iamVjdC5hc3NpZ24oZWxlbWVudC5zdHlsZSwge1xuICAgICAgICBwb3NpdGlvbjogXCJmaXhlZFwiLFxuICAgICAgICBib3R0b206IFwiMjRweFwiLFxuICAgICAgICByaWdodDogXCIyNHB4XCIsXG4gICAgICAgIGxlZnQ6IFwiNjBweFwiLFxuICAgICAgICB0b3A6IFwiNzJweFwiLFxuICAgICAgICBkaXNwbGF5OiBcImJsb2NrXCIsXG4gICAgICAgIGJvcmRlclJhZGl1czogXCI0cHhcIixcbiAgICAgICAgYm9yZGVyOiBcIjFweCAjY2NjIHNvbGlkXCIsXG4gICAgICAgIGJveFNoYWRvdzogXCIwcHggMHB4IDhweCAjMDAwMDAwNDRcIixcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcIiNlZWVcIixcbiAgICAgICAgekluZGV4OiBcIjk5OTk5MFwiLFxuICAgIH0pO1xuICAgIGVsZW1lbnQuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgIGVsZW1lbnQuY2xhc3NOYW1lID0gXCJpbnN0YW50LWRldnRvb2wtY29udGFpbmVyXCI7XG4gICAgZnVuY3Rpb24gaXNWaXNpYmxlKCkge1xuICAgICAgICByZXR1cm4gZWxlbWVudC5zdHlsZS5kaXNwbGF5ICE9PSBcIm5vbmVcIjtcbiAgICB9XG4gICAgcmV0dXJuIHsgZWxlbWVudCwgaXNWaXNpYmxlIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZXZ0b29sLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/devtool.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Auth: () => (/* binding */ Auth),\n/* harmony export */   IndexedDBStorage: () => (/* reexport safe */ _IndexedDBStorage__WEBPACK_IMPORTED_MODULE_4__[\"default\"]),\n/* harmony export */   InstantCoreDatabase: () => (/* binding */ InstantCoreDatabase),\n/* harmony export */   Storage: () => (/* binding */ Storage),\n/* harmony export */   WindowNetworkListener: () => (/* reexport safe */ _WindowNetworkListener__WEBPACK_IMPORTED_MODULE_5__[\"default\"]),\n/* harmony export */   coerceQuery: () => (/* binding */ coerceQuery),\n/* harmony export */   getOps: () => (/* reexport safe */ _instatx__WEBPACK_IMPORTED_MODULE_1__.getOps),\n/* harmony export */   i: () => (/* reexport safe */ _schema__WEBPACK_IMPORTED_MODULE_6__.i),\n/* harmony export */   id: () => (/* reexport safe */ _utils_uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"]),\n/* harmony export */   init: () => (/* binding */ init),\n/* harmony export */   init_experimental: () => (/* binding */ init_experimental),\n/* harmony export */   lookup: () => (/* reexport safe */ _instatx__WEBPACK_IMPORTED_MODULE_1__.lookup),\n/* harmony export */   tx: () => (/* reexport safe */ _instatx__WEBPACK_IMPORTED_MODULE_1__.tx),\n/* harmony export */   txInit: () => (/* reexport safe */ _instatx__WEBPACK_IMPORTED_MODULE_1__.txInit),\n/* harmony export */   version: () => (/* reexport safe */ _version__WEBPACK_IMPORTED_MODULE_8__[\"default\"]),\n/* harmony export */   weakHash: () => (/* reexport safe */ _utils_weakHash__WEBPACK_IMPORTED_MODULE_2__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _Reactor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Reactor */ \"(ssr)/./node_modules/@instantdb/core/dist/module/Reactor.js\");\n/* harmony import */ var _instatx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./instatx */ \"(ssr)/./node_modules/@instantdb/core/dist/module/instatx.js\");\n/* harmony import */ var _utils_weakHash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/weakHash */ \"(ssr)/./node_modules/@instantdb/core/dist/module/utils/weakHash.js\");\n/* harmony import */ var _utils_uuid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/uuid */ \"(ssr)/./node_modules/@instantdb/core/dist/module/utils/uuid.js\");\n/* harmony import */ var _IndexedDBStorage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./IndexedDBStorage */ \"(ssr)/./node_modules/@instantdb/core/dist/module/IndexedDBStorage.js\");\n/* harmony import */ var _WindowNetworkListener__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./WindowNetworkListener */ \"(ssr)/./node_modules/@instantdb/core/dist/module/WindowNetworkListener.js\");\n/* harmony import */ var _schema__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./schema */ \"(ssr)/./node_modules/@instantdb/core/dist/module/schema.js\");\n/* harmony import */ var _devtool__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./devtool */ \"(ssr)/./node_modules/@instantdb/core/dist/module/devtool.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./version */ \"(ssr)/./node_modules/@instantdb/core/dist/module/version.js\");\n\n\n\n\n\n\n\n\n\nconst defaultOpenDevtool = true;\n// consts\nconst defaultConfig = {\n    apiURI: \"https://api.instantdb.com\",\n    websocketURI: \"wss://api.instantdb.com/runtime/session\",\n};\n// hmr\nfunction initGlobalInstantCoreStore() {\n    var _a;\n    globalThis.__instantDbStore = (_a = globalThis.__instantDbStore) !== null && _a !== void 0 ? _a : {};\n    return globalThis.__instantDbStore;\n}\nconst globalInstantCoreStore = initGlobalInstantCoreStore();\n/**\n * Functions to log users in and out.\n *\n * @see https://instantdb.com/docs/auth\n */\nclass Auth {\n    constructor(db) {\n        this.db = db;\n        /**\n         * Sends a magic code to the user's email address.\n         *\n         * Once you send the magic code, see {@link auth.signInWithMagicCode} to let the\n         * user verify.\n         *\n         * @see https://instantdb.com/docs/auth\n         * @example\n         *  db.auth.sendMagicCode({email: \"example@gmail.com\"})\n         *    .catch((err) => console.error(err.body?.message))\n         */\n        this.sendMagicCode = (params) => {\n            return this.db.sendMagicCode(params);\n        };\n        /**\n         * Verify a magic code that was sent to the user's email address.\n         *\n         * @see https://instantdb.com/docs/auth\n         *\n         * @example\n         *  db.auth.signInWithMagicCode({email: \"example@gmail.com\", code: \"123456\"})\n         *       .catch((err) => console.error(err.body?.message))\n         */\n        this.signInWithMagicCode = (params) => {\n            return this.db.signInWithMagicCode(params);\n        };\n        /**\n         * Sign in a user with a refresh token\n         *\n         * @see https://instantdb.com/docs/backend#frontend-auth-sign-in-with-token\n         *\n         * @example\n         *   // Get the token from your backend\n         *   const token = await fetch('/signin', ...);\n         *   //Sign in\n         *   db.auth.signInWithToken(token);\n         */\n        this.signInWithToken = (token) => {\n            return this.db.signInWithCustomToken(token);\n        };\n        /**\n         * Create an authorization url to sign in with an external provider\n         *\n         * @see https://instantdb.com/docs/auth\n         *\n         * @example\n         *   // Get the authorization url from your backend\n         *   const url = db.auth.createAuthorizationUrl({\n         *     clientName: \"google\",\n         *     redirectURL: window.location.href,\n         *   });\n         *\n         *   // Put it in a sign in link\n         *   <a href={url}>Log in with Google</a>\n         */\n        this.createAuthorizationURL = (params) => {\n            return this.db.createAuthorizationURL(params);\n        };\n        /**\n         * Sign in with the id_token from an external provider like Google\n         *\n         * @see https://instantdb.com/docs/auth\n         * @example\n         *   db.auth\n         *  .signInWithIdToken({\n         *    // Token from external service\n         *    idToken: id_token,\n         *    // The name you gave the client when you registered it with Instant\n         *    clientName: \"google\",\n         *    // The nonce, if any, that you used when you initiated the auth flow\n         *    // with the external service.\n         *    nonce: your_nonce\n         *  })\n         *  .catch((err) => console.error(err.body?.message));\n         *\n         */\n        this.signInWithIdToken = (params) => {\n            return this.db.signInWithIdToken(params);\n        };\n        /**\n         * Sign in with the id_token from an external provider like Google\n         *\n         * @see https://instantdb.com/docs/auth\n         * @example\n         *   db.auth\n         *  .exchangeOAuthCode({\n         *    // code received in redirect from OAuth callback\n         *    code: code\n         *    // The PKCE code_verifier, if any, that you used when you\n         *    // initiated the auth flow\n         *    codeVerifier: your_code_verifier\n         *  })\n         *  .catch((err) => console.error(err.body?.message));\n         *\n         */\n        this.exchangeOAuthCode = (params) => {\n            return this.db.exchangeCodeForToken(params);\n        };\n        /**\n         * OpenID Discovery path for use with tools like\n         * expo-auth-session that use auto-discovery of\n         * OAuth parameters.\n         *\n         * @see https://instantdb.com/docs/auth\n         * @example\n         *   const discovery = useAutoDiscovery(\n         *     db.auth.issuerURI()\n         *   );\n         */\n        this.issuerURI = () => {\n            return this.db.issuerURI();\n        };\n        /**\n         * Sign out the current user\n         */\n        this.signOut = () => {\n            return this.db.signOut();\n        };\n    }\n}\n/**\n * Functions to manage file storage.\n */\nclass Storage {\n    constructor(db) {\n        this.db = db;\n        /**\n         * Uploads file at the provided path.\n         *\n         * @see https://instantdb.com/docs/storage\n         * @example\n         *   const [file] = e.target.files; // result of file input\n         *   const isSuccess = await db.storage.upload('photos/demo.png', file);\n         */\n        this.upload = (pathname, file) => {\n            return this.db.upload(pathname, file);\n        };\n        /**\n         * @deprecated Use `db.storage.upload` instead\n         */\n        this.put = this.upload;\n        /**\n         * Retrieves a download URL for the provided path.\n         *\n         * @see https://instantdb.com/docs/storage\n         * @example\n         *   const url = await db.storage.getDownloadUrl('photos/demo.png');\n         */\n        this.getDownloadUrl = (pathname) => {\n            return this.db.getDownloadUrl(pathname);\n        };\n        /**\n         * Deletes a file by path name.\n         *\n         * @see https://instantdb.com/docs/storage\n         * @example\n         *   await db.storage.delete('photos/demo.png');\n         */\n        this.delete = (pathname) => {\n            return this.db.deleteFile(pathname);\n        };\n    }\n}\n// util\nfunction coerceQuery(o) {\n    // stringify and parse to remove undefined values\n    return JSON.parse(JSON.stringify(o));\n}\nclass InstantCoreDatabase {\n    constructor(reactor) {\n        this.tx = (0,_instatx__WEBPACK_IMPORTED_MODULE_1__.txInit)();\n        this._reactor = reactor;\n        this.auth = new Auth(this._reactor);\n        this.storage = new Storage(this._reactor);\n    }\n    /**\n     * Use this to write data! You can create, update, delete, and link objects\n     *\n     * @see https://instantdb.com/docs/instaml\n     *\n     * @example\n     *   // Create a new object in the `goals` namespace\n     *   const goalId = id();\n     *   db.transact(tx.goals[goalId].update({title: \"Get fit\"}))\n     *\n     *   // Update the title\n     *   db.transact(tx.goals[goalId].update({title: \"Get super fit\"}))\n     *\n     *   // Delete it\n     *   db.transact(tx.goals[goalId].delete())\n     *\n     *   // Or create an association:\n     *   todoId = id();\n     *   db.transact([\n     *    tx.todos[todoId].update({ title: 'Go on a run' }),\n     *    tx.goals[goalId].link({todos: todoId}),\n     *  ])\n     */\n    transact(chunks) {\n        return this._reactor.pushTx(chunks);\n    }\n    getLocalId(name) {\n        return this._reactor.getLocalId(name);\n    }\n    /**\n     * Use this to query your data!\n     *\n     * @see https://instantdb.com/docs/instaql\n     *\n     * @example\n     *  // listen to all goals\n     *  db.subscribeQuery({ goals: {} }, (resp) => {\n     *    console.log(resp.data.goals)\n     *  })\n     *\n     *  // goals where the title is \"Get Fit\"\n     *  db.subscribeQuery(\n     *    { goals: { $: { where: { title: \"Get Fit\" } } } },\n     *    (resp) => {\n     *      console.log(resp.data.goals)\n     *    }\n     *  )\n     *\n     *  // all goals, _alongside_ their todos\n     *  db.subscribeQuery({ goals: { todos: {} } }, (resp) => {\n     *    console.log(resp.data.goals)\n     *  });\n     */\n    subscribeQuery(query, cb) {\n        return this._reactor.subscribeQuery(query, cb);\n    }\n    /**\n     * Listen for the logged in state. This is useful\n     * for deciding when to show a login screen.\n     *\n     * @see https://instantdb.com/docs/auth\n     * @example\n     *   const unsub = db.subscribeAuth((auth) => {\n     *     if (auth.user) {\n     *     console.log('logged in as', auth.user.email)\n     *    } else {\n     *      console.log('logged out')\n     *    }\n     *  })\n     */\n    subscribeAuth(cb) {\n        return this._reactor.subscribeAuth(cb);\n    }\n    /**\n     * Listen for connection status changes to Instant. This is useful\n     * for building things like connectivity indicators\n     *\n     * @see https://www.instantdb.com/docs/patterns#connection-status\n     * @example\n     *   const unsub = db.subscribeConnectionStatus((status) => {\n     *     const connectionState =\n     *       status === 'connecting' || status === 'opened'\n     *         ? 'authenticating'\n     *       : status === 'authenticated'\n     *         ? 'connected'\n     *       : status === 'closed'\n     *         ? 'closed'\n     *       : status === 'errored'\n     *         ? 'errored'\n     *       : 'unexpected state';\n     *\n     *     console.log('Connection status:', connectionState);\n     *   });\n     */\n    subscribeConnectionStatus(cb) {\n        return this._reactor.subscribeConnectionStatus(cb);\n    }\n    /**\n     * Join a room to publish and subscribe to topics and presence.\n     *\n     * @see https://instantdb.com/docs/presence-and-topics\n     * @example\n     * // init\n     * const db = init();\n     * const room = db.joinRoom(roomType, roomId);\n     * // usage\n     * const unsubscribeTopic = room.subscribeTopic(\"foo\", console.log);\n     * const unsubscribePresence = room.subscribePresence({}, console.log);\n     * room.publishTopic(\"hello\", { message: \"hello world!\" });\n     * room.publishPresence({ name: \"joe\" });\n     * // later\n     * unsubscribePresence();\n     * unsubscribeTopic();\n     * room.leaveRoom();\n     */\n    joinRoom(roomType = \"_defaultRoomType\", roomId = \"_defaultRoomId\") {\n        const leaveRoom = this._reactor.joinRoom(roomId);\n        return {\n            leaveRoom,\n            subscribeTopic: (topic, onEvent) => this._reactor.subscribeTopic(roomId, topic, onEvent),\n            subscribePresence: (opts, onChange) => this._reactor.subscribePresence(roomType, roomId, opts, onChange),\n            publishTopic: (topic, data) => this._reactor.publishTopic({ roomType, roomId, topic, data }),\n            publishPresence: (data) => this._reactor.publishPresence(roomType, roomId, data),\n            getPresence: (opts) => this._reactor.getPresence(roomType, roomId, opts),\n        };\n    }\n    shutdown() {\n        delete globalInstantCoreStore[this._reactor.config.appId];\n        this._reactor.shutdown();\n    }\n    /**\n     * Use this for one-off queries.\n     * Returns local data if available, otherwise fetches from the server.\n     * Because we want to avoid stale data, this method will throw an error\n     * if the user is offline or there is no active connection to the server.\n     *\n     * @see https://instantdb.com/docs/instaql\n     *\n     * @example\n     *\n     *  const resp = await db.queryOnce({ goals: {} });\n     *  console.log(resp.data.goals)\n     */\n    queryOnce(query) {\n        return this._reactor.queryOnce(query);\n    }\n}\n/**\n *\n * The first step: init your application!\n *\n * Visit https://instantdb.com/dash to get your `appId` :)\n *\n * @example\n *  import { init } from \"@instantdb/core\"\n *\n *  const db = init({ appId: \"my-app-id\" })\n *\n *  // You can also provide a schema for type safety and editor autocomplete!\n *\n *  import { init } from \"@instantdb/core\"\n *  import schema from \"\"../instant.schema.ts\";\n *\n *  const db = init({ appId: \"my-app-id\", schema })\n *\n *  // To learn more: https://instantdb.com/docs/modeling-data\n */\nfunction init(config, Storage, NetworkListener, versions) {\n    const existingClient = globalInstantCoreStore[config.appId];\n    if (existingClient) {\n        return existingClient;\n    }\n    const reactor = new _Reactor__WEBPACK_IMPORTED_MODULE_0__[\"default\"](Object.assign(Object.assign(Object.assign({}, defaultConfig), config), { cardinalityInference: config.schema ? true : false }), Storage || _IndexedDBStorage__WEBPACK_IMPORTED_MODULE_4__[\"default\"], NetworkListener || _WindowNetworkListener__WEBPACK_IMPORTED_MODULE_5__[\"default\"], Object.assign(Object.assign({}, (versions || {})), { \"@instantdb/core\": _version__WEBPACK_IMPORTED_MODULE_8__[\"default\"] }));\n    const client = new InstantCoreDatabase(reactor);\n    globalInstantCoreStore[config.appId] = client;\n    if (typeof window !== \"undefined\" && typeof window.location !== \"undefined\") {\n        const showDevtool = \n        // show widget by default?\n        (\"devtool\" in config ? Boolean(config.devtool) : defaultOpenDevtool) &&\n            // only run on localhost (dev env)\n            window.location.hostname === \"localhost\" &&\n            // used by dash and other internal consumers\n            !Boolean(globalThis._nodevtool);\n        if (showDevtool) {\n            (0,_devtool__WEBPACK_IMPORTED_MODULE_7__.createDevtool)(config.appId);\n        }\n    }\n    return client;\n}\n/**\n * @deprecated\n * `init_experimental` is deprecated. You can replace it with `init`.\n *\n * @example\n *\n * // Before\n * import { init_experimental } from \"@instantdb/core\"\n * const db = init_experimental({  ...  });\n *\n * // After\n * import { init } from \"@instantdb/core\"\n * const db = init({ ...  });\n */\nconst init_experimental = init;\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/instaml.js":
/*!*************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/instaml.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAttrByFwdIdentName: () => (/* binding */ getAttrByFwdIdentName),\n/* harmony export */   getAttrByReverseIdentName: () => (/* binding */ getAttrByReverseIdentName),\n/* harmony export */   rewriteStep: () => (/* binding */ rewriteStep),\n/* harmony export */   transform: () => (/* binding */ transform)\n/* harmony export */ });\n/* harmony import */ var _instatx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./instatx */ \"(ssr)/./node_modules/@instantdb/core/dist/module/instatx.js\");\n/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/object */ \"(ssr)/./node_modules/@instantdb/core/dist/module/utils/object.js\");\n/* harmony import */ var _utils_uuid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/uuid */ \"(ssr)/./node_modules/@instantdb/core/dist/module/utils/uuid.js\");\n\n\n\n// Rewrites optimistic attrs with the attrs we get back from the server.\nfunction rewriteStep(attrMapping, txStep) {\n    const { attrIdMap, refSwapAttrIds } = attrMapping;\n    const rewritten = [];\n    for (const part of txStep) {\n        const newValue = attrIdMap[part];\n        if (newValue) {\n            // Rewrites attr id\n            rewritten.push(newValue);\n        }\n        else if (Array.isArray(part) && part.length == 2 && attrIdMap[part[0]]) {\n            // Rewrites attr id in lookups\n            const [aid, value] = part;\n            rewritten.push([attrIdMap[aid], value]);\n        }\n        else {\n            rewritten.push(part);\n        }\n    }\n    const [action] = txStep;\n    if ((action === \"add-triple\" || action === \"retract-triple\") &&\n        refSwapAttrIds.has(txStep[2])) {\n        // Reverse links if the optimistic link attr is backwards\n        const tmp = rewritten[1];\n        rewritten[1] = rewritten[3];\n        rewritten[3] = tmp;\n    }\n    return rewritten;\n}\nfunction getAttrByFwdIdentName(attrs, inputEtype, inputIdentName) {\n    return Object.values(attrs).find((attr) => {\n        const [_id, etype, label] = attr[\"forward-identity\"];\n        return etype === inputEtype && label === inputIdentName;\n    });\n}\nfunction getAttrByReverseIdentName(attrs, inputEtype, inputIdentName) {\n    return Object.values(attrs).find((attr) => {\n        const revIdent = attr[\"reverse-identity\"];\n        if (!revIdent)\n            return false;\n        const [_id, etype, label] = revIdent;\n        return etype === inputEtype && label === inputIdentName;\n    });\n}\nfunction explodeLookupRef(eid) {\n    if (Array.isArray(eid)) {\n        return eid;\n    }\n    const entries = Object.entries(eid);\n    if (entries.length !== 1) {\n        throw new Error(\"lookup must be an object with a single unique attr and value.\");\n    }\n    return entries[0];\n}\nfunction isRefLookupIdent(attrs, etype, identName) {\n    return (identName.indexOf(\".\") !== -1 &&\n        // attr names can have `.` in them, so use the attr we find with a `.`\n        // before assuming it's a ref lookup.\n        !getAttrByFwdIdentName(attrs, etype, identName));\n}\nfunction extractRefLookupFwdName(identName) {\n    const [fwdName, idIdent, ...rest] = identName.split(\".\");\n    if (rest.length > 0 || idIdent !== \"id\") {\n        throw new Error(`${identName} is not a valid lookup attribute.`);\n    }\n    return fwdName;\n}\nfunction lookupIdentToAttr(attrs, etype, identName) {\n    if (!isRefLookupIdent(attrs, etype, identName)) {\n        return getAttrByFwdIdentName(attrs, etype, identName);\n    }\n    const fwdName = extractRefLookupFwdName(identName);\n    const refAttr = getAttrByFwdIdentName(attrs, etype, fwdName) ||\n        getAttrByReverseIdentName(attrs, etype, fwdName);\n    if (refAttr && refAttr[\"value-type\"] !== \"ref\") {\n        throw new Error(`${identName} does not reference a valid link attribute.`);\n    }\n    return refAttr;\n}\n// Returns [attr, value] for the eid if the eid is a lookup.\n// If it's a regular eid, returns null\nfunction lookupPairOfEid(eid) {\n    if (typeof eid === \"string\" && !(0,_instatx__WEBPACK_IMPORTED_MODULE_0__.isLookup)(eid)) {\n        return null;\n    }\n    return typeof eid === \"string\" && (0,_instatx__WEBPACK_IMPORTED_MODULE_0__.isLookup)(eid)\n        ? (0,_instatx__WEBPACK_IMPORTED_MODULE_0__.parseLookup)(eid)\n        : explodeLookupRef(eid);\n}\nfunction extractLookup(attrs, etype, eid) {\n    const lookupPair = lookupPairOfEid(eid);\n    if (lookupPair === null) {\n        return eid;\n    }\n    const [identName, value] = lookupPair;\n    const attr = lookupIdentToAttr(attrs, etype, identName);\n    if (!attr || !attr[\"unique?\"]) {\n        throw new Error(`${identName} is not a unique attribute.`);\n    }\n    return [attr.id, value];\n}\nfunction expandLink(attrs, [etype, eidA, obj]) {\n    const addTriples = Object.entries(obj).flatMap(([label, eidOrEids]) => {\n        const eids = Array.isArray(eidOrEids) ? eidOrEids : [eidOrEids];\n        const fwdAttr = getAttrByFwdIdentName(attrs, etype, label);\n        const revAttr = getAttrByReverseIdentName(attrs, etype, label);\n        return eids.map((eidB) => {\n            const txStep = fwdAttr\n                ? [\n                    \"add-triple\",\n                    extractLookup(attrs, etype, eidA),\n                    fwdAttr.id,\n                    extractLookup(attrs, fwdAttr[\"reverse-identity\"][1], eidB),\n                ]\n                : [\n                    \"add-triple\",\n                    extractLookup(attrs, revAttr[\"forward-identity\"][1], eidB),\n                    revAttr.id,\n                    extractLookup(attrs, etype, eidA),\n                ];\n            return txStep;\n        });\n    });\n    return addTriples;\n}\nfunction expandUnlink(attrs, [etype, eidA, obj]) {\n    const retractTriples = Object.entries(obj).flatMap(([label, eidOrEids]) => {\n        const eids = Array.isArray(eidOrEids) ? eidOrEids : [eidOrEids];\n        const fwdAttr = getAttrByFwdIdentName(attrs, etype, label);\n        const revAttr = getAttrByReverseIdentName(attrs, etype, label);\n        return eids.map((eidB) => {\n            const txStep = fwdAttr\n                ? [\n                    \"retract-triple\",\n                    extractLookup(attrs, etype, eidA),\n                    fwdAttr.id,\n                    extractLookup(attrs, fwdAttr[\"reverse-identity\"][1], eidB),\n                ]\n                : [\n                    \"retract-triple\",\n                    extractLookup(attrs, revAttr[\"forward-identity\"][1], eidB),\n                    revAttr.id,\n                    extractLookup(attrs, etype, eidA),\n                ];\n            return txStep;\n        });\n    });\n    return retractTriples;\n}\nfunction expandUpdate(attrs, [etype, eid, obj]) {\n    const lookup = extractLookup(attrs, etype, eid);\n    // id first so that we don't clobber updates on the lookup field\n    const attrTuples = [[\"id\", extractLookup(attrs, etype, eid)]]\n        .concat(Object.entries(obj))\n        .map(([identName, value]) => {\n        const attr = getAttrByFwdIdentName(attrs, etype, identName);\n        return [\"add-triple\", lookup, attr.id, value];\n    });\n    return attrTuples;\n}\nfunction expandDelete(attrs, [etype, eid]) {\n    const lookup = extractLookup(attrs, etype, eid);\n    return [[\"delete-entity\", lookup, etype]];\n}\nfunction expandDeepMerge(attrs, [etype, eid, obj]) {\n    const lookup = extractLookup(attrs, etype, eid);\n    const attrTuples = Object.entries(obj).map(([identName, value]) => {\n        const attr = getAttrByFwdIdentName(attrs, etype, identName);\n        const coercedValue = (0,_utils_object__WEBPACK_IMPORTED_MODULE_1__.immutableDeepReplace)(value, undefined, null);\n        return [\"deep-merge-triple\", lookup, attr.id, coercedValue];\n    });\n    const idTuple = [\n        \"add-triple\",\n        lookup,\n        getAttrByFwdIdentName(attrs, etype, \"id\").id,\n        lookup,\n    ];\n    // id first so that we don't clobber updates on the lookup field\n    return [idTuple].concat(attrTuples);\n}\nfunction removeIdFromArgs(step) {\n    const [op, etype, eid, obj] = step;\n    if (!obj) {\n        return step;\n    }\n    const newObj = Object.assign({}, obj);\n    delete newObj.id;\n    return [op, etype, eid, newObj];\n}\nfunction toTxSteps(attrs, step) {\n    const [action, ...args] = removeIdFromArgs(step);\n    switch (action) {\n        case \"merge\":\n            return expandDeepMerge(attrs, args);\n        case \"update\":\n            return expandUpdate(attrs, args);\n        case \"link\":\n            return expandLink(attrs, args);\n        case \"unlink\":\n            return expandUnlink(attrs, args);\n        case \"delete\":\n            return expandDelete(attrs, args);\n        default:\n            throw new Error(`unsupported action ${action}`);\n    }\n}\n// ---------\n// transform\nfunction checkedDataTypeOfValueType(valueType) {\n    switch (valueType) {\n        case \"string\":\n        case \"date\":\n        case \"boolean\":\n        case \"number\":\n            return valueType;\n        default:\n            return undefined;\n    }\n}\nfunction objectPropsFromSchema(schema, etype, label) {\n    var _a, _b;\n    const attr = (_b = (_a = schema.entities[etype]) === null || _a === void 0 ? void 0 : _a.attrs) === null || _b === void 0 ? void 0 : _b[label];\n    if (label === \"id\")\n        return null;\n    if (!attr) {\n        throw new Error(`${etype}.${label} does not exist in your schema`);\n    }\n    const { unique, indexed } = attr === null || attr === void 0 ? void 0 : attr.config;\n    const checkedDataType = checkedDataTypeOfValueType(attr === null || attr === void 0 ? void 0 : attr.valueType);\n    return {\n        \"index?\": indexed,\n        \"unique?\": unique,\n        \"checked-data-type\": checkedDataType,\n    };\n}\nfunction createObjectAttr(schema, etype, label, props) {\n    const schemaObjectProps = schema\n        ? objectPropsFromSchema(schema, etype, label)\n        : null;\n    const attrId = (0,_utils_uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n    const fwdIdentId = (0,_utils_uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n    const fwdIdent = [fwdIdentId, etype, label];\n    return Object.assign(Object.assign({ id: attrId, \"forward-identity\": fwdIdent, \"value-type\": \"blob\", cardinality: \"one\", \"unique?\": false, \"index?\": false, isUnsynced: true }, (schemaObjectProps || {})), (props || {}));\n}\nfunction findSchemaLink(schema, etype, label) {\n    const found = Object.values(schema.links).find((x) => {\n        return ((x.forward.on === etype && x.forward.label === label) ||\n            (x.reverse.on === etype && x.reverse.label === label));\n    });\n    return found;\n}\nfunction refPropsFromSchema(schema, etype, label) {\n    const found = findSchemaLink(schema, etype, label);\n    if (!found) {\n        throw new Error(`Couldn't find the link ${etype}.${label} in your schema`);\n    }\n    const { forward, reverse } = found;\n    return {\n        \"forward-identity\": [(0,_utils_uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(), forward.on, forward.label],\n        \"reverse-identity\": [(0,_utils_uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(), reverse.on, reverse.label],\n        cardinality: forward.has === \"one\" ? \"one\" : \"many\",\n        \"unique?\": reverse.has === \"one\",\n    };\n}\nfunction createRefAttr(schema, etype, label, props) {\n    const schemaRefProps = schema\n        ? refPropsFromSchema(schema, etype, label)\n        : null;\n    const attrId = (0,_utils_uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n    const fwdIdent = [(0,_utils_uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(), etype, label];\n    const revIdent = [(0,_utils_uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(), label, etype];\n    return Object.assign(Object.assign({ id: attrId, \"forward-identity\": fwdIdent, \"reverse-identity\": revIdent, \"value-type\": \"ref\", cardinality: \"many\", \"unique?\": false, \"index?\": false, isUnsynced: true }, (schemaRefProps || {})), (props || {}));\n}\n// Actions that have an object, e.g. not delete\nconst OBJ_ACTIONS = new Set([\"update\", \"merge\", \"link\", \"unlink\"]);\nconst REF_ACTIONS = new Set([\"link\", \"unlink\"]);\nconst UPDATE_ACTIONS = new Set([\"update\", \"merge\"]);\nconst SUPPORTS_LOOKUP_ACTIONS = new Set([\n    \"link\",\n    \"unlink\",\n    \"update\",\n    \"merge\",\n    \"delete\",\n]);\nconst lookupProps = { \"unique?\": true, \"index?\": true };\nconst refLookupProps = Object.assign(Object.assign({}, lookupProps), { cardinality: \"one\" });\nfunction lookupPairsOfOp(op) {\n    const res = [];\n    const [action, etype, eid, obj] = op;\n    if (!SUPPORTS_LOOKUP_ACTIONS.has(action)) {\n        return res;\n    }\n    const eidLookupPair = lookupPairOfEid(eid);\n    if (eidLookupPair) {\n        res.push({ etype: etype, lookupPair: eidLookupPair });\n    }\n    if (action === \"link\") {\n        for (const [label, eidOrEids] of Object.entries(obj)) {\n            const eids = Array.isArray(eidOrEids) ? eidOrEids : [eidOrEids];\n            for (const linkEid of eids) {\n                const linkEidLookupPair = lookupPairOfEid(linkEid);\n                if (linkEidLookupPair) {\n                    res.push({\n                        etype: etype,\n                        lookupPair: linkEidLookupPair,\n                        linkLabel: label,\n                    });\n                }\n            }\n        }\n    }\n    return res;\n}\nfunction createMissingAttrs({ attrs: existingAttrs, schema }, ops) {\n    var _a, _b;\n    const [addedIds, attrs, addOps] = [new Set(), Object.assign({}, existingAttrs), []];\n    function addAttr(attr) {\n        attrs[attr.id] = attr;\n        addOps.push([\"add-attr\", attr]);\n        addedIds.add(attr.id);\n    }\n    function addUnsynced(attr) {\n        if ((attr === null || attr === void 0 ? void 0 : attr.isUnsynced) && !addedIds.has(attr.id)) {\n            addOps.push([\"add-attr\", attr]);\n            addedIds.add(attr.id);\n        }\n    }\n    // Adds attrs needed for a ref lookup\n    function addForRef(etype, label) {\n        const fwdAttr = getAttrByFwdIdentName(attrs, etype, label);\n        const revAttr = getAttrByReverseIdentName(attrs, etype, label);\n        addUnsynced(fwdAttr);\n        addUnsynced(revAttr);\n        if (!fwdAttr && !revAttr) {\n            addAttr(createRefAttr(schema, etype, label, refLookupProps));\n        }\n    }\n    // Create attrs for lookups if we need to\n    // Do these first because otherwise we might add a non-unique attr\n    // before we get to it\n    for (const op of ops) {\n        for (const { etype, lookupPair, linkLabel } of lookupPairsOfOp(op)) {\n            const identName = lookupPair[0];\n            // We got a link eid that's a lookup, linkLabel is the label of the ident,\n            // e.g. `posts` in `link({posts: postIds})`\n            if (linkLabel) {\n                // Add our ref attr, e.g. users.posts\n                addForRef(etype, linkLabel);\n                // Figure out the link etype so we can make sure we have the attrs\n                // for the link lookup\n                const fwdAttr = getAttrByFwdIdentName(attrs, etype, linkLabel);\n                const revAttr = getAttrByReverseIdentName(attrs, etype, linkLabel);\n                addUnsynced(fwdAttr);\n                addUnsynced(revAttr);\n                const linkEtype = ((_a = fwdAttr === null || fwdAttr === void 0 ? void 0 : fwdAttr[\"reverse-identity\"]) === null || _a === void 0 ? void 0 : _a[1]) ||\n                    ((_b = revAttr === null || revAttr === void 0 ? void 0 : revAttr[\"forward-identity\"]) === null || _b === void 0 ? void 0 : _b[1]) ||\n                    linkLabel;\n                if (isRefLookupIdent(attrs, linkEtype, identName)) {\n                    addForRef(linkEtype, extractRefLookupFwdName(identName));\n                }\n                else {\n                    const attr = getAttrByFwdIdentName(attrs, linkEtype, identName);\n                    if (!attr) {\n                        addAttr(createObjectAttr(schema, linkEtype, identName, lookupProps));\n                    }\n                    addUnsynced(attr);\n                }\n            }\n            else if (isRefLookupIdent(attrs, etype, identName)) {\n                addForRef(etype, extractRefLookupFwdName(identName));\n            }\n            else {\n                const attr = getAttrByFwdIdentName(attrs, etype, identName);\n                if (!attr) {\n                    addAttr(createObjectAttr(schema, etype, identName, lookupProps));\n                }\n                addUnsynced(attr);\n            }\n        }\n    }\n    // Create object and ref attrs\n    for (const op of ops) {\n        const [action, etype, eid, obj] = op;\n        if (OBJ_ACTIONS.has(action)) {\n            const labels = Object.keys(obj);\n            labels.push(\"id\");\n            for (const label of labels) {\n                const fwdAttr = getAttrByFwdIdentName(attrs, etype, label);\n                addUnsynced(fwdAttr);\n                if (UPDATE_ACTIONS.has(action)) {\n                    if (!fwdAttr) {\n                        addAttr(createObjectAttr(schema, etype, label, label === \"id\" ? { \"unique?\": true } : null));\n                    }\n                }\n                if (REF_ACTIONS.has(action)) {\n                    const revAttr = getAttrByReverseIdentName(attrs, etype, label);\n                    if (!fwdAttr && !revAttr) {\n                        addAttr(createRefAttr(schema, etype, label));\n                    }\n                    addUnsynced(revAttr);\n                }\n            }\n        }\n    }\n    return [attrs, addOps];\n}\nfunction transform(ctx, inputChunks) {\n    const chunks = Array.isArray(inputChunks) ? inputChunks : [inputChunks];\n    const ops = chunks.flatMap((tx) => (0,_instatx__WEBPACK_IMPORTED_MODULE_0__.getOps)(tx));\n    const [newAttrs, addAttrTxSteps] = createMissingAttrs(ctx, ops);\n    const txSteps = ops.flatMap((op) => toTxSteps(newAttrs, op));\n    return [...addAttrTxSteps, ...txSteps];\n}\n//# sourceMappingURL=instaml.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/instaml.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/instaql.js":
/*!*************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/instaql.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ query)\n/* harmony export */ });\n/* harmony import */ var _datalog__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./datalog */ \"(ssr)/./node_modules/@instantdb/core/dist/module/datalog.js\");\n/* harmony import */ var _utils_uuid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/uuid */ \"(ssr)/./node_modules/@instantdb/core/dist/module/utils/uuid.js\");\n/* harmony import */ var _store__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./store */ \"(ssr)/./node_modules/@instantdb/core/dist/module/store.js\");\n\n\n\n// Pattern variables\n// -----------------\nlet _seed = 0;\nfunction wildcard(friendlyName) {\n    return makeVarImpl(`_${friendlyName}`, _seed++);\n}\nfunction makeVarImpl(x, level) {\n    return `?${x}-${level}`;\n}\n// Where\n// -----------------\nclass AttrNotFoundError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"AttrNotFoundError\";\n    }\n}\nfunction idAttr(store, ns) {\n    const attr = _store__WEBPACK_IMPORTED_MODULE_2__.getPrimaryKeyAttr(store, ns);\n    if (!attr) {\n        throw new AttrNotFoundError(`Could not find id attr for ${ns}`);\n    }\n    return attr;\n}\nfunction defaultWhere(makeVar, store, etype, level) {\n    return [eidWhere(makeVar, store, etype, level)];\n}\nfunction eidWhere(makeVar, store, etype, level) {\n    return [\n        makeVar(etype, level),\n        idAttr(store, etype).id,\n        makeVar(etype, level),\n        makeVar(\"time\", level),\n    ];\n}\nfunction replaceInAttrPat(attrPat, needle, v) {\n    return attrPat.map((x) => (x === needle ? v : x));\n}\nfunction refAttrPat(makeVar, store, etype, level, label) {\n    const fwdAttr = _store__WEBPACK_IMPORTED_MODULE_2__.getAttrByFwdIdentName(store, etype, label);\n    const revAttr = _store__WEBPACK_IMPORTED_MODULE_2__.getAttrByReverseIdentName(store, etype, label);\n    const attr = fwdAttr || revAttr;\n    if (!attr) {\n        throw new AttrNotFoundError(`Could not find attr for ${[etype, label]}`);\n    }\n    if (attr[\"value-type\"] !== \"ref\") {\n        throw new Error(`Attr ${attr.id} is not a ref`);\n    }\n    const [_f, fwdEtype] = attr[\"forward-identity\"];\n    const [_r, revEtype] = attr[\"reverse-identity\"];\n    const nextLevel = level + 1;\n    const attrPat = fwdAttr\n        ? [\n            makeVar(fwdEtype, level),\n            attr.id,\n            makeVar(revEtype, nextLevel),\n            wildcard(\"time\"),\n        ]\n        : [\n            makeVar(fwdEtype, nextLevel),\n            attr.id,\n            makeVar(revEtype, level),\n            wildcard(\"time\"),\n        ];\n    const nextEtype = fwdAttr ? revEtype : fwdEtype;\n    const isForward = Boolean(fwdAttr);\n    return [nextEtype, nextLevel, attrPat, attr, isForward];\n}\nfunction makeLikeMatcher(caseSensitive, pattern) {\n    if (typeof pattern !== \"string\") {\n        return function likeMatcher(_value) {\n            return false;\n        };\n    }\n    const regexPattern = pattern.replace(/%/g, \".*\").replace(/_/g, \".\");\n    const regex = new RegExp(`^${regexPattern}$`, caseSensitive ? undefined : \"i\");\n    return function likeMatcher(value) {\n        if (typeof value !== \"string\") {\n            return false;\n        }\n        return regex.test(value);\n    };\n}\nfunction parseValue(attr, v) {\n    if (typeof v !== \"object\" ||\n        v.hasOwnProperty(\"$in\") ||\n        v.hasOwnProperty(\"in\")) {\n        return v;\n    }\n    const isDate = attr[\"checked-data-type\"] === \"date\";\n    if (v.hasOwnProperty(\"$gt\")) {\n        return {\n            $comparator: true,\n            $op: isDate\n                ? function gtDate(triple) {\n                    return new Date(triple[2]) > new Date(v.$gt);\n                }\n                : function gt(triple) {\n                    return triple[2] > v.$gt;\n                },\n        };\n    }\n    if (v.hasOwnProperty(\"$gte\")) {\n        return {\n            $comparator: true,\n            $op: isDate\n                ? function gteDate(triple) {\n                    return new Date(triple[2]) >= new Date(v.$gte);\n                }\n                : function gte(triple) {\n                    return triple[2] >= v.$gte;\n                },\n        };\n    }\n    if (v.hasOwnProperty(\"$lt\")) {\n        return {\n            $comparator: true,\n            $op: isDate\n                ? function ltDate(triple) {\n                    return new Date(triple[2]) < new Date(v.$lt);\n                }\n                : function lt(triple) {\n                    return triple[2] < v.$lt;\n                },\n        };\n    }\n    if (v.hasOwnProperty(\"$lte\")) {\n        return {\n            $comparator: true,\n            $op: isDate\n                ? function lteDate(triple) {\n                    return new Date(triple[2]) <= new Date(v.$lte);\n                }\n                : function lte(triple) {\n                    return triple[2] <= v.$lte;\n                },\n        };\n    }\n    if (v.hasOwnProperty(\"$like\")) {\n        const matcher = makeLikeMatcher(true, v.$like);\n        return {\n            $comparator: true,\n            $op: function like(triple) {\n                return matcher(triple[2]);\n            },\n        };\n    }\n    if (v.hasOwnProperty(\"$ilike\")) {\n        const matcher = makeLikeMatcher(false, v.$ilike);\n        return {\n            $comparator: true,\n            $op: function ilike(triple) {\n                return matcher(triple[2]);\n            },\n        };\n    }\n    return v;\n}\nfunction valueAttrPat(makeVar, store, valueEtype, valueLevel, valueLabel, v) {\n    const fwdAttr = _store__WEBPACK_IMPORTED_MODULE_2__.getAttrByFwdIdentName(store, valueEtype, valueLabel);\n    const revAttr = _store__WEBPACK_IMPORTED_MODULE_2__.getAttrByReverseIdentName(store, valueEtype, valueLabel);\n    const attr = fwdAttr || revAttr;\n    if (!attr) {\n        throw new AttrNotFoundError(`No attr for etype = ${valueEtype} label = ${valueLabel}`);\n    }\n    if (v === null || v === void 0 ? void 0 : v.hasOwnProperty(\"$isNull\")) {\n        const idAttr = _store__WEBPACK_IMPORTED_MODULE_2__.getAttrByFwdIdentName(store, valueEtype, \"id\");\n        if (!idAttr) {\n            throw new AttrNotFoundError(`No attr for etype = ${valueEtype} label = id`);\n        }\n        return [\n            makeVar(valueEtype, valueLevel),\n            idAttr.id,\n            { $isNull: { attrId: attr.id, isNull: v.$isNull, reverse: !fwdAttr } },\n            wildcard(\"time\"),\n        ];\n    }\n    if (fwdAttr) {\n        return [\n            makeVar(valueEtype, valueLevel),\n            attr.id,\n            parseValue(attr, v),\n            wildcard(\"time\"),\n        ];\n    }\n    return [v, attr.id, makeVar(valueEtype, valueLevel), wildcard(\"time\")];\n}\nfunction refAttrPats(makeVar, store, etype, level, refsPath) {\n    const [lastEtype, lastLevel, attrPats] = refsPath.reduce((acc, label) => {\n        const [etype, level, attrPats] = acc;\n        const [nextEtype, nextLevel, attrPat] = refAttrPat(makeVar, store, etype, level, label);\n        return [nextEtype, nextLevel, [...attrPats, attrPat]];\n    }, [etype, level, []]);\n    return [lastEtype, lastLevel, attrPats];\n}\nfunction whereCondAttrPats(makeVar, store, etype, level, path, v) {\n    const refsPath = path.slice(0, path.length - 1);\n    const valueLabel = path[path.length - 1];\n    const [lastEtype, lastLevel, refPats] = refAttrPats(makeVar, store, etype, level, refsPath);\n    const valuePat = valueAttrPat(makeVar, store, lastEtype, lastLevel, valueLabel, v);\n    return refPats.concat([valuePat]);\n}\nfunction withJoin(where, join) {\n    return join ? [join].concat(where) : where;\n}\nfunction isOrClauses([k, v]) {\n    return k === \"or\" && Array.isArray(v);\n}\nfunction isAndClauses([k, v]) {\n    return k === \"and\" && Array.isArray(v);\n}\n// Creates a makeVar that will namespace symbols for or clauses\n// to prevent conflicts, except for the base etype\nfunction genMakeVar(baseMakeVar, etype, orIdx) {\n    return (x, lvl) => {\n        if (x == etype) {\n            return baseMakeVar(x, lvl);\n        }\n        return `${baseMakeVar(x, lvl)}-${orIdx}`;\n    };\n}\nfunction parseWhereClauses(makeVar, clauseType /* 'or' | 'and' */, store, etype, level, whereValue) {\n    const patterns = whereValue.map((w, i) => {\n        const makeNamespacedVar = genMakeVar(makeVar, etype, i);\n        return parseWhere(makeNamespacedVar, store, etype, level, w);\n    });\n    const joinSym = makeVar(etype, level);\n    return { [clauseType]: { patterns, joinSym } };\n}\n// Given a path, returns a list of paths leading up to this path:\n// growPath([1, 2, 3]) -> [[1], [1, 2], [1, 2, 3]]\nfunction growPath(path) {\n    const ret = [];\n    for (let i = 1; i <= path.length; i++) {\n        ret.push(path.slice(0, i));\n    }\n    return ret;\n}\n// Returns array of pattern arrays that should be grouped in OR\n// to capture any intermediate nulls\nfunction whereCondAttrPatsForNullIsTrue(makeVar, store, etype, level, path) {\n    return growPath(path).map((path) => whereCondAttrPats(makeVar, store, etype, level, path, { $isNull: true }));\n}\nfunction parseWhere(makeVar, store, etype, level, where) {\n    return Object.entries(where).flatMap(([k, v]) => {\n        if (isOrClauses([k, v])) {\n            return parseWhereClauses(makeVar, \"or\", store, etype, level, v);\n        }\n        if (isAndClauses([k, v])) {\n            return parseWhereClauses(makeVar, \"and\", store, etype, level, v);\n        }\n        const path = k.split(\".\");\n        if (v === null || v === void 0 ? void 0 : v.hasOwnProperty(\"$not\")) {\n            // `$not` won't pick up entities that are missing the attr, so we\n            // add in a `$isNull` to catch those too.\n            const notPats = whereCondAttrPats(makeVar, store, etype, level, path, v);\n            const nilPats = whereCondAttrPatsForNullIsTrue(makeVar, store, etype, level, path);\n            return [\n                {\n                    or: {\n                        patterns: [notPats, ...nilPats],\n                        joinSym: makeVar(etype, level),\n                    },\n                },\n            ];\n        }\n        if ((v === null || v === void 0 ? void 0 : v.hasOwnProperty(\"$isNull\")) && v.$isNull === true && path.length > 1) {\n            // Make sure we're capturing all of the intermediate paths that might be null\n            // by checking for null at each step along the path\n            return [\n                {\n                    or: {\n                        patterns: whereCondAttrPatsForNullIsTrue(makeVar, store, etype, level, path),\n                        joinSym: makeVar(etype, level),\n                    },\n                },\n            ];\n        }\n        return whereCondAttrPats(makeVar, store, etype, level, path, v);\n    });\n}\nfunction makeWhere(store, etype, level, where) {\n    const makeVar = makeVarImpl;\n    if (!where) {\n        return defaultWhere(makeVar, store, etype, level);\n    }\n    const parsedWhere = parseWhere(makeVar, store, etype, level, where);\n    return parsedWhere.concat(defaultWhere(makeVar, store, etype, level));\n}\n// Find\n// -----------------\nfunction makeFind(makeVar, etype, level) {\n    return [makeVar(etype, level), makeVar(\"time\", level)];\n}\n// extendObjects\n// -----------------\nfunction makeJoin(makeVar, store, etype, level, label, eid) {\n    const [nextEtype, nextLevel, pat, attr, isForward] = refAttrPat(makeVar, store, etype, level, label);\n    const actualized = replaceInAttrPat(pat, makeVar(etype, level), eid);\n    return [nextEtype, nextLevel, actualized, attr, isForward];\n}\nfunction extendObjects(makeVar, store, { etype, level, form }, objects) {\n    const childQueries = Object.keys(form).filter((c) => c !== \"$\");\n    if (!childQueries.length) {\n        return Object.values(objects);\n    }\n    return Object.entries(objects).map(function extendChildren([eid, parent]) {\n        const childResults = childQueries.map(function getChildResult(label) {\n            var _a, _b, _c;\n            const isSingular = Boolean(store.cardinalityInference &&\n                ((_c = (_b = (_a = store.linkIndex) === null || _a === void 0 ? void 0 : _a[etype]) === null || _b === void 0 ? void 0 : _b[label]) === null || _c === void 0 ? void 0 : _c.isSingular));\n            try {\n                const [nextEtype, nextLevel, join] = makeJoin(makeVar, store, etype, level, label, eid);\n                const childrenArray = queryOne(store, {\n                    etype: nextEtype,\n                    level: nextLevel,\n                    form: form[label],\n                    join,\n                });\n                const childOrChildren = isSingular ? childrenArray[0] : childrenArray;\n                return { [label]: childOrChildren };\n            }\n            catch (e) {\n                if (e instanceof AttrNotFoundError) {\n                    return { [label]: isSingular ? undefined : [] };\n                }\n                throw e;\n            }\n        });\n        return childResults.reduce(function reduceChildren(parent, child) {\n            return Object.assign(Object.assign({}, parent), child);\n        }, parent);\n    });\n}\n// resolveObjects\n// -----------------\nfunction shouldIgnoreAttr(attrs, id) {\n    const attr = attrs[id];\n    return attr[\"value-type\"] === \"ref\" && attr[\"forward-identity\"][2] !== \"id\";\n}\nfunction compareOrder([id_a, v_a], [id_b, v_b]) {\n    if (v_a === v_b || (v_a == null && v_b == null)) {\n        return (0,_utils_uuid__WEBPACK_IMPORTED_MODULE_1__.uuidCompare)(id_a, id_b);\n    }\n    if (v_b == null) {\n        return 1;\n    }\n    if (v_a == null) {\n        return -1;\n    }\n    if (v_a > v_b) {\n        return 1;\n    }\n    return -1;\n}\nfunction comparableDate(x) {\n    if (x == null) {\n        return x;\n    }\n    return new Date(x).getTime();\n}\nfunction isBefore(startCursor, orderAttr, direction, idVec) {\n    var _a;\n    const [c_e, _c_a, c_v, c_t] = startCursor;\n    const compareVal = direction === \"desc\" ? 1 : -1;\n    if (((_a = orderAttr[\"forward-identity\"]) === null || _a === void 0 ? void 0 : _a[2]) === \"id\") {\n        return compareOrder(idVec, [c_e, c_t]) === compareVal;\n    }\n    const [e, v] = idVec;\n    const v_new = orderAttr[\"checked-data-type\"] === \"date\" ? comparableDate(v) : v;\n    const c_v_new = orderAttr[\"checked-data-type\"] === \"date\" ? comparableDate(c_v) : c_v;\n    return compareOrder([e, v_new], [c_e, c_v_new]) === compareVal;\n}\nfunction orderAttrFromCursor(store, cursor) {\n    const cursorAttrId = cursor[1];\n    return store.attrs[cursorAttrId];\n}\nfunction orderAttrFromOrder(store, etype, order) {\n    const label = Object.keys(order)[0];\n    return _store__WEBPACK_IMPORTED_MODULE_2__.getAttrByFwdIdentName(store, etype, label);\n}\nfunction getOrderAttr(store, etype, cursor, order) {\n    if (cursor) {\n        return orderAttrFromCursor(store, cursor);\n    }\n    if (order) {\n        return orderAttrFromOrder(store, etype, order);\n    }\n}\nfunction runDataloadAndReturnObjects(store, etype, direction, pageInfo, order, dq) {\n    var _a;\n    let idVecs = (0,_datalog__WEBPACK_IMPORTED_MODULE_0__.query)(store, dq);\n    const startCursor = pageInfo === null || pageInfo === void 0 ? void 0 : pageInfo[\"start-cursor\"];\n    const orderAttr = getOrderAttr(store, etype, startCursor, order);\n    if (orderAttr && ((_a = orderAttr === null || orderAttr === void 0 ? void 0 : orderAttr[\"forward-identity\"]) === null || _a === void 0 ? void 0 : _a[2]) !== \"id\") {\n        const isDate = orderAttr[\"checked-data-type\"] === \"date\";\n        const a = orderAttr.id;\n        idVecs = idVecs.map(([id]) => {\n            var _a, _b, _c, _d, _e;\n            // order attr is required to be cardinality one, so there will\n            // be at most one value here\n            let v = (_e = (_d = (_c = (_b = (_a = store.eav.get(id)) === null || _a === void 0 ? void 0 : _a.get(a)) === null || _b === void 0 ? void 0 : _b.values()) === null || _c === void 0 ? void 0 : _c.next()) === null || _d === void 0 ? void 0 : _d.value) === null || _e === void 0 ? void 0 : _e[2];\n            if (isDate) {\n                v = comparableDate(v);\n            }\n            return [id, v];\n        });\n    }\n    idVecs.sort(direction === \"asc\"\n        ? function compareIdVecs(a, b) {\n            return compareOrder(a, b);\n        }\n        : function compareIdVecs(a, b) {\n            return compareOrder(b, a);\n        });\n    let objects = {};\n    for (const idVec of idVecs) {\n        const [id] = idVec;\n        if (objects[id]) {\n            continue;\n        }\n        if (startCursor &&\n            orderAttr &&\n            isBefore(startCursor, orderAttr, direction, idVec)) {\n            continue;\n        }\n        const obj = _store__WEBPACK_IMPORTED_MODULE_2__.getAsObject(store, etype, id);\n        if (obj) {\n            objects[id] = obj;\n        }\n    }\n    return objects;\n}\nfunction determineOrder(form) {\n    var _a;\n    const orderOpts = (_a = form.$) === null || _a === void 0 ? void 0 : _a.order;\n    if (!orderOpts) {\n        return \"asc\";\n    }\n    return orderOpts[Object.keys(orderOpts)[0]] || \"asc\";\n}\n/**\n * Given a query like:\n *\n * {\n *   users: {\n *     $: { where: { name: \"Joe\" } },\n *   },\n * };\n *\n * `resolveObjects`, turns where clause: `{ name: \"Joe\" }`\n * into a datalog query. We then run the datalog query,\n * and reduce all the triples into objects.\n */\nfunction resolveObjects(store, { etype, level, form, join, pageInfo }) {\n    var _a, _b, _c, _d, _e, _g, _h, _j;\n    const limit = ((_a = form.$) === null || _a === void 0 ? void 0 : _a.limit) || ((_b = form.$) === null || _b === void 0 ? void 0 : _b.first) || ((_c = form.$) === null || _c === void 0 ? void 0 : _c.last);\n    const offset = (_d = form.$) === null || _d === void 0 ? void 0 : _d.offset;\n    const before = (_e = form.$) === null || _e === void 0 ? void 0 : _e.before;\n    const after = (_g = form.$) === null || _g === void 0 ? void 0 : _g.after;\n    const order = (_h = form.$) === null || _h === void 0 ? void 0 : _h.order;\n    // Wait for server to tell us where we start if we don't start from the beginning\n    if ((offset || before || after) && (!pageInfo || !pageInfo[\"start-cursor\"])) {\n        return [];\n    }\n    const where = withJoin(makeWhere(store, etype, level, (_j = form.$) === null || _j === void 0 ? void 0 : _j.where), join);\n    const find = makeFind(makeVarImpl, etype, level);\n    const objs = runDataloadAndReturnObjects(store, etype, determineOrder(form), pageInfo, order, { where, find });\n    if (limit != null) {\n        const entries = Object.entries(objs);\n        if (entries.length <= limit) {\n            return objs;\n        }\n        return Object.fromEntries(entries.slice(0, limit));\n    }\n    return objs;\n}\n/**\n * It's possible that we query\n * for an attribute that doesn't exist yet.\n *\n * { users: { $: { where: { nonExistentProperty: \"foo\" } } } }\n *\n * This swallows the missing attr error and returns\n * an empty result instead\n */\nfunction guardedResolveObjects(store, opts) {\n    try {\n        return resolveObjects(store, opts);\n    }\n    catch (e) {\n        if (e instanceof AttrNotFoundError) {\n            return {};\n        }\n        throw e;\n    }\n}\n/**\n * Given a query like:\n *\n * {\n *   users: {\n *     $: { where: { name: \"Joe\" } },\n *     posts: {},\n *   },\n * };\n *\n * `guardResolveObjects` will return the relevant `users` objects\n * `extendObjects` will then extend each `user` object with relevant `posts`.\n */\nfunction queryOne(store, opts) {\n    const objects = guardedResolveObjects(store, opts);\n    return extendObjects(makeVarImpl, store, opts, objects);\n}\nfunction formatPageInfo(pageInfo) {\n    const res = {};\n    for (const [k, v] of Object.entries(pageInfo)) {\n        res[k] = {\n            startCursor: v[\"start-cursor\"],\n            endCursor: v[\"end-cursor\"],\n            hasNextPage: v[\"has-next-page?\"],\n            hasPreviousPage: v[\"has-previous-page?\"],\n        };\n    }\n    return res;\n}\nfunction query({ store, pageInfo, aggregate }, q) {\n    const data = Object.keys(q).reduce(function reduceResult(res, k) {\n        if (aggregate === null || aggregate === void 0 ? void 0 : aggregate[k]) {\n            // Aggregate doesn't return any join rows and has no children,\n            // so don't bother querying further\n            return res;\n        }\n        res[k] = queryOne(store, {\n            etype: k,\n            form: q[k],\n            level: 0,\n            pageInfo: pageInfo === null || pageInfo === void 0 ? void 0 : pageInfo[k],\n        });\n        return res;\n    }, {});\n    const result = { data };\n    if (pageInfo) {\n        result.pageInfo = formatPageInfo(pageInfo);\n    }\n    if (aggregate) {\n        result.aggregate = aggregate;\n    }\n    return result;\n}\n//# sourceMappingURL=instaql.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/instaql.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/instatx.js":
/*!*************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/instatx.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getOps: () => (/* binding */ getOps),\n/* harmony export */   isLookup: () => (/* binding */ isLookup),\n/* harmony export */   lookup: () => (/* binding */ lookup),\n/* harmony export */   parseLookup: () => (/* binding */ parseLookup),\n/* harmony export */   tx: () => (/* binding */ tx),\n/* harmony export */   txInit: () => (/* binding */ txInit)\n/* harmony export */ });\nfunction transactionChunk(etype, id, prevOps) {\n    return new Proxy({}, {\n        get: (_target, cmd) => {\n            if (cmd === \"__ops\")\n                return prevOps;\n            return (args) => {\n                return transactionChunk(etype, id, [\n                    ...prevOps,\n                    [cmd, etype, id, args],\n                ]);\n            };\n        },\n    });\n}\n/**\n * Creates a lookup to use in place of an id in a transaction\n *\n * @example\n * tx.users[lookup('email', 'lyndon@example.com')].update({name: 'Lyndon'})\n */\nfunction lookup(attribute, value) {\n    return `lookup__${attribute}__${JSON.stringify(value)}`;\n}\nfunction isLookup(k) {\n    return k.startsWith(\"lookup__\");\n}\nfunction parseLookup(k) {\n    const [_, attribute, ...vJSON] = k.split(\"__\");\n    return [attribute, JSON.parse(vJSON.join(\"__\"))];\n}\nfunction etypeChunk(etype) {\n    return new Proxy({}, {\n        get(_target, id) {\n            if (isLookup(id)) {\n                return transactionChunk(etype, parseLookup(id), []);\n            }\n            return transactionChunk(etype, id, []);\n        },\n    });\n}\nfunction txInit() {\n    return new Proxy({}, {\n        get(_target, ns) {\n            return etypeChunk(ns);\n        },\n    });\n}\n/**\n * A handy builder for changes.\n *\n * You must start with the `namespace` you want to change:\n *\n * @example\n *   tx.goals[goalId].update({title: \"Get fit\"})\n *   // Note: you don't need to create `goals` ahead of time.\n */\nconst tx = txInit();\nfunction getOps(x) {\n    return x.__ops;\n}\n//# sourceMappingURL=instatx.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL2luc3RhdHguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJELGVBQWU7QUFDMUU7QUFDTztBQUNQLHNCQUFzQixVQUFVLElBQUksc0JBQXNCO0FBQzFEO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNPO0FBQ1AsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLGlCQUFpQjtBQUMvQztBQUNBO0FBQ087QUFDQTtBQUNQO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxERUxMXFxEb2N1bWVudHNcXGVtYWlsLWNoYXQtaW50ZXJmYWNlXFxub2RlX21vZHVsZXNcXEBpbnN0YW50ZGJcXGNvcmVcXGRpc3RcXG1vZHVsZVxcaW5zdGF0eC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiB0cmFuc2FjdGlvbkNodW5rKGV0eXBlLCBpZCwgcHJldk9wcykge1xuICAgIHJldHVybiBuZXcgUHJveHkoe30sIHtcbiAgICAgICAgZ2V0OiAoX3RhcmdldCwgY21kKSA9PiB7XG4gICAgICAgICAgICBpZiAoY21kID09PSBcIl9fb3BzXCIpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHByZXZPcHM7XG4gICAgICAgICAgICByZXR1cm4gKGFyZ3MpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJhbnNhY3Rpb25DaHVuayhldHlwZSwgaWQsIFtcbiAgICAgICAgICAgICAgICAgICAgLi4ucHJldk9wcyxcbiAgICAgICAgICAgICAgICAgICAgW2NtZCwgZXR5cGUsIGlkLCBhcmdzXSxcbiAgICAgICAgICAgICAgICBdKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0sXG4gICAgfSk7XG59XG4vKipcbiAqIENyZWF0ZXMgYSBsb29rdXAgdG8gdXNlIGluIHBsYWNlIG9mIGFuIGlkIGluIGEgdHJhbnNhY3Rpb25cbiAqXG4gKiBAZXhhbXBsZVxuICogdHgudXNlcnNbbG9va3VwKCdlbWFpbCcsICdseW5kb25AZXhhbXBsZS5jb20nKV0udXBkYXRlKHtuYW1lOiAnTHluZG9uJ30pXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBsb29rdXAoYXR0cmlidXRlLCB2YWx1ZSkge1xuICAgIHJldHVybiBgbG9va3VwX18ke2F0dHJpYnV0ZX1fXyR7SlNPTi5zdHJpbmdpZnkodmFsdWUpfWA7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNMb29rdXAoaykge1xuICAgIHJldHVybiBrLnN0YXJ0c1dpdGgoXCJsb29rdXBfX1wiKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUxvb2t1cChrKSB7XG4gICAgY29uc3QgW18sIGF0dHJpYnV0ZSwgLi4udkpTT05dID0gay5zcGxpdChcIl9fXCIpO1xuICAgIHJldHVybiBbYXR0cmlidXRlLCBKU09OLnBhcnNlKHZKU09OLmpvaW4oXCJfX1wiKSldO1xufVxuZnVuY3Rpb24gZXR5cGVDaHVuayhldHlwZSkge1xuICAgIHJldHVybiBuZXcgUHJveHkoe30sIHtcbiAgICAgICAgZ2V0KF90YXJnZXQsIGlkKSB7XG4gICAgICAgICAgICBpZiAoaXNMb29rdXAoaWQpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRyYW5zYWN0aW9uQ2h1bmsoZXR5cGUsIHBhcnNlTG9va3VwKGlkKSwgW10pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRyYW5zYWN0aW9uQ2h1bmsoZXR5cGUsIGlkLCBbXSk7XG4gICAgICAgIH0sXG4gICAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gdHhJbml0KCkge1xuICAgIHJldHVybiBuZXcgUHJveHkoe30sIHtcbiAgICAgICAgZ2V0KF90YXJnZXQsIG5zKSB7XG4gICAgICAgICAgICByZXR1cm4gZXR5cGVDaHVuayhucyk7XG4gICAgICAgIH0sXG4gICAgfSk7XG59XG4vKipcbiAqIEEgaGFuZHkgYnVpbGRlciBmb3IgY2hhbmdlcy5cbiAqXG4gKiBZb3UgbXVzdCBzdGFydCB3aXRoIHRoZSBgbmFtZXNwYWNlYCB5b3Ugd2FudCB0byBjaGFuZ2U6XG4gKlxuICogQGV4YW1wbGVcbiAqICAgdHguZ29hbHNbZ29hbElkXS51cGRhdGUoe3RpdGxlOiBcIkdldCBmaXRcIn0pXG4gKiAgIC8vIE5vdGU6IHlvdSBkb24ndCBuZWVkIHRvIGNyZWF0ZSBgZ29hbHNgIGFoZWFkIG9mIHRpbWUuXG4gKi9cbmV4cG9ydCBjb25zdCB0eCA9IHR4SW5pdCgpO1xuZXhwb3J0IGZ1bmN0aW9uIGdldE9wcyh4KSB7XG4gICAgcmV0dXJuIHguX19vcHM7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnN0YXR4LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/instatx.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/model/instaqlResult.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/model/instaqlResult.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractTriples: () => (/* binding */ extractTriples)\n/* harmony export */ });\nfunction _extractTriplesHelper(idNodes, acc = []) {\n    idNodes.forEach((idNode) => {\n        const { data } = idNode;\n        const { \"datalog-result\": datalogResult } = data;\n        const { \"join-rows\": joinRows } = datalogResult;\n        for (const rows of joinRows) {\n            for (const triple of rows) {\n                acc.push(triple);\n            }\n        }\n        _extractTriplesHelper(idNode[\"child-nodes\"], acc);\n    });\n}\n/**\n * Marshall instaql-result into list of triples. Instaql-result may have\n * multiple datalog-results, each datalog-result may have multiple join-rows\n * and each join-row may have triples.The union of these triples may have\n * duplicates, so we dedup them.\n */\nfunction extractTriples(idNodes) {\n    const triples = [];\n    _extractTriplesHelper(idNodes, triples);\n    return triples;\n}\n//# sourceMappingURL=instaqlResult.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL21vZGVsL2luc3RhcWxSZXN1bHQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQSxnQkFBZ0IsT0FBTztBQUN2QixnQkFBZ0Isa0NBQWtDO0FBQ2xELGdCQUFnQix3QkFBd0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXERFTExcXERvY3VtZW50c1xcZW1haWwtY2hhdC1pbnRlcmZhY2VcXG5vZGVfbW9kdWxlc1xcQGluc3RhbnRkYlxcY29yZVxcZGlzdFxcbW9kdWxlXFxtb2RlbFxcaW5zdGFxbFJlc3VsdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfZXh0cmFjdFRyaXBsZXNIZWxwZXIoaWROb2RlcywgYWNjID0gW10pIHtcbiAgICBpZE5vZGVzLmZvckVhY2goKGlkTm9kZSkgPT4ge1xuICAgICAgICBjb25zdCB7IGRhdGEgfSA9IGlkTm9kZTtcbiAgICAgICAgY29uc3QgeyBcImRhdGFsb2ctcmVzdWx0XCI6IGRhdGFsb2dSZXN1bHQgfSA9IGRhdGE7XG4gICAgICAgIGNvbnN0IHsgXCJqb2luLXJvd3NcIjogam9pblJvd3MgfSA9IGRhdGFsb2dSZXN1bHQ7XG4gICAgICAgIGZvciAoY29uc3Qgcm93cyBvZiBqb2luUm93cykge1xuICAgICAgICAgICAgZm9yIChjb25zdCB0cmlwbGUgb2Ygcm93cykge1xuICAgICAgICAgICAgICAgIGFjYy5wdXNoKHRyaXBsZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgX2V4dHJhY3RUcmlwbGVzSGVscGVyKGlkTm9kZVtcImNoaWxkLW5vZGVzXCJdLCBhY2MpO1xuICAgIH0pO1xufVxuLyoqXG4gKiBNYXJzaGFsbCBpbnN0YXFsLXJlc3VsdCBpbnRvIGxpc3Qgb2YgdHJpcGxlcy4gSW5zdGFxbC1yZXN1bHQgbWF5IGhhdmVcbiAqIG11bHRpcGxlIGRhdGFsb2ctcmVzdWx0cywgZWFjaCBkYXRhbG9nLXJlc3VsdCBtYXkgaGF2ZSBtdWx0aXBsZSBqb2luLXJvd3NcbiAqIGFuZCBlYWNoIGpvaW4tcm93IG1heSBoYXZlIHRyaXBsZXMuVGhlIHVuaW9uIG9mIHRoZXNlIHRyaXBsZXMgbWF5IGhhdmVcbiAqIGR1cGxpY2F0ZXMsIHNvIHdlIGRlZHVwIHRoZW0uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBleHRyYWN0VHJpcGxlcyhpZE5vZGVzKSB7XG4gICAgY29uc3QgdHJpcGxlcyA9IFtdO1xuICAgIF9leHRyYWN0VHJpcGxlc0hlbHBlcihpZE5vZGVzLCB0cmlwbGVzKTtcbiAgICByZXR1cm4gdHJpcGxlcztcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluc3RhcWxSZXN1bHQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/model/instaqlResult.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/presence.js":
/*!**************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/presence.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildPresenceSlice: () => (/* binding */ buildPresenceSlice),\n/* harmony export */   hasPresenceResponseChanged: () => (/* binding */ hasPresenceResponseChanged)\n/* harmony export */ });\n/* harmony import */ var _utils_pick__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/pick */ \"(ssr)/./node_modules/@instantdb/core/dist/module/utils/pick.js\");\n/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/object */ \"(ssr)/./node_modules/@instantdb/core/dist/module/utils/object.js\");\n\n\nfunction buildPresenceSlice(data, opts, userPeerId) {\n    var _a, _b;\n    const slice = {\n        peers: {},\n    };\n    const includeUser = opts && \"user\" in opts ? opts.user : true;\n    if (includeUser) {\n        const user = (0,_utils_pick__WEBPACK_IMPORTED_MODULE_0__.pick)((_a = data.user) !== null && _a !== void 0 ? _a : {}, opts === null || opts === void 0 ? void 0 : opts.keys);\n        slice.user = Object.assign(Object.assign({}, user), { peerId: userPeerId });\n    }\n    for (const id of Object.keys((_b = data.peers) !== null && _b !== void 0 ? _b : {})) {\n        const shouldIncludeAllPeers = (opts === null || opts === void 0 ? void 0 : opts.peers) === undefined;\n        const isPeerIncluded = Array.isArray(opts === null || opts === void 0 ? void 0 : opts.peers) && (opts === null || opts === void 0 ? void 0 : opts.peers.includes(id));\n        if (shouldIncludeAllPeers || isPeerIncluded) {\n            const peer = (0,_utils_pick__WEBPACK_IMPORTED_MODULE_0__.pick)(data.peers[id], opts === null || opts === void 0 ? void 0 : opts.keys);\n            slice.peers[id] = Object.assign(Object.assign({}, peer), { peerId: id });\n        }\n    }\n    return slice;\n}\n/**\n * Compare two presence slices\n * 0. compare isLoading and error\n * 1. shallow compare user\n * 2. compare peers keys\n * 3. shallow compare each peer\n */\nfunction hasPresenceResponseChanged(a, b) {\n    if (a.isLoading !== b.isLoading)\n        return true;\n    if (a.error !== b.error)\n        return true;\n    if (a.user || b.user) {\n        if (!a.user || !b.user)\n            return true;\n        const same = (0,_utils_object__WEBPACK_IMPORTED_MODULE_1__.areObjectsShallowEqual)(a.user, b.user);\n        if (!same)\n            return true;\n    }\n    const sameKeys = (0,_utils_object__WEBPACK_IMPORTED_MODULE_1__.areObjectKeysEqual)(a.peers, b.peers);\n    if (!sameKeys)\n        return true;\n    for (const id of Object.keys(a.peers)) {\n        const same = (0,_utils_object__WEBPACK_IMPORTED_MODULE_1__.areObjectsShallowEqual)(a.peers[id], b.peers[id]);\n        if (!same)\n            return true;\n    }\n    return false;\n}\n//# sourceMappingURL=presence.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL3ByZXNlbmNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBb0M7QUFDd0M7QUFDckU7QUFDUDtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixpREFBSSxxREFBcUQ7QUFDOUUsbURBQW1ELFdBQVcsb0JBQW9CO0FBQ2xGO0FBQ0Esc0ZBQXNGO0FBQ3RGO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixpREFBSTtBQUM3Qiw0REFBNEQsV0FBVyxZQUFZO0FBQ25GO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHFFQUFzQjtBQUMzQztBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsaUVBQWtCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixxRUFBc0I7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXERFTExcXERvY3VtZW50c1xcZW1haWwtY2hhdC1pbnRlcmZhY2VcXG5vZGVfbW9kdWxlc1xcQGluc3RhbnRkYlxcY29yZVxcZGlzdFxcbW9kdWxlXFxwcmVzZW5jZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwaWNrIH0gZnJvbSBcIi4vdXRpbHMvcGlja1wiO1xuaW1wb3J0IHsgYXJlT2JqZWN0c1NoYWxsb3dFcXVhbCwgYXJlT2JqZWN0S2V5c0VxdWFsIH0gZnJvbSBcIi4vdXRpbHMvb2JqZWN0XCI7XG5leHBvcnQgZnVuY3Rpb24gYnVpbGRQcmVzZW5jZVNsaWNlKGRhdGEsIG9wdHMsIHVzZXJQZWVySWQpIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIGNvbnN0IHNsaWNlID0ge1xuICAgICAgICBwZWVyczoge30sXG4gICAgfTtcbiAgICBjb25zdCBpbmNsdWRlVXNlciA9IG9wdHMgJiYgXCJ1c2VyXCIgaW4gb3B0cyA/IG9wdHMudXNlciA6IHRydWU7XG4gICAgaWYgKGluY2x1ZGVVc2VyKSB7XG4gICAgICAgIGNvbnN0IHVzZXIgPSBwaWNrKChfYSA9IGRhdGEudXNlcikgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDoge30sIG9wdHMgPT09IG51bGwgfHwgb3B0cyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0cy5rZXlzKTtcbiAgICAgICAgc2xpY2UudXNlciA9IE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgdXNlciksIHsgcGVlcklkOiB1c2VyUGVlcklkIH0pO1xuICAgIH1cbiAgICBmb3IgKGNvbnN0IGlkIG9mIE9iamVjdC5rZXlzKChfYiA9IGRhdGEucGVlcnMpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IHt9KSkge1xuICAgICAgICBjb25zdCBzaG91bGRJbmNsdWRlQWxsUGVlcnMgPSAob3B0cyA9PT0gbnVsbCB8fCBvcHRzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRzLnBlZXJzKSA9PT0gdW5kZWZpbmVkO1xuICAgICAgICBjb25zdCBpc1BlZXJJbmNsdWRlZCA9IEFycmF5LmlzQXJyYXkob3B0cyA9PT0gbnVsbCB8fCBvcHRzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRzLnBlZXJzKSAmJiAob3B0cyA9PT0gbnVsbCB8fCBvcHRzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRzLnBlZXJzLmluY2x1ZGVzKGlkKSk7XG4gICAgICAgIGlmIChzaG91bGRJbmNsdWRlQWxsUGVlcnMgfHwgaXNQZWVySW5jbHVkZWQpIHtcbiAgICAgICAgICAgIGNvbnN0IHBlZXIgPSBwaWNrKGRhdGEucGVlcnNbaWRdLCBvcHRzID09PSBudWxsIHx8IG9wdHMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdHMua2V5cyk7XG4gICAgICAgICAgICBzbGljZS5wZWVyc1tpZF0gPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHBlZXIpLCB7IHBlZXJJZDogaWQgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHNsaWNlO1xufVxuLyoqXG4gKiBDb21wYXJlIHR3byBwcmVzZW5jZSBzbGljZXNcbiAqIDAuIGNvbXBhcmUgaXNMb2FkaW5nIGFuZCBlcnJvclxuICogMS4gc2hhbGxvdyBjb21wYXJlIHVzZXJcbiAqIDIuIGNvbXBhcmUgcGVlcnMga2V5c1xuICogMy4gc2hhbGxvdyBjb21wYXJlIGVhY2ggcGVlclxuICovXG5leHBvcnQgZnVuY3Rpb24gaGFzUHJlc2VuY2VSZXNwb25zZUNoYW5nZWQoYSwgYikge1xuICAgIGlmIChhLmlzTG9hZGluZyAhPT0gYi5pc0xvYWRpbmcpXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIGlmIChhLmVycm9yICE9PSBiLmVycm9yKVxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICBpZiAoYS51c2VyIHx8IGIudXNlcikge1xuICAgICAgICBpZiAoIWEudXNlciB8fCAhYi51c2VyKVxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIGNvbnN0IHNhbWUgPSBhcmVPYmplY3RzU2hhbGxvd0VxdWFsKGEudXNlciwgYi51c2VyKTtcbiAgICAgICAgaWYgKCFzYW1lKVxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGNvbnN0IHNhbWVLZXlzID0gYXJlT2JqZWN0S2V5c0VxdWFsKGEucGVlcnMsIGIucGVlcnMpO1xuICAgIGlmICghc2FtZUtleXMpXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIGZvciAoY29uc3QgaWQgb2YgT2JqZWN0LmtleXMoYS5wZWVycykpIHtcbiAgICAgICAgY29uc3Qgc2FtZSA9IGFyZU9iamVjdHNTaGFsbG93RXF1YWwoYS5wZWVyc1tpZF0sIGIucGVlcnNbaWRdKTtcbiAgICAgICAgaWYgKCFzYW1lKVxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXByZXNlbmNlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/presence.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/schema.js":
/*!************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/schema.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   i: () => (/* binding */ i)\n/* harmony export */ });\n/* harmony import */ var _schemaTypes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./schemaTypes */ \"(ssr)/./node_modules/@instantdb/core/dist/module/schemaTypes.js\");\n\n// ==========\n// API\n/**\n * @deprecated\n * `i.graph` is deprecated. Use `i.schema` instead.\n *\n * @example\n * // Before\n * i.graph(entities, links).withRoomSchema<RoomType>();\n *\n * // After\n * i.schema({ entities, links, rooms })\n *\n * @see\n * https://instantdb.com/docs/schema\n */\nfunction graph(entities, links) {\n    return new _schemaTypes__WEBPACK_IMPORTED_MODULE_0__.InstantSchemaDef(enrichEntitiesWithLinks(entities, links), \n    // (XXX): LinksDef<any> stems from TypeScript’s inability to reconcile the\n    // type EntitiesWithLinks<EntitiesWithoutLinks, Links> with\n    // EntitiesWithoutLinks. TypeScript is strict about ensuring that types are\n    // correctly aligned and does not allow for substituting a type that might\n    // be broader or have additional properties.\n    links, undefined);\n}\n/**\n * Creates an entity definition, to be used in conjunction with `i.graph`.\n *\n * @see https://instantdb.com/docs/schema\n * @example\n *   {\n *     posts: i.entity({\n *       title: i.string(),\n *       body: i.string(),\n *     }),\n *     comments: i.entity({\n *       body: i.string(),\n *     })\n *   }\n */\nfunction entity(attrs) {\n    return new _schemaTypes__WEBPACK_IMPORTED_MODULE_0__.EntityDef(attrs, {});\n}\nfunction string() {\n    return new _schemaTypes__WEBPACK_IMPORTED_MODULE_0__.DataAttrDef(\"string\", true);\n}\nfunction number() {\n    return new _schemaTypes__WEBPACK_IMPORTED_MODULE_0__.DataAttrDef(\"number\", true);\n}\nfunction boolean() {\n    return new _schemaTypes__WEBPACK_IMPORTED_MODULE_0__.DataAttrDef(\"boolean\", true);\n}\nfunction date() {\n    return new _schemaTypes__WEBPACK_IMPORTED_MODULE_0__.DataAttrDef(\"date\", true);\n}\nfunction json() {\n    return new _schemaTypes__WEBPACK_IMPORTED_MODULE_0__.DataAttrDef(\"json\", true);\n}\nfunction any() {\n    return new _schemaTypes__WEBPACK_IMPORTED_MODULE_0__.DataAttrDef(\"json\", true);\n}\n// ==========\n// internal\nfunction enrichEntitiesWithLinks(entities, links) {\n    var _a, _b, _c, _d;\n    const linksIndex = { fwd: {}, rev: {} };\n    for (const linkDef of Object.values(links)) {\n        (_a = linksIndex.fwd)[_b = linkDef.forward.on] || (_a[_b] = {});\n        (_c = linksIndex.rev)[_d = linkDef.reverse.on] || (_c[_d] = {});\n        linksIndex.fwd[linkDef.forward.on][linkDef.forward.label] = {\n            entityName: linkDef.reverse.on,\n            cardinality: linkDef.forward.has,\n        };\n        linksIndex.rev[linkDef.reverse.on][linkDef.reverse.label] = {\n            entityName: linkDef.forward.on,\n            cardinality: linkDef.reverse.has,\n        };\n    }\n    const enrichedEntities = Object.fromEntries(Object.entries(entities).map(([name, def]) => [\n        name,\n        new _schemaTypes__WEBPACK_IMPORTED_MODULE_0__.EntityDef(def.attrs, Object.assign(Object.assign({}, linksIndex.fwd[name]), linksIndex.rev[name])),\n    ]));\n    return enrichedEntities;\n}\n/**\n * Lets you define a schema for your database.\n *\n * You can define entities, links between entities, and if you use\n * presence, you can define rooms.\n *\n * You can push this schema to your database with the CLI,\n * or use it inside `init`, to get typesafety and autocompletion.\n *\n * @see https://instantdb.com/docs/schema\n * @example\n *   i.schema({\n *     entities: { },\n *     links: { },\n *     rooms: { }\n *   });\n */\nfunction schema({ entities, links, rooms, }) {\n    const linksDef = links !== null && links !== void 0 ? links : {};\n    const roomsDef = rooms !== null && rooms !== void 0 ? rooms : {};\n    return new _schemaTypes__WEBPACK_IMPORTED_MODULE_0__.InstantSchemaDef(enrichEntitiesWithLinks(entities, linksDef), \n    // (XXX): LinksDef<any> stems from TypeScript’s inability to reconcile the\n    // type EntitiesWithLinks<EntitiesWithoutLinks, Links> with\n    // EntitiesWithoutLinks. TypeScript is strict about ensuring that types are\n    // correctly aligned and does not allow for substituting a type that might\n    // be broader or have additional properties.\n    linksDef, roomsDef);\n}\nconst i = {\n    // constructs\n    graph,\n    schema,\n    entity,\n    // value types\n    string,\n    number,\n    boolean,\n    date,\n    json,\n    any,\n};\n//# sourceMappingURL=schema.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL3NjaGVtYS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwRTtBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyx3QkFBd0I7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsMERBQWdCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtREFBUyxVQUFVO0FBQ2xDO0FBQ0E7QUFDQSxlQUFlLHFEQUFXO0FBQzFCO0FBQ0E7QUFDQSxlQUFlLHFEQUFXO0FBQzFCO0FBQ0E7QUFDQSxlQUFlLHFEQUFXO0FBQzFCO0FBQ0E7QUFDQSxlQUFlLHFEQUFXO0FBQzFCO0FBQ0E7QUFDQSxlQUFlLHFEQUFXO0FBQzFCO0FBQ0E7QUFDQSxlQUFlLHFEQUFXO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsT0FBTztBQUNoQztBQUNBLHNFQUFzRTtBQUN0RSxzRUFBc0U7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksbURBQVMsMENBQTBDO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQjtBQUNwQixpQkFBaUI7QUFDakI7QUFDQSxNQUFNO0FBQ047QUFDQSxrQkFBa0IseUJBQXlCO0FBQzNDO0FBQ0E7QUFDQSxlQUFlLDBEQUFnQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcREVMTFxcRG9jdW1lbnRzXFxlbWFpbC1jaGF0LWludGVyZmFjZVxcbm9kZV9tb2R1bGVzXFxAaW5zdGFudGRiXFxjb3JlXFxkaXN0XFxtb2R1bGVcXHNjaGVtYS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbnRpdHlEZWYsIERhdGFBdHRyRGVmLCBJbnN0YW50U2NoZW1hRGVmLCB9IGZyb20gXCIuL3NjaGVtYVR5cGVzXCI7XG4vLyA9PT09PT09PT09XG4vLyBBUElcbi8qKlxuICogQGRlcHJlY2F0ZWRcbiAqIGBpLmdyYXBoYCBpcyBkZXByZWNhdGVkLiBVc2UgYGkuc2NoZW1hYCBpbnN0ZWFkLlxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBCZWZvcmVcbiAqIGkuZ3JhcGgoZW50aXRpZXMsIGxpbmtzKS53aXRoUm9vbVNjaGVtYTxSb29tVHlwZT4oKTtcbiAqXG4gKiAvLyBBZnRlclxuICogaS5zY2hlbWEoeyBlbnRpdGllcywgbGlua3MsIHJvb21zIH0pXG4gKlxuICogQHNlZVxuICogaHR0cHM6Ly9pbnN0YW50ZGIuY29tL2RvY3Mvc2NoZW1hXG4gKi9cbmZ1bmN0aW9uIGdyYXBoKGVudGl0aWVzLCBsaW5rcykge1xuICAgIHJldHVybiBuZXcgSW5zdGFudFNjaGVtYURlZihlbnJpY2hFbnRpdGllc1dpdGhMaW5rcyhlbnRpdGllcywgbGlua3MpLCBcbiAgICAvLyAoWFhYKTogTGlua3NEZWY8YW55PiBzdGVtcyBmcm9tIFR5cGVTY3JpcHTigJlzIGluYWJpbGl0eSB0byByZWNvbmNpbGUgdGhlXG4gICAgLy8gdHlwZSBFbnRpdGllc1dpdGhMaW5rczxFbnRpdGllc1dpdGhvdXRMaW5rcywgTGlua3M+IHdpdGhcbiAgICAvLyBFbnRpdGllc1dpdGhvdXRMaW5rcy4gVHlwZVNjcmlwdCBpcyBzdHJpY3QgYWJvdXQgZW5zdXJpbmcgdGhhdCB0eXBlcyBhcmVcbiAgICAvLyBjb3JyZWN0bHkgYWxpZ25lZCBhbmQgZG9lcyBub3QgYWxsb3cgZm9yIHN1YnN0aXR1dGluZyBhIHR5cGUgdGhhdCBtaWdodFxuICAgIC8vIGJlIGJyb2FkZXIgb3IgaGF2ZSBhZGRpdGlvbmFsIHByb3BlcnRpZXMuXG4gICAgbGlua3MsIHVuZGVmaW5lZCk7XG59XG4vKipcbiAqIENyZWF0ZXMgYW4gZW50aXR5IGRlZmluaXRpb24sIHRvIGJlIHVzZWQgaW4gY29uanVuY3Rpb24gd2l0aCBgaS5ncmFwaGAuXG4gKlxuICogQHNlZSBodHRwczovL2luc3RhbnRkYi5jb20vZG9jcy9zY2hlbWFcbiAqIEBleGFtcGxlXG4gKiAgIHtcbiAqICAgICBwb3N0czogaS5lbnRpdHkoe1xuICogICAgICAgdGl0bGU6IGkuc3RyaW5nKCksXG4gKiAgICAgICBib2R5OiBpLnN0cmluZygpLFxuICogICAgIH0pLFxuICogICAgIGNvbW1lbnRzOiBpLmVudGl0eSh7XG4gKiAgICAgICBib2R5OiBpLnN0cmluZygpLFxuICogICAgIH0pXG4gKiAgIH1cbiAqL1xuZnVuY3Rpb24gZW50aXR5KGF0dHJzKSB7XG4gICAgcmV0dXJuIG5ldyBFbnRpdHlEZWYoYXR0cnMsIHt9KTtcbn1cbmZ1bmN0aW9uIHN0cmluZygpIHtcbiAgICByZXR1cm4gbmV3IERhdGFBdHRyRGVmKFwic3RyaW5nXCIsIHRydWUpO1xufVxuZnVuY3Rpb24gbnVtYmVyKCkge1xuICAgIHJldHVybiBuZXcgRGF0YUF0dHJEZWYoXCJudW1iZXJcIiwgdHJ1ZSk7XG59XG5mdW5jdGlvbiBib29sZWFuKCkge1xuICAgIHJldHVybiBuZXcgRGF0YUF0dHJEZWYoXCJib29sZWFuXCIsIHRydWUpO1xufVxuZnVuY3Rpb24gZGF0ZSgpIHtcbiAgICByZXR1cm4gbmV3IERhdGFBdHRyRGVmKFwiZGF0ZVwiLCB0cnVlKTtcbn1cbmZ1bmN0aW9uIGpzb24oKSB7XG4gICAgcmV0dXJuIG5ldyBEYXRhQXR0ckRlZihcImpzb25cIiwgdHJ1ZSk7XG59XG5mdW5jdGlvbiBhbnkoKSB7XG4gICAgcmV0dXJuIG5ldyBEYXRhQXR0ckRlZihcImpzb25cIiwgdHJ1ZSk7XG59XG4vLyA9PT09PT09PT09XG4vLyBpbnRlcm5hbFxuZnVuY3Rpb24gZW5yaWNoRW50aXRpZXNXaXRoTGlua3MoZW50aXRpZXMsIGxpbmtzKSB7XG4gICAgdmFyIF9hLCBfYiwgX2MsIF9kO1xuICAgIGNvbnN0IGxpbmtzSW5kZXggPSB7IGZ3ZDoge30sIHJldjoge30gfTtcbiAgICBmb3IgKGNvbnN0IGxpbmtEZWYgb2YgT2JqZWN0LnZhbHVlcyhsaW5rcykpIHtcbiAgICAgICAgKF9hID0gbGlua3NJbmRleC5md2QpW19iID0gbGlua0RlZi5mb3J3YXJkLm9uXSB8fCAoX2FbX2JdID0ge30pO1xuICAgICAgICAoX2MgPSBsaW5rc0luZGV4LnJldilbX2QgPSBsaW5rRGVmLnJldmVyc2Uub25dIHx8IChfY1tfZF0gPSB7fSk7XG4gICAgICAgIGxpbmtzSW5kZXguZndkW2xpbmtEZWYuZm9yd2FyZC5vbl1bbGlua0RlZi5mb3J3YXJkLmxhYmVsXSA9IHtcbiAgICAgICAgICAgIGVudGl0eU5hbWU6IGxpbmtEZWYucmV2ZXJzZS5vbixcbiAgICAgICAgICAgIGNhcmRpbmFsaXR5OiBsaW5rRGVmLmZvcndhcmQuaGFzLFxuICAgICAgICB9O1xuICAgICAgICBsaW5rc0luZGV4LnJldltsaW5rRGVmLnJldmVyc2Uub25dW2xpbmtEZWYucmV2ZXJzZS5sYWJlbF0gPSB7XG4gICAgICAgICAgICBlbnRpdHlOYW1lOiBsaW5rRGVmLmZvcndhcmQub24sXG4gICAgICAgICAgICBjYXJkaW5hbGl0eTogbGlua0RlZi5yZXZlcnNlLmhhcyxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgY29uc3QgZW5yaWNoZWRFbnRpdGllcyA9IE9iamVjdC5mcm9tRW50cmllcyhPYmplY3QuZW50cmllcyhlbnRpdGllcykubWFwKChbbmFtZSwgZGVmXSkgPT4gW1xuICAgICAgICBuYW1lLFxuICAgICAgICBuZXcgRW50aXR5RGVmKGRlZi5hdHRycywgT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBsaW5rc0luZGV4LmZ3ZFtuYW1lXSksIGxpbmtzSW5kZXgucmV2W25hbWVdKSksXG4gICAgXSkpO1xuICAgIHJldHVybiBlbnJpY2hlZEVudGl0aWVzO1xufVxuLyoqXG4gKiBMZXRzIHlvdSBkZWZpbmUgYSBzY2hlbWEgZm9yIHlvdXIgZGF0YWJhc2UuXG4gKlxuICogWW91IGNhbiBkZWZpbmUgZW50aXRpZXMsIGxpbmtzIGJldHdlZW4gZW50aXRpZXMsIGFuZCBpZiB5b3UgdXNlXG4gKiBwcmVzZW5jZSwgeW91IGNhbiBkZWZpbmUgcm9vbXMuXG4gKlxuICogWW91IGNhbiBwdXNoIHRoaXMgc2NoZW1hIHRvIHlvdXIgZGF0YWJhc2Ugd2l0aCB0aGUgQ0xJLFxuICogb3IgdXNlIGl0IGluc2lkZSBgaW5pdGAsIHRvIGdldCB0eXBlc2FmZXR5IGFuZCBhdXRvY29tcGxldGlvbi5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vaW5zdGFudGRiLmNvbS9kb2NzL3NjaGVtYVxuICogQGV4YW1wbGVcbiAqICAgaS5zY2hlbWEoe1xuICogICAgIGVudGl0aWVzOiB7IH0sXG4gKiAgICAgbGlua3M6IHsgfSxcbiAqICAgICByb29tczogeyB9XG4gKiAgIH0pO1xuICovXG5mdW5jdGlvbiBzY2hlbWEoeyBlbnRpdGllcywgbGlua3MsIHJvb21zLCB9KSB7XG4gICAgY29uc3QgbGlua3NEZWYgPSBsaW5rcyAhPT0gbnVsbCAmJiBsaW5rcyAhPT0gdm9pZCAwID8gbGlua3MgOiB7fTtcbiAgICBjb25zdCByb29tc0RlZiA9IHJvb21zICE9PSBudWxsICYmIHJvb21zICE9PSB2b2lkIDAgPyByb29tcyA6IHt9O1xuICAgIHJldHVybiBuZXcgSW5zdGFudFNjaGVtYURlZihlbnJpY2hFbnRpdGllc1dpdGhMaW5rcyhlbnRpdGllcywgbGlua3NEZWYpLCBcbiAgICAvLyAoWFhYKTogTGlua3NEZWY8YW55PiBzdGVtcyBmcm9tIFR5cGVTY3JpcHTigJlzIGluYWJpbGl0eSB0byByZWNvbmNpbGUgdGhlXG4gICAgLy8gdHlwZSBFbnRpdGllc1dpdGhMaW5rczxFbnRpdGllc1dpdGhvdXRMaW5rcywgTGlua3M+IHdpdGhcbiAgICAvLyBFbnRpdGllc1dpdGhvdXRMaW5rcy4gVHlwZVNjcmlwdCBpcyBzdHJpY3QgYWJvdXQgZW5zdXJpbmcgdGhhdCB0eXBlcyBhcmVcbiAgICAvLyBjb3JyZWN0bHkgYWxpZ25lZCBhbmQgZG9lcyBub3QgYWxsb3cgZm9yIHN1YnN0aXR1dGluZyBhIHR5cGUgdGhhdCBtaWdodFxuICAgIC8vIGJlIGJyb2FkZXIgb3IgaGF2ZSBhZGRpdGlvbmFsIHByb3BlcnRpZXMuXG4gICAgbGlua3NEZWYsIHJvb21zRGVmKTtcbn1cbmV4cG9ydCBjb25zdCBpID0ge1xuICAgIC8vIGNvbnN0cnVjdHNcbiAgICBncmFwaCxcbiAgICBzY2hlbWEsXG4gICAgZW50aXR5LFxuICAgIC8vIHZhbHVlIHR5cGVzXG4gICAgc3RyaW5nLFxuICAgIG51bWJlcixcbiAgICBib29sZWFuLFxuICAgIGRhdGUsXG4gICAganNvbixcbiAgICBhbnksXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2NoZW1hLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/schema.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/schemaTypes.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/schemaTypes.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DataAttrDef: () => (/* binding */ DataAttrDef),\n/* harmony export */   EntityDef: () => (/* binding */ EntityDef),\n/* harmony export */   InstantGraph: () => (/* binding */ InstantGraph),\n/* harmony export */   InstantSchemaDef: () => (/* binding */ InstantSchemaDef),\n/* harmony export */   LinkAttrDef: () => (/* binding */ LinkAttrDef)\n/* harmony export */ });\nclass DataAttrDef {\n    constructor(valueType, required, config = { indexed: false, unique: false }) {\n        this.valueType = valueType;\n        this.required = required;\n        this.config = config;\n    }\n    optional() {\n        return new DataAttrDef(this.valueType, false);\n    }\n    unique() {\n        return new DataAttrDef(this.valueType, this.required, Object.assign(Object.assign({}, this.config), { unique: true }));\n    }\n    indexed() {\n        return new DataAttrDef(this.valueType, this.required, Object.assign(Object.assign({}, this.config), { indexed: true }));\n    }\n}\nclass LinkAttrDef {\n    constructor(cardinality, entityName) {\n        this.cardinality = cardinality;\n        this.entityName = entityName;\n    }\n}\nclass EntityDef {\n    constructor(attrs, links) {\n        this.attrs = attrs;\n        this.links = links;\n    }\n    asType() {\n        return new EntityDef(this.attrs, this.links);\n    }\n}\nclass InstantSchemaDef {\n    constructor(entities, links, rooms) {\n        this.entities = entities;\n        this.links = links;\n        this.rooms = rooms;\n    }\n    /**\n     * @deprecated\n     * `withRoomSchema` is deprecated. Define your schema in `rooms` directly:\n     *\n     * @example\n     * // Before:\n     * const schema = i.schema({\n     *   // ...\n     * }).withRoomSchema<RoomSchema>()\n     *\n     * // After\n     * const schema = i.schema({\n     *  rooms: {\n     *    // ...\n     *  }\n     * })\n     *\n     * @see https://instantdb.com/docs/presence-and-topics#typesafety\n     */\n    withRoomSchema() {\n        return new InstantSchemaDef(this.entities, this.links, {});\n    }\n}\n/**\n * @deprecated\n * `i.graph` is deprecated. Use `i.schema` instead.\n *\n * @see https://instantdb.com/docs/modeling-data\n */\nclass InstantGraph {\n    constructor(entities, links) {\n        this.entities = entities;\n        this.links = links;\n    }\n    withRoomSchema() {\n        return new InstantGraph(this.entities, this.links);\n    }\n}\n//# sourceMappingURL=schemaTypes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL3NjaGVtYVR5cGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQU87QUFDUCxnREFBZ0QsK0JBQStCO0FBQy9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0RkFBNEYsa0JBQWtCLGNBQWM7QUFDNUg7QUFDQTtBQUNBLDRGQUE0RixrQkFBa0IsZUFBZTtBQUM3SDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBaUU7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXERFTExcXERvY3VtZW50c1xcZW1haWwtY2hhdC1pbnRlcmZhY2VcXG5vZGVfbW9kdWxlc1xcQGluc3RhbnRkYlxcY29yZVxcZGlzdFxcbW9kdWxlXFxzY2hlbWFUeXBlcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgRGF0YUF0dHJEZWYge1xuICAgIGNvbnN0cnVjdG9yKHZhbHVlVHlwZSwgcmVxdWlyZWQsIGNvbmZpZyA9IHsgaW5kZXhlZDogZmFsc2UsIHVuaXF1ZTogZmFsc2UgfSkge1xuICAgICAgICB0aGlzLnZhbHVlVHlwZSA9IHZhbHVlVHlwZTtcbiAgICAgICAgdGhpcy5yZXF1aXJlZCA9IHJlcXVpcmVkO1xuICAgICAgICB0aGlzLmNvbmZpZyA9IGNvbmZpZztcbiAgICB9XG4gICAgb3B0aW9uYWwoKSB7XG4gICAgICAgIHJldHVybiBuZXcgRGF0YUF0dHJEZWYodGhpcy52YWx1ZVR5cGUsIGZhbHNlKTtcbiAgICB9XG4gICAgdW5pcXVlKCkge1xuICAgICAgICByZXR1cm4gbmV3IERhdGFBdHRyRGVmKHRoaXMudmFsdWVUeXBlLCB0aGlzLnJlcXVpcmVkLCBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHRoaXMuY29uZmlnKSwgeyB1bmlxdWU6IHRydWUgfSkpO1xuICAgIH1cbiAgICBpbmRleGVkKCkge1xuICAgICAgICByZXR1cm4gbmV3IERhdGFBdHRyRGVmKHRoaXMudmFsdWVUeXBlLCB0aGlzLnJlcXVpcmVkLCBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIHRoaXMuY29uZmlnKSwgeyBpbmRleGVkOiB0cnVlIH0pKTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgTGlua0F0dHJEZWYge1xuICAgIGNvbnN0cnVjdG9yKGNhcmRpbmFsaXR5LCBlbnRpdHlOYW1lKSB7XG4gICAgICAgIHRoaXMuY2FyZGluYWxpdHkgPSBjYXJkaW5hbGl0eTtcbiAgICAgICAgdGhpcy5lbnRpdHlOYW1lID0gZW50aXR5TmFtZTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgRW50aXR5RGVmIHtcbiAgICBjb25zdHJ1Y3RvcihhdHRycywgbGlua3MpIHtcbiAgICAgICAgdGhpcy5hdHRycyA9IGF0dHJzO1xuICAgICAgICB0aGlzLmxpbmtzID0gbGlua3M7XG4gICAgfVxuICAgIGFzVHlwZSgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBFbnRpdHlEZWYodGhpcy5hdHRycywgdGhpcy5saW5rcyk7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIEluc3RhbnRTY2hlbWFEZWYge1xuICAgIGNvbnN0cnVjdG9yKGVudGl0aWVzLCBsaW5rcywgcm9vbXMpIHtcbiAgICAgICAgdGhpcy5lbnRpdGllcyA9IGVudGl0aWVzO1xuICAgICAgICB0aGlzLmxpbmtzID0gbGlua3M7XG4gICAgICAgIHRoaXMucm9vbXMgPSByb29tcztcbiAgICB9XG4gICAgLyoqXG4gICAgICogQGRlcHJlY2F0ZWRcbiAgICAgKiBgd2l0aFJvb21TY2hlbWFgIGlzIGRlcHJlY2F0ZWQuIERlZmluZSB5b3VyIHNjaGVtYSBpbiBgcm9vbXNgIGRpcmVjdGx5OlxuICAgICAqXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiAvLyBCZWZvcmU6XG4gICAgICogY29uc3Qgc2NoZW1hID0gaS5zY2hlbWEoe1xuICAgICAqICAgLy8gLi4uXG4gICAgICogfSkud2l0aFJvb21TY2hlbWE8Um9vbVNjaGVtYT4oKVxuICAgICAqXG4gICAgICogLy8gQWZ0ZXJcbiAgICAgKiBjb25zdCBzY2hlbWEgPSBpLnNjaGVtYSh7XG4gICAgICogIHJvb21zOiB7XG4gICAgICogICAgLy8gLi4uXG4gICAgICogIH1cbiAgICAgKiB9KVxuICAgICAqXG4gICAgICogQHNlZSBodHRwczovL2luc3RhbnRkYi5jb20vZG9jcy9wcmVzZW5jZS1hbmQtdG9waWNzI3R5cGVzYWZldHlcbiAgICAgKi9cbiAgICB3aXRoUm9vbVNjaGVtYSgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBJbnN0YW50U2NoZW1hRGVmKHRoaXMuZW50aXRpZXMsIHRoaXMubGlua3MsIHt9KTtcbiAgICB9XG59XG4vKipcbiAqIEBkZXByZWNhdGVkXG4gKiBgaS5ncmFwaGAgaXMgZGVwcmVjYXRlZC4gVXNlIGBpLnNjaGVtYWAgaW5zdGVhZC5cbiAqXG4gKiBAc2VlIGh0dHBzOi8vaW5zdGFudGRiLmNvbS9kb2NzL21vZGVsaW5nLWRhdGFcbiAqL1xuZXhwb3J0IGNsYXNzIEluc3RhbnRHcmFwaCB7XG4gICAgY29uc3RydWN0b3IoZW50aXRpZXMsIGxpbmtzKSB7XG4gICAgICAgIHRoaXMuZW50aXRpZXMgPSBlbnRpdGllcztcbiAgICAgICAgdGhpcy5saW5rcyA9IGxpbmtzO1xuICAgIH1cbiAgICB3aXRoUm9vbVNjaGVtYSgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBJbnN0YW50R3JhcGgodGhpcy5lbnRpdGllcywgdGhpcy5saW5rcyk7XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2NoZW1hVHlwZXMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/schemaTypes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/store.js":
/*!***********************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/store.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   allMapValues: () => (/* binding */ allMapValues),\n/* harmony export */   createStore: () => (/* binding */ createStore),\n/* harmony export */   fromJSON: () => (/* binding */ fromJSON),\n/* harmony export */   getAsObject: () => (/* binding */ getAsObject),\n/* harmony export */   getAttrByFwdIdentName: () => (/* binding */ getAttrByFwdIdentName),\n/* harmony export */   getAttrByReverseIdentName: () => (/* binding */ getAttrByReverseIdentName),\n/* harmony export */   getPrimaryKeyAttr: () => (/* binding */ getPrimaryKeyAttr),\n/* harmony export */   getTriples: () => (/* binding */ getTriples),\n/* harmony export */   toJSON: () => (/* binding */ toJSON),\n/* harmony export */   transact: () => (/* binding */ transact)\n/* harmony export */ });\n/* harmony import */ var mutative__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mutative */ \"(ssr)/./node_modules/mutative/dist/mutative.esm.mjs\");\n/* harmony import */ var _utils_object__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/object */ \"(ssr)/./node_modules/@instantdb/core/dist/module/utils/object.js\");\n\n\nfunction hasEA(attr) {\n    return attr[\"cardinality\"] === \"one\";\n}\nfunction isRef(attr) {\n    return attr[\"value-type\"] === \"ref\";\n}\nfunction isBlob(attr) {\n    return attr[\"value-type\"] === \"blob\";\n}\nfunction getAttr(attrs, attrId) {\n    return attrs[attrId];\n}\nfunction getInMap(obj, path) {\n    return path.reduce((acc, key) => acc && acc.get(key), obj);\n}\nfunction deleteInMap(m, path) {\n    if (path.length === 0)\n        throw new Error(\"path must have at least one element\");\n    if (path.length === 1) {\n        m.delete(path[0]);\n        return;\n    }\n    const [head, ...tail] = path;\n    if (!m.has(head))\n        return;\n    deleteInMap(m.get(head), tail);\n}\nfunction setInMap(m, path, value) {\n    if (path.length === 0)\n        throw new Error(\"path must have at least one element\");\n    if (path.length === 1) {\n        m.set(path[0], value);\n        return;\n    }\n    const [head, ...tail] = path;\n    let nextM = m.get(head);\n    if (!nextM) {\n        nextM = new Map();\n        m.set(head, nextM);\n    }\n    setInMap(nextM, tail, value);\n}\nfunction createTripleIndexes(attrs, triples) {\n    const eav = new Map();\n    const aev = new Map();\n    const vae = new Map();\n    for (const triple of triples) {\n        const [eid, aid, v, t] = triple;\n        const attr = getAttr(attrs, aid);\n        if (!attr) {\n            console.warn(\"no such attr\", eid, attrs);\n            continue;\n        }\n        if (isRef(attr)) {\n            setInMap(vae, [v, aid, eid], triple);\n        }\n        setInMap(eav, [eid, aid, v], triple);\n        setInMap(aev, [aid, eid, v], triple);\n    }\n    return { eav, aev, vae };\n}\nfunction createAttrIndexes(attrs) {\n    const blobAttrs = new Map();\n    const primaryKeys = new Map();\n    const forwardIdents = new Map();\n    const revIdents = new Map();\n    for (const attr of Object.values(attrs)) {\n        const fwdIdent = attr[\"forward-identity\"];\n        const [_, fwdEtype, fwdLabel] = fwdIdent;\n        const revIdent = attr[\"reverse-identity\"];\n        setInMap(forwardIdents, [fwdEtype, fwdLabel], attr);\n        if (isBlob(attr)) {\n            setInMap(blobAttrs, [fwdEtype, fwdLabel], attr);\n        }\n        if (attr[\"primary?\"]) {\n            setInMap(primaryKeys, [fwdEtype], attr);\n        }\n        if (revIdent) {\n            const [_, revEtype, revLabel] = revIdent;\n            setInMap(revIdents, [revEtype, revLabel], attr);\n        }\n    }\n    return { blobAttrs, primaryKeys, forwardIdents, revIdents };\n}\nfunction toJSON(store) {\n    return {\n        __type: store.__type,\n        attrs: store.attrs,\n        triples: allMapValues(store.eav, 3),\n        cardinalityInference: store.cardinalityInference,\n        linkIndex: store.linkIndex,\n    };\n}\nfunction fromJSON(storeJSON) {\n    return createStore(storeJSON.attrs, storeJSON.triples, storeJSON.cardinalityInference, storeJSON.linkIndex);\n}\nfunction resetAttrIndexes(store) {\n    store.attrIndexes = createAttrIndexes(store.attrs);\n}\nfunction createStore(attrs, triples, enableCardinalityInference, linkIndex) {\n    const store = createTripleIndexes(attrs, triples);\n    store.attrs = attrs;\n    store.attrIndexes = createAttrIndexes(attrs);\n    store.cardinalityInference = enableCardinalityInference;\n    store.linkIndex = linkIndex;\n    store.__type = \"store\";\n    return store;\n}\n// We may have local triples with lookup refs in them,\n// we need to convert those lookup refs to eids to insert them\n// into the store. If we can't find the lookup ref locally,\n// then we drop the triple and have to wait for the server response\n// to see the optimistic updates.\nfunction resolveLookupRefs(store, triple) {\n    var _a, _b;\n    let eid;\n    // Check if `e` is a lookup ref\n    if (Array.isArray(triple[0])) {\n        const [a, v] = triple[0];\n        const eMaps = store.aev.get(a);\n        if (!eMaps) {\n            // We don't have the attr, so don't try to add the\n            // triple to the store\n            return null;\n        }\n        // This would be a lot more efficient with a ave index\n        const triples = allMapValues(eMaps, 2);\n        eid = (_a = triples.find((x) => x[2] === v)) === null || _a === void 0 ? void 0 : _a[0];\n    }\n    else {\n        eid = triple[0];\n    }\n    if (!eid) {\n        // We don't know the eid that the ref refers to, so\n        // we can't add the triple to the store.\n        return null;\n    }\n    // Check if v is a lookup ref\n    const lookupV = triple[2];\n    if (Array.isArray(lookupV) &&\n        lookupV.length === 2 &&\n        store.aev.get(lookupV[0])) {\n        const [a, v] = lookupV;\n        const eMaps = store.aev.get(a);\n        if (!eMaps) {\n            // We don't have the attr, so don't try to add the\n            // triple to the store\n            return null;\n        }\n        const triples = allMapValues(eMaps, 2);\n        const value = (_b = triples.find((x) => x[2] === v)) === null || _b === void 0 ? void 0 : _b[0];\n        if (!value) {\n            return null;\n        }\n        const [_e, aid, _v, ...rest] = triple;\n        return [eid, aid, value, ...rest];\n    }\n    else {\n        const [_, ...rest] = triple;\n        return [eid, ...rest];\n    }\n}\nfunction retractTriple(store, rawTriple) {\n    const triple = resolveLookupRefs(store, rawTriple);\n    if (!triple) {\n        return;\n    }\n    const [eid, aid, v] = triple;\n    const attr = getAttr(store.attrs, aid);\n    if (!attr) {\n        return;\n    }\n    deleteInMap(store.eav, [eid, aid, v]);\n    deleteInMap(store.aev, [aid, eid, v]);\n    if (isRef(attr)) {\n        deleteInMap(store.vae, [v, aid, eid]);\n    }\n}\nlet _seed = 0;\nfunction getCreatedAt(store, attr, triple) {\n    const [eid, aid, v] = triple;\n    let createdAt;\n    const t = getInMap(store.ea, [eid, aid, v]);\n    if (t) {\n        createdAt = t[3];\n    }\n    /**\n     * (XXX)\n     * Two hacks here, for generating a `createdAt`\n     *\n     * 1. We multiply Date.now() by 10, to make sure that\n     *  `createdAt` is always greater than anything the server\n     *   could return\n     *\n     *   We do this because right now we know we _only_ insert\n     *   triples as optimistic updates.\n     *\n     * 2. We increment by `_seed`, to make sure there are no\n     *    two triples with the same `createdAt`. This is\n     *    done to make tests more predictable.\n     *\n     * We may need to rethink this. Because we * 10, we can't\n     * use this value as an _actual_ `createdAt` timestamp.\n     * Eventually we may want too though; For example, we could\n     * use `createdAt` for each triple, to infer a `createdAt` and\n     * `updatedAt` value for each object.\n     */\n    return createdAt || Date.now() * 10 + _seed++;\n}\nfunction addTriple(store, rawTriple) {\n    var _a;\n    const triple = resolveLookupRefs(store, rawTriple);\n    if (!triple) {\n        return;\n    }\n    const [eid, aid, v] = triple;\n    const attr = getAttr(store.attrs, aid);\n    if (!attr) {\n        // (XXX): Due to the way we're handling attrs, it's\n        // possible to enter a state where we receive a triple without an attr.\n        // See: https://github.com/jsventures/instant-local/pull/132 for details.\n        // For now, if we receive a command without an attr, we no-op.\n        return;\n    }\n    const existingTriple = getInMap(store.eav, [eid, aid, v]);\n    // Reuse the created_at for a triple if it's already in the store.\n    // Prevents updates from temporarily pushing an entity to the top\n    // while waiting for the server response.\n    const t = (_a = existingTriple === null || existingTriple === void 0 ? void 0 : existingTriple[3]) !== null && _a !== void 0 ? _a : getCreatedAt(store, attr, triple);\n    const enhancedTriple = [eid, aid, v, t];\n    if (hasEA(attr)) {\n        setInMap(store.eav, [eid, aid], new Map([[v, enhancedTriple]]));\n        setInMap(store.aev, [aid, eid], new Map([[v, enhancedTriple]]));\n    }\n    else {\n        setInMap(store.eav, [eid, aid, v], enhancedTriple);\n        setInMap(store.aev, [aid, eid, v], enhancedTriple);\n    }\n    if (isRef(attr)) {\n        setInMap(store.vae, [v, aid, eid], enhancedTriple);\n    }\n}\nfunction mergeTriple(store, rawTriple) {\n    var _a;\n    const triple = resolveLookupRefs(store, rawTriple);\n    if (!triple) {\n        return;\n    }\n    const [eid, aid, update] = triple;\n    const attr = getAttr(store.attrs, aid);\n    if (!attr)\n        return;\n    if (!isBlob(attr))\n        throw new Error(\"merge operation is not supported for links\");\n    const eavValuesMap = getInMap(store.eav, [eid, aid]);\n    if (!eavValuesMap)\n        return;\n    const currentTriple = (_a = eavValuesMap.values().next()) === null || _a === void 0 ? void 0 : _a.value;\n    if (!currentTriple)\n        return;\n    const currentValue = currentTriple[2];\n    const updatedValue = (0,_utils_object__WEBPACK_IMPORTED_MODULE_1__.immutableDeepMerge)(currentValue, update);\n    const enhancedTriple = [\n        eid,\n        aid,\n        updatedValue,\n        getCreatedAt(store, attr, currentTriple),\n    ];\n    setInMap(store.eav, [eid, aid], new Map([[updatedValue, enhancedTriple]]));\n}\nfunction deleteEntity(store, args) {\n    var _a, _b;\n    const [lookup, etype] = args;\n    const triple = resolveLookupRefs(store, [lookup]);\n    if (!triple) {\n        return;\n    }\n    const [id] = triple;\n    // delete forward links and attributes + cardinality one links\n    const eMap = store.eav.get(id);\n    if (eMap) {\n        for (const a of eMap.keys()) {\n            const attr = store.attrs[a];\n            if (\n            // Fall back to deleting everything if we've rehydrated tx-steps from\n            // the store that didn't set `etype` in deleteEntity\n            !etype ||\n                // If we don't know about the attr, let's just get rid of it\n                !attr ||\n                // Make sure it matches the etype\n                ((_a = attr[\"forward-identity\"]) === null || _a === void 0 ? void 0 : _a[1]) === etype) {\n                deleteInMap(store.aev, [a, id]);\n                deleteInMap(store.eav, [id, a]);\n            }\n        }\n        // Clear out the eav index for `id` if we deleted all of the attributes\n        if (eMap.size === 0) {\n            deleteInMap(store.eav, [id]);\n        }\n    }\n    // delete reverse links\n    const vaeTriples = store.vae.get(id) && allMapValues(store.vae.get(id), 2);\n    if (vaeTriples) {\n        vaeTriples.forEach((triple) => {\n            var _a;\n            const [e, a, v] = triple;\n            const attr = store.attrs[a];\n            if (!etype || !attr || ((_a = attr[\"reverse-identity\"]) === null || _a === void 0 ? void 0 : _a[1]) === etype) {\n                deleteInMap(store.eav, [e, a, v]);\n                deleteInMap(store.aev, [a, e, v]);\n                deleteInMap(store.vae, [v, a, e]);\n            }\n        });\n    }\n    // Clear out vae index for `id` if we deleted all the reverse attributes\n    if (((_b = store.vae.get(id)) === null || _b === void 0 ? void 0 : _b.size) === 0) {\n        deleteInMap(store.vae, [id]);\n    }\n}\n// (XXX): Whenever we change/delete attrs,\n// We indiscriminately reset the index map.\n// There are lots of opportunities for optimization:\n// * We _only_ need to run this indexes change. We could detect that\n// * We could batch this reset at the end\n// * We could add an ave index for all triples, so removing the\n//   right triples is easy and fast.\nfunction resetIndexMap(store, newTriples) {\n    const newIndexMap = createTripleIndexes(store.attrs, newTriples);\n    Object.keys(newIndexMap).forEach((key) => {\n        store[key] = newIndexMap[key];\n    });\n}\nfunction addAttr(store, [attr]) {\n    store.attrs[attr.id] = attr;\n    resetAttrIndexes(store);\n}\nfunction getAllTriples(store) {\n    return allMapValues(store.eav, 3);\n}\nfunction deleteAttr(store, [id]) {\n    if (!store.attrs[id])\n        return;\n    const newTriples = getAllTriples(store).filter(([_, aid]) => aid !== id);\n    delete store.attrs[id];\n    resetAttrIndexes(store);\n    resetIndexMap(store, newTriples);\n}\nfunction updateAttr(store, [partialAttr]) {\n    const attr = store.attrs[partialAttr.id];\n    if (!attr)\n        return;\n    store.attrs[partialAttr.id] = Object.assign(Object.assign({}, attr), partialAttr);\n    resetAttrIndexes(store);\n    resetIndexMap(store, getAllTriples(store));\n}\nfunction applyTxStep(store, txStep) {\n    const [action, ...args] = txStep;\n    switch (action) {\n        case \"add-triple\":\n            addTriple(store, args);\n            break;\n        case \"deep-merge-triple\":\n            mergeTriple(store, args);\n            break;\n        case \"retract-triple\":\n            retractTriple(store, args);\n            break;\n        case \"delete-entity\":\n            deleteEntity(store, args);\n            break;\n        case \"add-attr\":\n            addAttr(store, args);\n            break;\n        case \"delete-attr\":\n            deleteAttr(store, args);\n            break;\n        case \"update-attr\":\n            updateAttr(store, args);\n            break;\n        default:\n            throw new Error(`unhandled transaction action: ${action}`);\n    }\n}\nfunction allMapValues(m, level, res = []) {\n    if (!m) {\n        return res;\n    }\n    if (level === 0) {\n        return res;\n    }\n    if (level === 1) {\n        for (const v of m.values()) {\n            res.push(v);\n        }\n        return res;\n    }\n    for (const v of m.values()) {\n        allMapValues(v, level - 1, res);\n    }\n    return res;\n}\nfunction triplesByValue(store, m, v) {\n    var _a, _b;\n    const res = [];\n    if (v === null || v === void 0 ? void 0 : v.hasOwnProperty(\"$not\")) {\n        for (const candidate of m.keys()) {\n            if (v.$not !== candidate) {\n                res.push(m.get(candidate));\n            }\n        }\n        return res;\n    }\n    if (v === null || v === void 0 ? void 0 : v.hasOwnProperty(\"$isNull\")) {\n        const { attrId, isNull, reverse } = v.$isNull;\n        if (reverse) {\n            for (const candidate of m.keys()) {\n                const vMap = store.vae.get(candidate);\n                const isValNull = !vMap || ((_a = vMap.get(attrId)) === null || _a === void 0 ? void 0 : _a.get(null)) || !vMap.get(attrId);\n                if (isNull ? isValNull : !isValNull) {\n                    res.push(m.get(candidate));\n                }\n            }\n        }\n        else {\n            const aMap = store.aev.get(attrId);\n            for (const candidate of m.keys()) {\n                const isValNull = !aMap || ((_b = aMap.get(candidate)) === null || _b === void 0 ? void 0 : _b.get(null)) || !aMap.get(candidate);\n                if (isNull ? isValNull : !isValNull) {\n                    res.push(m.get(candidate));\n                }\n            }\n        }\n        return res;\n    }\n    if (v === null || v === void 0 ? void 0 : v.$comparator) {\n        // TODO: A sorted index would be nice here\n        return allMapValues(m, 1).filter(v.$op);\n    }\n    const values = v.in || v.$in || [v];\n    for (const value of values) {\n        const triple = m.get(value);\n        if (triple) {\n            res.push(triple);\n        }\n    }\n    return res;\n}\n// A poor man's pattern matching\n// Returns either eav, ea, ev, av, v, or ''\nfunction whichIdx(e, a, v) {\n    let res = \"\";\n    if (e !== undefined) {\n        res += \"e\";\n    }\n    if (a !== undefined) {\n        res += \"a\";\n    }\n    if (v !== undefined) {\n        res += \"v\";\n    }\n    return res;\n}\nfunction getTriples(store, [e, a, v]) {\n    var _a, _b;\n    const idx = whichIdx(e, a, v);\n    switch (idx) {\n        case \"e\": {\n            const eMap = store.eav.get(e);\n            return allMapValues(eMap, 2);\n        }\n        case \"ea\": {\n            const aMap = (_a = store.eav.get(e)) === null || _a === void 0 ? void 0 : _a.get(a);\n            return allMapValues(aMap, 1);\n        }\n        case \"eav\": {\n            const aMap = (_b = store.eav.get(e)) === null || _b === void 0 ? void 0 : _b.get(a);\n            if (!aMap) {\n                return [];\n            }\n            return triplesByValue(store, aMap, v);\n        }\n        case \"ev\": {\n            const eMap = store.eav.get(e);\n            if (!eMap) {\n                return [];\n            }\n            const res = [];\n            for (const aMap of eMap.values()) {\n                res.push(...triplesByValue(store, aMap, v));\n            }\n            return res;\n        }\n        case \"a\": {\n            const aMap = store.aev.get(a);\n            return allMapValues(aMap, 2);\n        }\n        case \"av\": {\n            const aMap = store.aev.get(a);\n            if (!aMap) {\n                return [];\n            }\n            const res = [];\n            for (const eMap of aMap.values()) {\n                res.push(...triplesByValue(store, eMap, v));\n            }\n            return res;\n        }\n        case \"v\": {\n            const res = [];\n            for (const eMap of store.eav.values()) {\n                for (const aMap of eMap.values()) {\n                    res.push(...triplesByValue(store, aMap, v));\n                }\n            }\n        }\n        default: {\n            return allMapValues(store.eav, 3);\n        }\n    }\n}\nfunction getAsObject(store, etype, e) {\n    var _a;\n    const blobAttrs = store.attrIndexes.blobAttrs.get(etype);\n    const obj = {};\n    for (const [label, attr] of blobAttrs.entries()) {\n        const aMap = (_a = store.eav.get(e)) === null || _a === void 0 ? void 0 : _a.get(attr.id);\n        const triples = allMapValues(aMap, 1);\n        for (const triple of triples) {\n            obj[label] = triple[2];\n        }\n    }\n    return obj;\n}\nfunction getAttrByFwdIdentName(store, inputEtype, inputLabel) {\n    var _a;\n    return (_a = store.attrIndexes.forwardIdents.get(inputEtype)) === null || _a === void 0 ? void 0 : _a.get(inputLabel);\n}\nfunction getAttrByReverseIdentName(store, inputEtype, inputLabel) {\n    var _a;\n    return (_a = store.attrIndexes.revIdents.get(inputEtype)) === null || _a === void 0 ? void 0 : _a.get(inputLabel);\n}\nfunction getPrimaryKeyAttr(store, etype) {\n    var _a;\n    const fromPrimary = store.attrIndexes.primaryKeys.get(etype);\n    if (fromPrimary) {\n        return fromPrimary;\n    }\n    return (_a = store.attrIndexes.forwardIdents.get(etype)) === null || _a === void 0 ? void 0 : _a.get(\"id\");\n}\nfunction transact(store, txSteps) {\n    return (0,mutative__WEBPACK_IMPORTED_MODULE_0__.create)(store, (draft) => {\n        txSteps.forEach((txStep) => {\n            applyTxStep(draft, txStep);\n        });\n    });\n}\n//# sourceMappingURL=store.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/store.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/utils/Deferred.js":
/*!********************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/utils/Deferred.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Deferred: () => (/* binding */ Deferred)\n/* harmony export */ });\nclass Deferred {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n    }\n    resolve(value) {\n        this._resolve(value);\n    }\n    reject(reason) {\n        this._reject(reason);\n    }\n}\n//# sourceMappingURL=Deferred.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL3V0aWxzL0RlZmVycmVkLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxERUxMXFxEb2N1bWVudHNcXGVtYWlsLWNoYXQtaW50ZXJmYWNlXFxub2RlX21vZHVsZXNcXEBpbnN0YW50ZGJcXGNvcmVcXGRpc3RcXG1vZHVsZVxcdXRpbHNcXERlZmVycmVkLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBEZWZlcnJlZCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMucHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX3Jlc29sdmUgPSByZXNvbHZlO1xuICAgICAgICAgICAgdGhpcy5fcmVqZWN0ID0gcmVqZWN0O1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmVzb2x2ZSh2YWx1ZSkge1xuICAgICAgICB0aGlzLl9yZXNvbHZlKHZhbHVlKTtcbiAgICB9XG4gICAgcmVqZWN0KHJlYXNvbikge1xuICAgICAgICB0aGlzLl9yZWplY3QocmVhc29uKTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1EZWZlcnJlZC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/utils/Deferred.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/utils/PersistedObject.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/utils/PersistedObject.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PersistedObject: () => (/* binding */ PersistedObject)\n/* harmony export */ });\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// PersistedObjects save data outside of memory.\n//\n// When we load a persisted object, it's possible we call `set`\n// before we finish loading. To address we handle set in two ways:\n//\n// 1. Before load\n// We simply update currentValue in memory\n//\n// 2. After load\n// We update currentValue in memory and in storage\n//\n// Each PersistedObject provides it's own `onMerge`\n// function to handle the merge of data from storage and memory\n// on load\nclass PersistedObject {\n    constructor(persister, key, defaultValue, onMerge, toJSON = (x) => {\n        return JSON.stringify(x);\n    }, fromJSON = (x) => {\n        return JSON.parse(x);\n    }, saveThrottleMs = 100) {\n        this._subs = [];\n        this._persister = persister;\n        this._key = key;\n        this._onMerge = onMerge;\n        this._loadedCbs = [];\n        this._isLoading = true;\n        this.currentValue = defaultValue;\n        this.toJSON = toJSON;\n        this.fromJSON = fromJSON;\n        this._saveThrottleMs = saveThrottleMs;\n        this._pendingSaveCbs = [];\n        this._version = 0;\n        this._load();\n    }\n    _load() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const fromStorage = this.fromJSON(yield this._persister.getItem(this._key));\n            this._isLoading = false;\n            this._onMerge(fromStorage, this.currentValue);\n            for (const cb of this._loadedCbs) {\n                cb();\n            }\n        });\n    }\n    waitForLoaded() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._isLoading) {\n                return;\n            }\n            const loadedPromise = new Promise((resolve) => {\n                this._loadedCbs.push(resolve);\n            });\n            yield loadedPromise;\n        });\n    }\n    isLoading() {\n        return this._isLoading;\n    }\n    version() {\n        return this._version;\n    }\n    waitForSync() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._nextSave) {\n                return;\n            }\n            const syncedPromise = new Promise((resolve) => {\n                this._pendingSaveCbs.push(resolve);\n            });\n            yield syncedPromise;\n        });\n    }\n    _writeToStorage() {\n        this._persister.setItem(this._key, this.toJSON(this.currentValue));\n        for (const cb of this._pendingSaveCbs) {\n            cb();\n        }\n        this._pendingSaveCbs.length = 0;\n    }\n    flush() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._nextSave) {\n                return;\n            }\n            clearTimeout(this._nextSave);\n            this._writeToStorage();\n        });\n    }\n    _enqueuePersist(cb) {\n        if (this._nextSave) {\n            if (cb) {\n                this._pendingSaveCbs.push(cb);\n            }\n            return;\n        }\n        this._nextSave = setTimeout(() => {\n            this._nextSave = null;\n            this._writeToStorage();\n        }, this._saveThrottleMs);\n    }\n    set(f, cb) {\n        this._version++;\n        this.currentValue = f(this.currentValue);\n        if (this._isLoading) {\n            this._loadedCbs.push(() => this._enqueuePersist(cb));\n        }\n        else {\n            this._enqueuePersist(cb);\n        }\n        for (const sub of this._subs) {\n            sub(this.currentValue);\n        }\n    }\n    subscribe(cb) {\n        this._subs.push(cb);\n        cb(this.currentValue);\n        return () => {\n            this._subs = this._subs.filter((x) => x !== cb);\n        };\n    }\n}\n//# sourceMappingURL=PersistedObject.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL3V0aWxzL1BlcnNpc3RlZE9iamVjdC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUJBQWlCLFNBQUksSUFBSSxTQUFJO0FBQzdCLDRCQUE0QiwrREFBK0QsaUJBQWlCO0FBQzVHO0FBQ0Esb0NBQW9DLE1BQU0sK0JBQStCLFlBQVk7QUFDckYsbUNBQW1DLE1BQU0sbUNBQW1DLFlBQVk7QUFDeEYsZ0NBQWdDO0FBQ2hDO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxERUxMXFxEb2N1bWVudHNcXGVtYWlsLWNoYXQtaW50ZXJmYWNlXFxub2RlX21vZHVsZXNcXEBpbnN0YW50ZGJcXGNvcmVcXGRpc3RcXG1vZHVsZVxcdXRpbHNcXFBlcnNpc3RlZE9iamVjdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19hd2FpdGVyID0gKHRoaXMgJiYgdGhpcy5fX2F3YWl0ZXIpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBfYXJndW1lbnRzLCBQLCBnZW5lcmF0b3IpIHtcbiAgICBmdW5jdGlvbiBhZG9wdCh2YWx1ZSkgeyByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBQID8gdmFsdWUgOiBuZXcgUChmdW5jdGlvbiAocmVzb2x2ZSkgeyByZXNvbHZlKHZhbHVlKTsgfSk7IH1cbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICAgICAgZnVuY3Rpb24gZnVsZmlsbGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yLm5leHQodmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiByZWplY3RlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvcltcInRocm93XCJdKHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cbiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpO1xuICAgIH0pO1xufTtcbi8vIFBlcnNpc3RlZE9iamVjdHMgc2F2ZSBkYXRhIG91dHNpZGUgb2YgbWVtb3J5LlxuLy9cbi8vIFdoZW4gd2UgbG9hZCBhIHBlcnNpc3RlZCBvYmplY3QsIGl0J3MgcG9zc2libGUgd2UgY2FsbCBgc2V0YFxuLy8gYmVmb3JlIHdlIGZpbmlzaCBsb2FkaW5nLiBUbyBhZGRyZXNzIHdlIGhhbmRsZSBzZXQgaW4gdHdvIHdheXM6XG4vL1xuLy8gMS4gQmVmb3JlIGxvYWRcbi8vIFdlIHNpbXBseSB1cGRhdGUgY3VycmVudFZhbHVlIGluIG1lbW9yeVxuLy9cbi8vIDIuIEFmdGVyIGxvYWRcbi8vIFdlIHVwZGF0ZSBjdXJyZW50VmFsdWUgaW4gbWVtb3J5IGFuZCBpbiBzdG9yYWdlXG4vL1xuLy8gRWFjaCBQZXJzaXN0ZWRPYmplY3QgcHJvdmlkZXMgaXQncyBvd24gYG9uTWVyZ2VgXG4vLyBmdW5jdGlvbiB0byBoYW5kbGUgdGhlIG1lcmdlIG9mIGRhdGEgZnJvbSBzdG9yYWdlIGFuZCBtZW1vcnlcbi8vIG9uIGxvYWRcbmV4cG9ydCBjbGFzcyBQZXJzaXN0ZWRPYmplY3Qge1xuICAgIGNvbnN0cnVjdG9yKHBlcnNpc3Rlciwga2V5LCBkZWZhdWx0VmFsdWUsIG9uTWVyZ2UsIHRvSlNPTiA9ICh4KSA9PiB7XG4gICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeSh4KTtcbiAgICB9LCBmcm9tSlNPTiA9ICh4KSA9PiB7XG4gICAgICAgIHJldHVybiBKU09OLnBhcnNlKHgpO1xuICAgIH0sIHNhdmVUaHJvdHRsZU1zID0gMTAwKSB7XG4gICAgICAgIHRoaXMuX3N1YnMgPSBbXTtcbiAgICAgICAgdGhpcy5fcGVyc2lzdGVyID0gcGVyc2lzdGVyO1xuICAgICAgICB0aGlzLl9rZXkgPSBrZXk7XG4gICAgICAgIHRoaXMuX29uTWVyZ2UgPSBvbk1lcmdlO1xuICAgICAgICB0aGlzLl9sb2FkZWRDYnMgPSBbXTtcbiAgICAgICAgdGhpcy5faXNMb2FkaW5nID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5jdXJyZW50VmFsdWUgPSBkZWZhdWx0VmFsdWU7XG4gICAgICAgIHRoaXMudG9KU09OID0gdG9KU09OO1xuICAgICAgICB0aGlzLmZyb21KU09OID0gZnJvbUpTT047XG4gICAgICAgIHRoaXMuX3NhdmVUaHJvdHRsZU1zID0gc2F2ZVRocm90dGxlTXM7XG4gICAgICAgIHRoaXMuX3BlbmRpbmdTYXZlQ2JzID0gW107XG4gICAgICAgIHRoaXMuX3ZlcnNpb24gPSAwO1xuICAgICAgICB0aGlzLl9sb2FkKCk7XG4gICAgfVxuICAgIF9sb2FkKCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgY29uc3QgZnJvbVN0b3JhZ2UgPSB0aGlzLmZyb21KU09OKHlpZWxkIHRoaXMuX3BlcnNpc3Rlci5nZXRJdGVtKHRoaXMuX2tleSkpO1xuICAgICAgICAgICAgdGhpcy5faXNMb2FkaW5nID0gZmFsc2U7XG4gICAgICAgICAgICB0aGlzLl9vbk1lcmdlKGZyb21TdG9yYWdlLCB0aGlzLmN1cnJlbnRWYWx1ZSk7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGNiIG9mIHRoaXMuX2xvYWRlZENicykge1xuICAgICAgICAgICAgICAgIGNiKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICB3YWl0Rm9yTG9hZGVkKCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgaWYgKCF0aGlzLl9pc0xvYWRpbmcpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBsb2FkZWRQcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLl9sb2FkZWRDYnMucHVzaChyZXNvbHZlKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgeWllbGQgbG9hZGVkUHJvbWlzZTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGlzTG9hZGluZygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2lzTG9hZGluZztcbiAgICB9XG4gICAgdmVyc2lvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3ZlcnNpb247XG4gICAgfVxuICAgIHdhaXRGb3JTeW5jKCkge1xuICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgaWYgKCF0aGlzLl9uZXh0U2F2ZSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHN5bmNlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuX3BlbmRpbmdTYXZlQ2JzLnB1c2gocmVzb2x2ZSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHlpZWxkIHN5bmNlZFByb21pc2U7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBfd3JpdGVUb1N0b3JhZ2UoKSB7XG4gICAgICAgIHRoaXMuX3BlcnNpc3Rlci5zZXRJdGVtKHRoaXMuX2tleSwgdGhpcy50b0pTT04odGhpcy5jdXJyZW50VmFsdWUpKTtcbiAgICAgICAgZm9yIChjb25zdCBjYiBvZiB0aGlzLl9wZW5kaW5nU2F2ZUNicykge1xuICAgICAgICAgICAgY2IoKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9wZW5kaW5nU2F2ZUNicy5sZW5ndGggPSAwO1xuICAgIH1cbiAgICBmbHVzaCgpIHtcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGlmICghdGhpcy5fbmV4dFNhdmUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjbGVhclRpbWVvdXQodGhpcy5fbmV4dFNhdmUpO1xuICAgICAgICAgICAgdGhpcy5fd3JpdGVUb1N0b3JhZ2UoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIF9lbnF1ZXVlUGVyc2lzdChjYikge1xuICAgICAgICBpZiAodGhpcy5fbmV4dFNhdmUpIHtcbiAgICAgICAgICAgIGlmIChjYikge1xuICAgICAgICAgICAgICAgIHRoaXMuX3BlbmRpbmdTYXZlQ2JzLnB1c2goY2IpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX25leHRTYXZlID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLl9uZXh0U2F2ZSA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLl93cml0ZVRvU3RvcmFnZSgpO1xuICAgICAgICB9LCB0aGlzLl9zYXZlVGhyb3R0bGVNcyk7XG4gICAgfVxuICAgIHNldChmLCBjYikge1xuICAgICAgICB0aGlzLl92ZXJzaW9uKys7XG4gICAgICAgIHRoaXMuY3VycmVudFZhbHVlID0gZih0aGlzLmN1cnJlbnRWYWx1ZSk7XG4gICAgICAgIGlmICh0aGlzLl9pc0xvYWRpbmcpIHtcbiAgICAgICAgICAgIHRoaXMuX2xvYWRlZENicy5wdXNoKCgpID0+IHRoaXMuX2VucXVldWVQZXJzaXN0KGNiKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLl9lbnF1ZXVlUGVyc2lzdChjYik7XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChjb25zdCBzdWIgb2YgdGhpcy5fc3Vicykge1xuICAgICAgICAgICAgc3ViKHRoaXMuY3VycmVudFZhbHVlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBzdWJzY3JpYmUoY2IpIHtcbiAgICAgICAgdGhpcy5fc3Vicy5wdXNoKGNiKTtcbiAgICAgICAgY2IodGhpcy5jdXJyZW50VmFsdWUpO1xuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5fc3VicyA9IHRoaXMuX3N1YnMuZmlsdGVyKCh4KSA9PiB4ICE9PSBjYik7XG4gICAgICAgIH07XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UGVyc2lzdGVkT2JqZWN0LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/utils/PersistedObject.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/utils/fetch.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/utils/fetch.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   jsonFetch: () => (/* binding */ jsonFetch)\n/* harmony export */ });\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nfunction jsonFetch(input, init) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const res = yield fetch(input, init);\n        const json = yield res.json();\n        return res.status === 200\n            ? Promise.resolve(json)\n            : Promise.reject({ status: res.status, body: json });\n    });\n}\n//# sourceMappingURL=fetch.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL3V0aWxzL2ZldGNoLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpQkFBaUIsU0FBSSxJQUFJLFNBQUk7QUFDN0IsNEJBQTRCLCtEQUErRCxpQkFBaUI7QUFDNUc7QUFDQSxvQ0FBb0MsTUFBTSwrQkFBK0IsWUFBWTtBQUNyRixtQ0FBbUMsTUFBTSxtQ0FBbUMsWUFBWTtBQUN4RixnQ0FBZ0M7QUFDaEM7QUFDQSxLQUFLO0FBQ0w7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsZ0NBQWdDO0FBQy9ELEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXERFTExcXERvY3VtZW50c1xcZW1haWwtY2hhdC1pbnRlcmZhY2VcXG5vZGVfbW9kdWxlc1xcQGluc3RhbnRkYlxcY29yZVxcZGlzdFxcbW9kdWxlXFx1dGlsc1xcZmV0Y2guanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5leHBvcnQgZnVuY3Rpb24ganNvbkZldGNoKGlucHV0LCBpbml0KSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgY29uc3QgcmVzID0geWllbGQgZmV0Y2goaW5wdXQsIGluaXQpO1xuICAgICAgICBjb25zdCBqc29uID0geWllbGQgcmVzLmpzb24oKTtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMgPT09IDIwMFxuICAgICAgICAgICAgPyBQcm9taXNlLnJlc29sdmUoanNvbilcbiAgICAgICAgICAgIDogUHJvbWlzZS5yZWplY3QoeyBzdGF0dXM6IHJlcy5zdGF0dXMsIGJvZHk6IGpzb24gfSk7XG4gICAgfSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mZXRjaC5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/utils/fetch.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/utils/linkIndex.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/utils/linkIndex.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createLinkIndex: () => (/* binding */ createLinkIndex)\n/* harmony export */ });\nfunction createLinkIndex(schema) {\n    return Object.values(schema.links).reduce((linkIndex, link) => {\n        var _a, _b;\n        var _c, _d;\n        (_a = linkIndex[_c = link.forward.on]) !== null && _a !== void 0 ? _a : (linkIndex[_c] = {});\n        linkIndex[link.forward.on][link.forward.label] = {\n            isForward: true,\n            isSingular: link.forward.has === \"one\",\n            link,\n        };\n        (_b = linkIndex[_d = link.reverse.on]) !== null && _b !== void 0 ? _b : (linkIndex[_d] = {});\n        linkIndex[link.reverse.on][link.reverse.label] = {\n            isForward: false,\n            isSingular: link.reverse.has === \"one\",\n            link,\n        };\n        return linkIndex;\n    }, {});\n}\n//# sourceMappingURL=linkIndex.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL3V0aWxzL2xpbmtJbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxtR0FBbUc7QUFDbkc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1HQUFtRztBQUNuRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLElBQUk7QUFDVDtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXERFTExcXERvY3VtZW50c1xcZW1haWwtY2hhdC1pbnRlcmZhY2VcXG5vZGVfbW9kdWxlc1xcQGluc3RhbnRkYlxcY29yZVxcZGlzdFxcbW9kdWxlXFx1dGlsc1xcbGlua0luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBjcmVhdGVMaW5rSW5kZXgoc2NoZW1hKSB7XG4gICAgcmV0dXJuIE9iamVjdC52YWx1ZXMoc2NoZW1hLmxpbmtzKS5yZWR1Y2UoKGxpbmtJbmRleCwgbGluaykgPT4ge1xuICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICB2YXIgX2MsIF9kO1xuICAgICAgICAoX2EgPSBsaW5rSW5kZXhbX2MgPSBsaW5rLmZvcndhcmQub25dKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiAobGlua0luZGV4W19jXSA9IHt9KTtcbiAgICAgICAgbGlua0luZGV4W2xpbmsuZm9yd2FyZC5vbl1bbGluay5mb3J3YXJkLmxhYmVsXSA9IHtcbiAgICAgICAgICAgIGlzRm9yd2FyZDogdHJ1ZSxcbiAgICAgICAgICAgIGlzU2luZ3VsYXI6IGxpbmsuZm9yd2FyZC5oYXMgPT09IFwib25lXCIsXG4gICAgICAgICAgICBsaW5rLFxuICAgICAgICB9O1xuICAgICAgICAoX2IgPSBsaW5rSW5kZXhbX2QgPSBsaW5rLnJldmVyc2Uub25dKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiAobGlua0luZGV4W19kXSA9IHt9KTtcbiAgICAgICAgbGlua0luZGV4W2xpbmsucmV2ZXJzZS5vbl1bbGluay5yZXZlcnNlLmxhYmVsXSA9IHtcbiAgICAgICAgICAgIGlzRm9yd2FyZDogZmFsc2UsXG4gICAgICAgICAgICBpc1Npbmd1bGFyOiBsaW5rLnJldmVyc2UuaGFzID09PSBcIm9uZVwiLFxuICAgICAgICAgICAgbGluayxcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIGxpbmtJbmRleDtcbiAgICB9LCB7fSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1saW5rSW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/utils/linkIndex.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/utils/log.js":
/*!***************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/utils/log.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nlet isEnabled = false;\nif (typeof window !== \"undefined\" &&\n    typeof window.localStorage !== \"undefined\") {\n    isEnabled =\n        !!window.localStorage.getItem(\"devBackend\") ||\n            !!window.localStorage.getItem(\"__instantLogging\");\n}\nconst log = {\n    info: isEnabled ? console.info.bind(console) : () => { },\n    debug: isEnabled ? console.debug.bind(console) : () => { },\n    error: isEnabled ? console.error.bind(console) : () => { },\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (log);\n//# sourceMappingURL=log.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL3V0aWxzL2xvZy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDREQUE0RDtBQUM1RCw4REFBOEQ7QUFDOUQsOERBQThEO0FBQzlEO0FBQ0EsaUVBQWUsR0FBRyxFQUFDO0FBQ25CIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXERFTExcXERvY3VtZW50c1xcZW1haWwtY2hhdC1pbnRlcmZhY2VcXG5vZGVfbW9kdWxlc1xcQGluc3RhbnRkYlxcY29yZVxcZGlzdFxcbW9kdWxlXFx1dGlsc1xcbG9nLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImxldCBpc0VuYWJsZWQgPSBmYWxzZTtcbmlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiICYmXG4gICAgdHlwZW9mIHdpbmRvdy5sb2NhbFN0b3JhZ2UgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBpc0VuYWJsZWQgPVxuICAgICAgICAhIXdpbmRvdy5sb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImRldkJhY2tlbmRcIikgfHxcbiAgICAgICAgICAgICEhd2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiX19pbnN0YW50TG9nZ2luZ1wiKTtcbn1cbmNvbnN0IGxvZyA9IHtcbiAgICBpbmZvOiBpc0VuYWJsZWQgPyBjb25zb2xlLmluZm8uYmluZChjb25zb2xlKSA6ICgpID0+IHsgfSxcbiAgICBkZWJ1ZzogaXNFbmFibGVkID8gY29uc29sZS5kZWJ1Zy5iaW5kKGNvbnNvbGUpIDogKCkgPT4geyB9LFxuICAgIGVycm9yOiBpc0VuYWJsZWQgPyBjb25zb2xlLmVycm9yLmJpbmQoY29uc29sZSkgOiAoKSA9PiB7IH0sXG59O1xuZXhwb3J0IGRlZmF1bHQgbG9nO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9nLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/utils/log.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/utils/object.js":
/*!******************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/utils/object.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   areObjectKeysEqual: () => (/* binding */ areObjectKeysEqual),\n/* harmony export */   areObjectsDeepEqual: () => (/* binding */ areObjectsDeepEqual),\n/* harmony export */   areObjectsShallowEqual: () => (/* binding */ areObjectsShallowEqual),\n/* harmony export */   immutableDeepMerge: () => (/* binding */ immutableDeepMerge),\n/* harmony export */   immutableDeepReplace: () => (/* binding */ immutableDeepReplace),\n/* harmony export */   isObject: () => (/* binding */ isObject)\n/* harmony export */ });\nfunction areObjectKeysEqual(a, b) {\n    const ak = Object.keys(a);\n    const bk = Object.keys(b);\n    return (ak.length === bk.length && Object.keys(a).every((k) => b.hasOwnProperty(k)));\n}\nfunction areObjectsShallowEqual(obj1, obj2) {\n    return (Object.keys(obj1).length === Object.keys(obj2).length &&\n        Object.keys(obj1).every((key) => obj2.hasOwnProperty(key) && obj1[key] === obj2[key]));\n}\nfunction areObjectsDeepEqual(obj1, obj2) {\n    if (typeof obj1 !== \"object\" ||\n        typeof obj2 !== \"object\" ||\n        obj1 === null ||\n        obj2 === null) {\n        return obj1 === obj2;\n    }\n    if (!areObjectKeysEqual(obj1, obj2)) {\n        return false;\n    }\n    return Object.keys(obj1).every((key) => areObjectsDeepEqual(obj1[key], obj2[key]));\n}\nfunction immutableDeepMerge(target, source) {\n    if (!isObject(target) || !isObject(source)) {\n        return source;\n    }\n    const result = {};\n    for (const key of Object.keys(target)) {\n        if (source[key] === null)\n            continue;\n        result[key] = target[key];\n    }\n    for (const key of Object.keys(source)) {\n        if (source[key] === null)\n            continue;\n        const areBothObjects = isObject(target[key]) && isObject(source[key]);\n        result[key] = areBothObjects\n            ? immutableDeepMerge(target[key], source[key])\n            : source[key];\n    }\n    return result;\n}\nfunction immutableDeepReplace(target, replaceValue, replacementValue) {\n    if (!isObject(target)) {\n        return target;\n    }\n    const result = {};\n    for (const [key, value] of Object.entries(target)) {\n        result[key] = isObject(value)\n            ? immutableDeepReplace(value, replaceValue, replacementValue)\n            : value === replaceValue\n                ? replacementValue\n                : value;\n    }\n    return result;\n}\nfunction isObject(val) {\n    return typeof val === \"object\" && val !== null && !Array.isArray(val);\n}\n//# sourceMappingURL=object.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL3V0aWxzL29iamVjdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXERFTExcXERvY3VtZW50c1xcZW1haWwtY2hhdC1pbnRlcmZhY2VcXG5vZGVfbW9kdWxlc1xcQGluc3RhbnRkYlxcY29yZVxcZGlzdFxcbW9kdWxlXFx1dGlsc1xcb2JqZWN0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBhcmVPYmplY3RLZXlzRXF1YWwoYSwgYikge1xuICAgIGNvbnN0IGFrID0gT2JqZWN0LmtleXMoYSk7XG4gICAgY29uc3QgYmsgPSBPYmplY3Qua2V5cyhiKTtcbiAgICByZXR1cm4gKGFrLmxlbmd0aCA9PT0gYmsubGVuZ3RoICYmIE9iamVjdC5rZXlzKGEpLmV2ZXJ5KChrKSA9PiBiLmhhc093blByb3BlcnR5KGspKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gYXJlT2JqZWN0c1NoYWxsb3dFcXVhbChvYmoxLCBvYmoyKSB7XG4gICAgcmV0dXJuIChPYmplY3Qua2V5cyhvYmoxKS5sZW5ndGggPT09IE9iamVjdC5rZXlzKG9iajIpLmxlbmd0aCAmJlxuICAgICAgICBPYmplY3Qua2V5cyhvYmoxKS5ldmVyeSgoa2V5KSA9PiBvYmoyLmhhc093blByb3BlcnR5KGtleSkgJiYgb2JqMVtrZXldID09PSBvYmoyW2tleV0pKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBhcmVPYmplY3RzRGVlcEVxdWFsKG9iajEsIG9iajIpIHtcbiAgICBpZiAodHlwZW9mIG9iajEgIT09IFwib2JqZWN0XCIgfHxcbiAgICAgICAgdHlwZW9mIG9iajIgIT09IFwib2JqZWN0XCIgfHxcbiAgICAgICAgb2JqMSA9PT0gbnVsbCB8fFxuICAgICAgICBvYmoyID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBvYmoxID09PSBvYmoyO1xuICAgIH1cbiAgICBpZiAoIWFyZU9iamVjdEtleXNFcXVhbChvYmoxLCBvYmoyKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiBPYmplY3Qua2V5cyhvYmoxKS5ldmVyeSgoa2V5KSA9PiBhcmVPYmplY3RzRGVlcEVxdWFsKG9iajFba2V5XSwgb2JqMltrZXldKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gaW1tdXRhYmxlRGVlcE1lcmdlKHRhcmdldCwgc291cmNlKSB7XG4gICAgaWYgKCFpc09iamVjdCh0YXJnZXQpIHx8ICFpc09iamVjdChzb3VyY2UpKSB7XG4gICAgICAgIHJldHVybiBzb3VyY2U7XG4gICAgfVxuICAgIGNvbnN0IHJlc3VsdCA9IHt9O1xuICAgIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHRhcmdldCkpIHtcbiAgICAgICAgaWYgKHNvdXJjZVtrZXldID09PSBudWxsKVxuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIHJlc3VsdFtrZXldID0gdGFyZ2V0W2tleV07XG4gICAgfVxuICAgIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHNvdXJjZSkpIHtcbiAgICAgICAgaWYgKHNvdXJjZVtrZXldID09PSBudWxsKVxuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIGNvbnN0IGFyZUJvdGhPYmplY3RzID0gaXNPYmplY3QodGFyZ2V0W2tleV0pICYmIGlzT2JqZWN0KHNvdXJjZVtrZXldKTtcbiAgICAgICAgcmVzdWx0W2tleV0gPSBhcmVCb3RoT2JqZWN0c1xuICAgICAgICAgICAgPyBpbW11dGFibGVEZWVwTWVyZ2UodGFyZ2V0W2tleV0sIHNvdXJjZVtrZXldKVxuICAgICAgICAgICAgOiBzb3VyY2Vba2V5XTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpbW11dGFibGVEZWVwUmVwbGFjZSh0YXJnZXQsIHJlcGxhY2VWYWx1ZSwgcmVwbGFjZW1lbnRWYWx1ZSkge1xuICAgIGlmICghaXNPYmplY3QodGFyZ2V0KSkge1xuICAgICAgICByZXR1cm4gdGFyZ2V0O1xuICAgIH1cbiAgICBjb25zdCByZXN1bHQgPSB7fTtcbiAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBPYmplY3QuZW50cmllcyh0YXJnZXQpKSB7XG4gICAgICAgIHJlc3VsdFtrZXldID0gaXNPYmplY3QodmFsdWUpXG4gICAgICAgICAgICA/IGltbXV0YWJsZURlZXBSZXBsYWNlKHZhbHVlLCByZXBsYWNlVmFsdWUsIHJlcGxhY2VtZW50VmFsdWUpXG4gICAgICAgICAgICA6IHZhbHVlID09PSByZXBsYWNlVmFsdWVcbiAgICAgICAgICAgICAgICA/IHJlcGxhY2VtZW50VmFsdWVcbiAgICAgICAgICAgICAgICA6IHZhbHVlO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzT2JqZWN0KHZhbCkge1xuICAgIHJldHVybiB0eXBlb2YgdmFsID09PSBcIm9iamVjdFwiICYmIHZhbCAhPT0gbnVsbCAmJiAhQXJyYXkuaXNBcnJheSh2YWwpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9b2JqZWN0LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/utils/object.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/utils/pick.js":
/*!****************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/utils/pick.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pick: () => (/* binding */ pick)\n/* harmony export */ });\nfunction pick(obj, keys) {\n    if (!keys)\n        return obj;\n    const ret = {};\n    keys.forEach((key) => {\n        ret[key] = obj[key];\n    });\n    return ret;\n}\n//# sourceMappingURL=pick.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL3V0aWxzL3BpY2suanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcREVMTFxcRG9jdW1lbnRzXFxlbWFpbC1jaGF0LWludGVyZmFjZVxcbm9kZV9tb2R1bGVzXFxAaW5zdGFudGRiXFxjb3JlXFxkaXN0XFxtb2R1bGVcXHV0aWxzXFxwaWNrLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBwaWNrKG9iaiwga2V5cykge1xuICAgIGlmICgha2V5cylcbiAgICAgICAgcmV0dXJuIG9iajtcbiAgICBjb25zdCByZXQgPSB7fTtcbiAgICBrZXlzLmZvckVhY2goKGtleSkgPT4ge1xuICAgICAgICByZXRba2V5XSA9IG9ialtrZXldO1xuICAgIH0pO1xuICAgIHJldHVybiByZXQ7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1waWNrLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/utils/pick.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/utils/uuid.js":
/*!****************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/utils/uuid.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   uuidCompare: () => (/* binding */ uuidCompare)\n/* harmony export */ });\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! uuid */ \"(ssr)/./node_modules/uuid/dist/esm-node/v4.js\");\n\nfunction uuidToByteArray(uuid) {\n    const hex = uuid.replace(/-/g, \"\");\n    const bytes = [];\n    for (let i = 0; i < hex.length; i += 2) {\n        bytes.push(parseInt(hex.substring(i, i + 2), 16));\n    }\n    return bytes;\n}\nfunction compareByteArrays(a, b) {\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] < b[i])\n            return -1;\n        if (a[i] > b[i])\n            return 1;\n    }\n    return 0;\n}\nfunction uuidCompare(uuid_a, uuid_b) {\n    return compareByteArrays(uuidToByteArray(uuid_a), uuidToByteArray(uuid_b));\n}\nfunction id() {\n    return (0,uuid__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (id);\n//# sourceMappingURL=uuid.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL3V0aWxzL3V1aWQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixnQkFBZ0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixjQUFjO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxXQUFXLGdEQUFFO0FBQ2I7QUFDQSxpRUFBZSxFQUFFLEVBQUM7QUFDbEIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcREVMTFxcRG9jdW1lbnRzXFxlbWFpbC1jaGF0LWludGVyZmFjZVxcbm9kZV9tb2R1bGVzXFxAaW5zdGFudGRiXFxjb3JlXFxkaXN0XFxtb2R1bGVcXHV0aWxzXFx1dWlkLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHY0IH0gZnJvbSBcInV1aWRcIjtcbmZ1bmN0aW9uIHV1aWRUb0J5dGVBcnJheSh1dWlkKSB7XG4gICAgY29uc3QgaGV4ID0gdXVpZC5yZXBsYWNlKC8tL2csIFwiXCIpO1xuICAgIGNvbnN0IGJ5dGVzID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBoZXgubGVuZ3RoOyBpICs9IDIpIHtcbiAgICAgICAgYnl0ZXMucHVzaChwYXJzZUludChoZXguc3Vic3RyaW5nKGksIGkgKyAyKSwgMTYpKTtcbiAgICB9XG4gICAgcmV0dXJuIGJ5dGVzO1xufVxuZnVuY3Rpb24gY29tcGFyZUJ5dGVBcnJheXMoYSwgYikge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYS5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAoYVtpXSA8IGJbaV0pXG4gICAgICAgICAgICByZXR1cm4gLTE7XG4gICAgICAgIGlmIChhW2ldID4gYltpXSlcbiAgICAgICAgICAgIHJldHVybiAxO1xuICAgIH1cbiAgICByZXR1cm4gMDtcbn1cbmV4cG9ydCBmdW5jdGlvbiB1dWlkQ29tcGFyZSh1dWlkX2EsIHV1aWRfYikge1xuICAgIHJldHVybiBjb21wYXJlQnl0ZUFycmF5cyh1dWlkVG9CeXRlQXJyYXkodXVpZF9hKSwgdXVpZFRvQnl0ZUFycmF5KHV1aWRfYikpO1xufVxuZnVuY3Rpb24gaWQoKSB7XG4gICAgcmV0dXJuIHY0KCk7XG59XG5leHBvcnQgZGVmYXVsdCBpZDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV1aWQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/utils/uuid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/utils/weakHash.js":
/*!********************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/utils/weakHash.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ weakHash)\n/* harmony export */ });\n/**\n *\n * Unique Hashing implementation inspired by djb2/fnv1a algorithms,\n * where we are not concerned with the hash being decoded.\n * Focuses on speed while maintaining good hash distribution\n *\n * Note: We could also use something like Murmurhash instead\n * https://github.com/jensyt/imurmurhash-js/blob/master/imurmurhash.js\n *\n * @param {any} input - Value to hash\n * @returns {string} - Hash in hex format\n */\nfunction weakHash(input) {\n    // Handle primitives without JSON stringify for better performance\n    if (typeof input === 'number') {\n        // Use a larger number space for numeric values\n        return (Math.abs(input * 2654435761) >>> 0).toString(16);\n    }\n    if (typeof input === 'boolean')\n        return input ? '1' : '0';\n    if (input === null)\n        return 'null';\n    if (input === undefined)\n        return 'undefined';\n    // For strings, use FNV-1a algorithm\n    if (typeof input === 'string') {\n        let hash = 0x811C9DC5; // FNV offset basis (32 bit)\n        for (let i = 0; i < input.length; i++) {\n            hash ^= input.charCodeAt(i);\n            hash += (hash << 1) + (hash << 4) + (hash << 7) + (hash << 8) + (hash << 24);\n            hash = hash >>> 0; // Convert to unsigned 32-bit after each iteration\n        }\n        return hash.toString(16);\n    }\n    // For arrays, hash elements directly\n    if (Array.isArray(input)) {\n        let hash = 0x811C9DC5;\n        for (let i = 0; i < input.length; i++) {\n            // Add array position to hash calculation\n            hash ^= (i + 1) * 2654435761;\n            // Recursively hash array elements\n            const elementHash = weakHash(input[i]);\n            // Mix the element hash into the running hash\n            for (let j = 0; j < elementHash.length; j++) {\n                hash ^= elementHash.charCodeAt(j);\n                hash *= 16777619; // FNV prime (32 bit)\n                hash = hash >>> 0;\n            }\n        }\n        return hash.toString(16);\n    }\n    // For objects, hash keys and values\n    if (typeof input === 'object') {\n        let hash = 0x811C9DC5;\n        const keys = Object.keys(input).sort(); // Sort for consistency\n        for (let i = 0; i < keys.length; i++) {\n            const key = keys[i];\n            // Hash the key using string hash\n            const keyHash = weakHash(key);\n            hash ^= parseInt(keyHash, 16);\n            hash *= 16777619;\n            hash = hash >>> 0;\n            // Hash the value recursively\n            const valueHash = weakHash(input[key]);\n            hash ^= parseInt(valueHash, 16);\n            hash *= 16777619;\n            hash = hash >>> 0;\n        }\n        return hash.toString(16);\n    }\n    // Fallback for other types\n    return weakHash(String(input));\n}\n//# sourceMappingURL=weakHash.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL3V0aWxzL3dlYWtIYXNoLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEtBQUs7QUFDaEIsYUFBYSxRQUFRO0FBQ3JCO0FBQ2U7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQjtBQUMvQix3QkFBd0Isa0JBQWtCO0FBQzFDO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGtCQUFrQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHdCQUF3QjtBQUNwRDtBQUNBLGtDQUFrQztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdEO0FBQ2hELHdCQUF3QixpQkFBaUI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXERFTExcXERvY3VtZW50c1xcZW1haWwtY2hhdC1pbnRlcmZhY2VcXG5vZGVfbW9kdWxlc1xcQGluc3RhbnRkYlxcY29yZVxcZGlzdFxcbW9kdWxlXFx1dGlsc1xcd2Vha0hhc2guanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKlxuICogVW5pcXVlIEhhc2hpbmcgaW1wbGVtZW50YXRpb24gaW5zcGlyZWQgYnkgZGpiMi9mbnYxYSBhbGdvcml0aG1zLFxuICogd2hlcmUgd2UgYXJlIG5vdCBjb25jZXJuZWQgd2l0aCB0aGUgaGFzaCBiZWluZyBkZWNvZGVkLlxuICogRm9jdXNlcyBvbiBzcGVlZCB3aGlsZSBtYWludGFpbmluZyBnb29kIGhhc2ggZGlzdHJpYnV0aW9uXG4gKlxuICogTm90ZTogV2UgY291bGQgYWxzbyB1c2Ugc29tZXRoaW5nIGxpa2UgTXVybXVyaGFzaCBpbnN0ZWFkXG4gKiBodHRwczovL2dpdGh1Yi5jb20vamVuc3l0L2ltdXJtdXJoYXNoLWpzL2Jsb2IvbWFzdGVyL2ltdXJtdXJoYXNoLmpzXG4gKlxuICogQHBhcmFtIHthbnl9IGlucHV0IC0gVmFsdWUgdG8gaGFzaFxuICogQHJldHVybnMge3N0cmluZ30gLSBIYXNoIGluIGhleCBmb3JtYXRcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gd2Vha0hhc2goaW5wdXQpIHtcbiAgICAvLyBIYW5kbGUgcHJpbWl0aXZlcyB3aXRob3V0IEpTT04gc3RyaW5naWZ5IGZvciBiZXR0ZXIgcGVyZm9ybWFuY2VcbiAgICBpZiAodHlwZW9mIGlucHV0ID09PSAnbnVtYmVyJykge1xuICAgICAgICAvLyBVc2UgYSBsYXJnZXIgbnVtYmVyIHNwYWNlIGZvciBudW1lcmljIHZhbHVlc1xuICAgICAgICByZXR1cm4gKE1hdGguYWJzKGlucHV0ICogMjY1NDQzNTc2MSkgPj4+IDApLnRvU3RyaW5nKDE2KTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBpbnB1dCA9PT0gJ2Jvb2xlYW4nKVxuICAgICAgICByZXR1cm4gaW5wdXQgPyAnMScgOiAnMCc7XG4gICAgaWYgKGlucHV0ID09PSBudWxsKVxuICAgICAgICByZXR1cm4gJ251bGwnO1xuICAgIGlmIChpbnB1dCA9PT0gdW5kZWZpbmVkKVxuICAgICAgICByZXR1cm4gJ3VuZGVmaW5lZCc7XG4gICAgLy8gRm9yIHN0cmluZ3MsIHVzZSBGTlYtMWEgYWxnb3JpdGhtXG4gICAgaWYgKHR5cGVvZiBpbnB1dCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgbGV0IGhhc2ggPSAweDgxMUM5REM1OyAvLyBGTlYgb2Zmc2V0IGJhc2lzICgzMiBiaXQpXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgaW5wdXQubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGhhc2ggXj0gaW5wdXQuY2hhckNvZGVBdChpKTtcbiAgICAgICAgICAgIGhhc2ggKz0gKGhhc2ggPDwgMSkgKyAoaGFzaCA8PCA0KSArIChoYXNoIDw8IDcpICsgKGhhc2ggPDwgOCkgKyAoaGFzaCA8PCAyNCk7XG4gICAgICAgICAgICBoYXNoID0gaGFzaCA+Pj4gMDsgLy8gQ29udmVydCB0byB1bnNpZ25lZCAzMi1iaXQgYWZ0ZXIgZWFjaCBpdGVyYXRpb25cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaGFzaC50b1N0cmluZygxNik7XG4gICAgfVxuICAgIC8vIEZvciBhcnJheXMsIGhhc2ggZWxlbWVudHMgZGlyZWN0bHlcbiAgICBpZiAoQXJyYXkuaXNBcnJheShpbnB1dCkpIHtcbiAgICAgICAgbGV0IGhhc2ggPSAweDgxMUM5REM1O1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGlucHV0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAvLyBBZGQgYXJyYXkgcG9zaXRpb24gdG8gaGFzaCBjYWxjdWxhdGlvblxuICAgICAgICAgICAgaGFzaCBePSAoaSArIDEpICogMjY1NDQzNTc2MTtcbiAgICAgICAgICAgIC8vIFJlY3Vyc2l2ZWx5IGhhc2ggYXJyYXkgZWxlbWVudHNcbiAgICAgICAgICAgIGNvbnN0IGVsZW1lbnRIYXNoID0gd2Vha0hhc2goaW5wdXRbaV0pO1xuICAgICAgICAgICAgLy8gTWl4IHRoZSBlbGVtZW50IGhhc2ggaW50byB0aGUgcnVubmluZyBoYXNoXG4gICAgICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IGVsZW1lbnRIYXNoLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICAgICAgaGFzaCBePSBlbGVtZW50SGFzaC5jaGFyQ29kZUF0KGopO1xuICAgICAgICAgICAgICAgIGhhc2ggKj0gMTY3Nzc2MTk7IC8vIEZOViBwcmltZSAoMzIgYml0KVxuICAgICAgICAgICAgICAgIGhhc2ggPSBoYXNoID4+PiAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBoYXNoLnRvU3RyaW5nKDE2KTtcbiAgICB9XG4gICAgLy8gRm9yIG9iamVjdHMsIGhhc2gga2V5cyBhbmQgdmFsdWVzXG4gICAgaWYgKHR5cGVvZiBpbnB1dCA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgbGV0IGhhc2ggPSAweDgxMUM5REM1O1xuICAgICAgICBjb25zdCBrZXlzID0gT2JqZWN0LmtleXMoaW5wdXQpLnNvcnQoKTsgLy8gU29ydCBmb3IgY29uc2lzdGVuY3lcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBjb25zdCBrZXkgPSBrZXlzW2ldO1xuICAgICAgICAgICAgLy8gSGFzaCB0aGUga2V5IHVzaW5nIHN0cmluZyBoYXNoXG4gICAgICAgICAgICBjb25zdCBrZXlIYXNoID0gd2Vha0hhc2goa2V5KTtcbiAgICAgICAgICAgIGhhc2ggXj0gcGFyc2VJbnQoa2V5SGFzaCwgMTYpO1xuICAgICAgICAgICAgaGFzaCAqPSAxNjc3NzYxOTtcbiAgICAgICAgICAgIGhhc2ggPSBoYXNoID4+PiAwO1xuICAgICAgICAgICAgLy8gSGFzaCB0aGUgdmFsdWUgcmVjdXJzaXZlbHlcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlSGFzaCA9IHdlYWtIYXNoKGlucHV0W2tleV0pO1xuICAgICAgICAgICAgaGFzaCBePSBwYXJzZUludCh2YWx1ZUhhc2gsIDE2KTtcbiAgICAgICAgICAgIGhhc2ggKj0gMTY3Nzc2MTk7XG4gICAgICAgICAgICBoYXNoID0gaGFzaCA+Pj4gMDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaGFzaC50b1N0cmluZygxNik7XG4gICAgfVxuICAgIC8vIEZhbGxiYWNrIGZvciBvdGhlciB0eXBlc1xuICAgIHJldHVybiB3ZWFrSGFzaChTdHJpbmcoaW5wdXQpKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdlYWtIYXNoLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/utils/weakHash.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/core/dist/module/version.js":
/*!*************************************************************!*\
  !*** ./node_modules/@instantdb/core/dist/module/version.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Autogenerated by publish_packages.clj\nconst version = \"v0.17.3\";\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (version);\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9jb3JlL2Rpc3QvbW9kdWxlL3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQSxpRUFBZSxPQUFPLEVBQUM7QUFDdkIiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcREVMTFxcRG9jdW1lbnRzXFxlbWFpbC1jaGF0LWludGVyZmFjZVxcbm9kZV9tb2R1bGVzXFxAaW5zdGFudGRiXFxjb3JlXFxkaXN0XFxtb2R1bGVcXHZlcnNpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQXV0b2dlbmVyYXRlZCBieSBwdWJsaXNoX3BhY2thZ2VzLmNsalxuY29uc3QgdmVyc2lvbiA9IFwidjAuMTcuM1wiO1xuZXhwb3J0IGRlZmF1bHQgdmVyc2lvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZlcnNpb24uanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/core/dist/module/version.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/react/dist/module/Cursors.js":
/*!**************************************************************!*\
  !*** ./node_modules/@instantdb/react/dist/module/Cursors.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Cursors: () => (/* binding */ Cursors)\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nfunction Cursors({ as = \"div\", spaceId: _spaceId, room, className, style, userCursorColor, children, renderCursor, propagate, zIndex, }) {\n    const spaceId = _spaceId || `cursors-space-default--${String(room.type)}-${room.id}`;\n    const cursorsPresence = room.usePresence({\n        keys: [spaceId],\n    });\n    const fullPresence = room._core._reactor.getPresence(room.type, room.id);\n    function publishCursor(rect, touch) {\n        const x = touch.clientX;\n        const y = touch.clientY;\n        const xPercent = ((x - rect.left) / rect.width) * 100;\n        const yPercent = ((y - rect.top) / rect.height) * 100;\n        cursorsPresence.publishPresence({\n            [spaceId]: {\n                x,\n                y,\n                xPercent,\n                yPercent,\n                color: userCursorColor,\n            },\n        });\n    }\n    function onMouseMove(e) {\n        if (!propagate) {\n            e.stopPropagation();\n        }\n        const rect = e.currentTarget.getBoundingClientRect();\n        publishCursor(rect, e);\n    }\n    function onMouseOut(e) {\n        cursorsPresence.publishPresence({\n            [spaceId]: undefined,\n        });\n    }\n    function onTouchMove(e) {\n        if (e.touches.length !== 1) {\n            return;\n        }\n        const touch = e.touches[0];\n        if (touch.target instanceof Element) {\n            if (!propagate) {\n                e.stopPropagation();\n            }\n            const rect = touch.target.getBoundingClientRect();\n            publishCursor(rect, touch);\n        }\n    }\n    function onTouchEnd(e) {\n        cursorsPresence.publishPresence({\n            [spaceId]: undefined,\n        });\n    }\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.createElement)(as, {\n        onMouseMove,\n        onMouseOut,\n        onTouchMove,\n        onTouchEnd,\n        className,\n        style: Object.assign({ position: \"relative\" }, style),\n    }, [\n        children,\n        (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { style: Object.assign(Object.assign(Object.assign({}, absStyles), inertStyles), { zIndex: zIndex !== undefined ? zIndex : defaultZ }), children: Object.entries(cursorsPresence.peers).map(([id, presence]) => {\n                const cursor = presence[spaceId];\n                if (!cursor)\n                    return null;\n                return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", { style: Object.assign(Object.assign({}, absStyles), { transform: `translate(${cursor.xPercent}%, ${cursor.yPercent}%)`, transformOrigin: \"0 0\", transition: \"transform 100ms\" }), children: renderCursor ? (renderCursor({\n                        color: cursor.color,\n                        presence: fullPresence.peers[id],\n                    })) : ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Cursor, Object.assign({}, cursor))) }, id));\n            }) }, spaceId),\n    ]);\n}\nfunction Cursor({ color }) {\n    const size = 35;\n    const fill = color || \"black\";\n    return ((0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"svg\", { style: { height: size, width: size }, viewBox: `0 0 ${size} ${size}`, fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"g\", { fill: \"rgba(0,0,0,.2)\", transform: \"matrix(1, 0, 0, 1, -11.999999046325684, -8.406899452209473)\", children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"m12 24.4219v-16.015l11.591 11.619h-6.781l-.411.124z\" }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"m21.0845 25.0962-3.605 1.535-4.682-11.089 3.686-1.553z\" })] }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"g\", { fill: \"white\", transform: \"matrix(1, 0, 0, 1, -11.999999046325684, -8.406899452209473)\", children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"m12 24.4219v-16.015l11.591 11.619h-6.781l-.411.124z\" }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"m21.0845 25.0962-3.605 1.535-4.682-11.089 3.686-1.553z\" })] }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(\"g\", { fill: fill, transform: \"matrix(1, 0, 0, 1, -11.999999046325684, -8.406899452209473)\", children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"m19.751 24.4155-1.844.774-3.1-7.374 1.841-.775z\" }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"path\", { d: \"m13 10.814v11.188l2.969-2.866.428-.139h4.768z\" })] })] }));\n}\nconst absStyles = {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n};\nconst inertStyles = {\n    overflow: \"hidden\",\n    pointerEvents: \"none\",\n    userSelect: \"none\",\n};\nconst defaultZ = 99999;\n//# sourceMappingURL=Cursors.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9yZWFjdC9kaXN0L21vZHVsZS9DdXJzb3JzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQStEO0FBQ3hCO0FBQ2hDLG1CQUFtQixvSEFBb0g7QUFDOUksMERBQTBELGtCQUFrQixHQUFHLFFBQVE7QUFDdkY7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsV0FBVyxvREFBYTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLHNCQUFzQjtBQUNyRCxLQUFLO0FBQ0w7QUFDQSxRQUFRLHNEQUFJLFVBQVUsbURBQW1ELDhCQUE4QixrREFBa0Q7QUFDeko7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHNEQUFJLFVBQVUscUNBQXFDLGdCQUFnQix3QkFBd0IsZ0JBQWdCLEtBQUssZ0JBQWdCLDREQUE0RDtBQUNwTjtBQUNBO0FBQ0EscUJBQXFCLE1BQU0sc0RBQUkseUJBQXlCLGFBQWE7QUFDckUsYUFBYSxHQUFHO0FBQ2hCO0FBQ0E7QUFDQSxrQkFBa0IsT0FBTztBQUN6QjtBQUNBO0FBQ0EsWUFBWSx1REFBSyxVQUFVLFNBQVMsMkJBQTJCLGtCQUFrQixNQUFNLEVBQUUsS0FBSyxpRUFBaUUsdURBQUssUUFBUSw2R0FBNkcsc0RBQUksV0FBVywwREFBMEQsR0FBRyxzREFBSSxXQUFXLDZEQUE2RCxJQUFJLEdBQUcsdURBQUssUUFBUSxvR0FBb0csc0RBQUksV0FBVywwREFBMEQsR0FBRyxzREFBSSxXQUFXLDZEQUE2RCxJQUFJLEdBQUcsdURBQUssUUFBUSxpR0FBaUcsc0RBQUksV0FBVyxzREFBc0QsR0FBRyxzREFBSSxXQUFXLG9EQUFvRCxJQUFJLElBQUk7QUFDejhCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxERUxMXFxEb2N1bWVudHNcXGVtYWlsLWNoYXQtaW50ZXJmYWNlXFxub2RlX21vZHVsZXNcXEBpbnN0YW50ZGJcXHJlYWN0XFxkaXN0XFxtb2R1bGVcXEN1cnNvcnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsganN4IGFzIF9qc3gsIGpzeHMgYXMgX2pzeHMgfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmltcG9ydCB7IGNyZWF0ZUVsZW1lbnQsIH0gZnJvbSBcInJlYWN0XCI7XG5leHBvcnQgZnVuY3Rpb24gQ3Vyc29ycyh7IGFzID0gXCJkaXZcIiwgc3BhY2VJZDogX3NwYWNlSWQsIHJvb20sIGNsYXNzTmFtZSwgc3R5bGUsIHVzZXJDdXJzb3JDb2xvciwgY2hpbGRyZW4sIHJlbmRlckN1cnNvciwgcHJvcGFnYXRlLCB6SW5kZXgsIH0pIHtcbiAgICBjb25zdCBzcGFjZUlkID0gX3NwYWNlSWQgfHwgYGN1cnNvcnMtc3BhY2UtZGVmYXVsdC0tJHtTdHJpbmcocm9vbS50eXBlKX0tJHtyb29tLmlkfWA7XG4gICAgY29uc3QgY3Vyc29yc1ByZXNlbmNlID0gcm9vbS51c2VQcmVzZW5jZSh7XG4gICAgICAgIGtleXM6IFtzcGFjZUlkXSxcbiAgICB9KTtcbiAgICBjb25zdCBmdWxsUHJlc2VuY2UgPSByb29tLl9jb3JlLl9yZWFjdG9yLmdldFByZXNlbmNlKHJvb20udHlwZSwgcm9vbS5pZCk7XG4gICAgZnVuY3Rpb24gcHVibGlzaEN1cnNvcihyZWN0LCB0b3VjaCkge1xuICAgICAgICBjb25zdCB4ID0gdG91Y2guY2xpZW50WDtcbiAgICAgICAgY29uc3QgeSA9IHRvdWNoLmNsaWVudFk7XG4gICAgICAgIGNvbnN0IHhQZXJjZW50ID0gKCh4IC0gcmVjdC5sZWZ0KSAvIHJlY3Qud2lkdGgpICogMTAwO1xuICAgICAgICBjb25zdCB5UGVyY2VudCA9ICgoeSAtIHJlY3QudG9wKSAvIHJlY3QuaGVpZ2h0KSAqIDEwMDtcbiAgICAgICAgY3Vyc29yc1ByZXNlbmNlLnB1Ymxpc2hQcmVzZW5jZSh7XG4gICAgICAgICAgICBbc3BhY2VJZF06IHtcbiAgICAgICAgICAgICAgICB4LFxuICAgICAgICAgICAgICAgIHksXG4gICAgICAgICAgICAgICAgeFBlcmNlbnQsXG4gICAgICAgICAgICAgICAgeVBlcmNlbnQsXG4gICAgICAgICAgICAgICAgY29sb3I6IHVzZXJDdXJzb3JDb2xvcixcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBmdW5jdGlvbiBvbk1vdXNlTW92ZShlKSB7XG4gICAgICAgIGlmICghcHJvcGFnYXRlKSB7XG4gICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHJlY3QgPSBlLmN1cnJlbnRUYXJnZXQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgIHB1Ymxpc2hDdXJzb3IocmVjdCwgZSk7XG4gICAgfVxuICAgIGZ1bmN0aW9uIG9uTW91c2VPdXQoZSkge1xuICAgICAgICBjdXJzb3JzUHJlc2VuY2UucHVibGlzaFByZXNlbmNlKHtcbiAgICAgICAgICAgIFtzcGFjZUlkXTogdW5kZWZpbmVkLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZnVuY3Rpb24gb25Ub3VjaE1vdmUoZSkge1xuICAgICAgICBpZiAoZS50b3VjaGVzLmxlbmd0aCAhPT0gMSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHRvdWNoID0gZS50b3VjaGVzWzBdO1xuICAgICAgICBpZiAodG91Y2gudGFyZ2V0IGluc3RhbmNlb2YgRWxlbWVudCkge1xuICAgICAgICAgICAgaWYgKCFwcm9wYWdhdGUpIHtcbiAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgcmVjdCA9IHRvdWNoLnRhcmdldC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgICAgIHB1Ymxpc2hDdXJzb3IocmVjdCwgdG91Y2gpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZ1bmN0aW9uIG9uVG91Y2hFbmQoZSkge1xuICAgICAgICBjdXJzb3JzUHJlc2VuY2UucHVibGlzaFByZXNlbmNlKHtcbiAgICAgICAgICAgIFtzcGFjZUlkXTogdW5kZWZpbmVkLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQoYXMsIHtcbiAgICAgICAgb25Nb3VzZU1vdmUsXG4gICAgICAgIG9uTW91c2VPdXQsXG4gICAgICAgIG9uVG91Y2hNb3ZlLFxuICAgICAgICBvblRvdWNoRW5kLFxuICAgICAgICBjbGFzc05hbWUsXG4gICAgICAgIHN0eWxlOiBPYmplY3QuYXNzaWduKHsgcG9zaXRpb246IFwicmVsYXRpdmVcIiB9LCBzdHlsZSksXG4gICAgfSwgW1xuICAgICAgICBjaGlsZHJlbixcbiAgICAgICAgX2pzeChcImRpdlwiLCB7IHN0eWxlOiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgYWJzU3R5bGVzKSwgaW5lcnRTdHlsZXMpLCB7IHpJbmRleDogekluZGV4ICE9PSB1bmRlZmluZWQgPyB6SW5kZXggOiBkZWZhdWx0WiB9KSwgY2hpbGRyZW46IE9iamVjdC5lbnRyaWVzKGN1cnNvcnNQcmVzZW5jZS5wZWVycykubWFwKChbaWQsIHByZXNlbmNlXSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IGN1cnNvciA9IHByZXNlbmNlW3NwYWNlSWRdO1xuICAgICAgICAgICAgICAgIGlmICghY3Vyc29yKVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgICAgICAgICByZXR1cm4gKF9qc3goXCJkaXZcIiwgeyBzdHlsZTogT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBhYnNTdHlsZXMpLCB7IHRyYW5zZm9ybTogYHRyYW5zbGF0ZSgke2N1cnNvci54UGVyY2VudH0lLCAke2N1cnNvci55UGVyY2VudH0lKWAsIHRyYW5zZm9ybU9yaWdpbjogXCIwIDBcIiwgdHJhbnNpdGlvbjogXCJ0cmFuc2Zvcm0gMTAwbXNcIiB9KSwgY2hpbGRyZW46IHJlbmRlckN1cnNvciA/IChyZW5kZXJDdXJzb3Ioe1xuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6IGN1cnNvci5jb2xvcixcbiAgICAgICAgICAgICAgICAgICAgICAgIHByZXNlbmNlOiBmdWxsUHJlc2VuY2UucGVlcnNbaWRdLFxuICAgICAgICAgICAgICAgICAgICB9KSkgOiAoX2pzeChDdXJzb3IsIE9iamVjdC5hc3NpZ24oe30sIGN1cnNvcikpKSB9LCBpZCkpO1xuICAgICAgICAgICAgfSkgfSwgc3BhY2VJZCksXG4gICAgXSk7XG59XG5mdW5jdGlvbiBDdXJzb3IoeyBjb2xvciB9KSB7XG4gICAgY29uc3Qgc2l6ZSA9IDM1O1xuICAgIGNvbnN0IGZpbGwgPSBjb2xvciB8fCBcImJsYWNrXCI7XG4gICAgcmV0dXJuIChfanN4cyhcInN2Z1wiLCB7IHN0eWxlOiB7IGhlaWdodDogc2l6ZSwgd2lkdGg6IHNpemUgfSwgdmlld0JveDogYDAgMCAke3NpemV9ICR7c2l6ZX1gLCBmaWxsOiBcIm5vbmVcIiwgeG1sbnM6IFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiwgY2hpbGRyZW46IFtfanN4cyhcImdcIiwgeyBmaWxsOiBcInJnYmEoMCwwLDAsLjIpXCIsIHRyYW5zZm9ybTogXCJtYXRyaXgoMSwgMCwgMCwgMSwgLTExLjk5OTk5OTA0NjMyNTY4NCwgLTguNDA2ODk5NDUyMjA5NDczKVwiLCBjaGlsZHJlbjogW19qc3goXCJwYXRoXCIsIHsgZDogXCJtMTIgMjQuNDIxOXYtMTYuMDE1bDExLjU5MSAxMS42MTloLTYuNzgxbC0uNDExLjEyNHpcIiB9KSwgX2pzeChcInBhdGhcIiwgeyBkOiBcIm0yMS4wODQ1IDI1LjA5NjItMy42MDUgMS41MzUtNC42ODItMTEuMDg5IDMuNjg2LTEuNTUzelwiIH0pXSB9KSwgX2pzeHMoXCJnXCIsIHsgZmlsbDogXCJ3aGl0ZVwiLCB0cmFuc2Zvcm06IFwibWF0cml4KDEsIDAsIDAsIDEsIC0xMS45OTk5OTkwNDYzMjU2ODQsIC04LjQwNjg5OTQ1MjIwOTQ3MylcIiwgY2hpbGRyZW46IFtfanN4KFwicGF0aFwiLCB7IGQ6IFwibTEyIDI0LjQyMTl2LTE2LjAxNWwxMS41OTEgMTEuNjE5aC02Ljc4MWwtLjQxMS4xMjR6XCIgfSksIF9qc3goXCJwYXRoXCIsIHsgZDogXCJtMjEuMDg0NSAyNS4wOTYyLTMuNjA1IDEuNTM1LTQuNjgyLTExLjA4OSAzLjY4Ni0xLjU1M3pcIiB9KV0gfSksIF9qc3hzKFwiZ1wiLCB7IGZpbGw6IGZpbGwsIHRyYW5zZm9ybTogXCJtYXRyaXgoMSwgMCwgMCwgMSwgLTExLjk5OTk5OTA0NjMyNTY4NCwgLTguNDA2ODk5NDUyMjA5NDczKVwiLCBjaGlsZHJlbjogW19qc3goXCJwYXRoXCIsIHsgZDogXCJtMTkuNzUxIDI0LjQxNTUtMS44NDQuNzc0LTMuMS03LjM3NCAxLjg0MS0uNzc1elwiIH0pLCBfanN4KFwicGF0aFwiLCB7IGQ6IFwibTEzIDEwLjgxNHYxMS4xODhsMi45NjktMi44NjYuNDI4LS4xMzloNC43Njh6XCIgfSldIH0pXSB9KSk7XG59XG5jb25zdCBhYnNTdHlsZXMgPSB7XG4gICAgcG9zaXRpb246IFwiYWJzb2x1dGVcIixcbiAgICB0b3A6IDAsXG4gICAgbGVmdDogMCxcbiAgICBib3R0b206IDAsXG4gICAgcmlnaHQ6IDAsXG59O1xuY29uc3QgaW5lcnRTdHlsZXMgPSB7XG4gICAgb3ZlcmZsb3c6IFwiaGlkZGVuXCIsXG4gICAgcG9pbnRlckV2ZW50czogXCJub25lXCIsXG4gICAgdXNlclNlbGVjdDogXCJub25lXCIsXG59O1xuY29uc3QgZGVmYXVsdFogPSA5OTk5OTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUN1cnNvcnMuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/react/dist/module/Cursors.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/react/dist/module/InstantReactAbstractDatabase.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@instantdb/react/dist/module/InstantReactAbstractDatabase.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InstantReactRoom: () => (/* binding */ InstantReactRoom),\n/* harmony export */   \"default\": () => (/* binding */ InstantReactAbstractDatabase),\n/* harmony export */   defaultActivityStopTimeout: () => (/* binding */ defaultActivityStopTimeout)\n/* harmony export */ });\n/* harmony import */ var _instantdb_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @instantdb/core */ \"(ssr)/./node_modules/@instantdb/core/dist/module/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _useQuery__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./useQuery */ \"(ssr)/./node_modules/@instantdb/react/dist/module/useQuery.js\");\n/* harmony import */ var _useTimeout__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./useTimeout */ \"(ssr)/./node_modules/@instantdb/react/dist/module/useTimeout.js\");\n\n\n\n\nconst defaultActivityStopTimeout = 1000;\nclass InstantReactRoom {\n    constructor(_core, type, id) {\n        /**\n         * Listen for broadcasted events given a room and topic.\n         *\n         * @see https://instantdb.com/docs/presence-and-topics\n         * @example\n         *  function App({ roomId }) {\n         *    db.room(roomType, roomId).useTopicEffect(\"chat\", (message, peer) => {\n         *      console.log(\"New message\", message, 'from', peer.name);\n         *    });\n         *\n         *    // ...\n         *  }\n         */\n        this.useTopicEffect = (topic, onEvent) => {\n            (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n                const unsub = this._core._reactor.subscribeTopic(this.id, topic, (event, peer) => {\n                    onEvent(event, peer);\n                });\n                return unsub;\n            }, [this.id, topic]);\n        };\n        /**\n         * Broadcast an event to a room.\n         *\n         * @see https://instantdb.com/docs/presence-and-topics\n         * @example\n         * function App({ roomId }) {\n         *   const publishTopic = db.room(roomType, roomId).usePublishTopic(\"clicks\");\n         *\n         *   return (\n         *     <button onClick={() => publishTopic({ ts: Date.now() })}>Click me</button>\n         *   );\n         * }\n         *\n         */\n        this.usePublishTopic = (topic) => {\n            (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => this._core._reactor.joinRoom(this.id), [this.id]);\n            const publishTopic = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((data) => {\n                this._core._reactor.publishTopic({\n                    roomType: this.type,\n                    roomId: this.id,\n                    topic,\n                    data,\n                });\n            }, [this.id, topic]);\n            return publishTopic;\n        };\n        /**\n         * Listen for peer's presence data in a room, and publish the current user's presence.\n         *\n         * @see https://instantdb.com/docs/presence-and-topics\n         * @example\n         *  function App({ roomId }) {\n         *    const {\n         *      peers,\n         *      publishPresence\n         *    } = db.room(roomType, roomId).usePresence({ keys: [\"name\", \"avatar\"] });\n         *\n         *    // ...\n         *  }\n         */\n        this.usePresence = (opts = {}) => {\n            var _a, _b;\n            const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(() => {\n                var _a;\n                return ((_a = this._core._reactor.getPresence(this.type, this.id, opts)) !== null && _a !== void 0 ? _a : {\n                    peers: {},\n                    isLoading: true,\n                });\n            });\n            (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n                const unsub = this._core._reactor.subscribePresence(this.type, this.id, opts, (data) => {\n                    setState(data);\n                });\n                return unsub;\n            }, [this.id, opts.user, (_a = opts.peers) === null || _a === void 0 ? void 0 : _a.join(), (_b = opts.keys) === null || _b === void 0 ? void 0 : _b.join()]);\n            return Object.assign(Object.assign({}, state), { publishPresence: (data) => {\n                    this._core._reactor.publishPresence(this.type, this.id, data);\n                } });\n        };\n        /**\n         * Publishes presence data to a room\n         *\n         * @see https://instantdb.com/docs/presence-and-topics\n         * @example\n         *  function App({ roomId }) {\n         *    db.room(roomType, roomId).useSyncPresence({ name, avatar, color });\n         *\n         *    // ...\n         *  }\n         */\n        this.useSyncPresence = (data, deps) => {\n            (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => this._core._reactor.joinRoom(this.id), [this.id]);\n            (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(() => {\n                return this._core._reactor.publishPresence(this.type, this.id, data);\n            }, [this.type, this.id, deps !== null && deps !== void 0 ? deps : JSON.stringify(data)]);\n        };\n        /**\n         * Manage typing indicator state\n         *\n         * @see https://instantdb.com/docs/presence-and-topics\n         * @example\n         *  function App({ roomId }) {\n         *    const {\n         *      active,\n         *      setActive,\n         *      inputProps,\n         *    } = db.room(roomType, roomId).useTypingIndicator(\"chat-input\", opts);\n         *\n         *    return <input {...inputProps} />;\n         *  }\n         */\n        this.useTypingIndicator = (inputName, opts = {}) => {\n            const timeout = (0,_useTimeout__WEBPACK_IMPORTED_MODULE_3__.useTimeout)();\n            const onservedPresence = this.usePresence({\n                keys: [inputName],\n            });\n            const active = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(() => {\n                var _a;\n                const presenceSnapshot = this._core._reactor.getPresence(this.type, this.id);\n                return (opts === null || opts === void 0 ? void 0 : opts.writeOnly)\n                    ? []\n                    : Object.values((_a = presenceSnapshot === null || presenceSnapshot === void 0 ? void 0 : presenceSnapshot.peers) !== null && _a !== void 0 ? _a : {}).filter((p) => p[inputName] === true);\n            }, [opts === null || opts === void 0 ? void 0 : opts.writeOnly, onservedPresence]);\n            const setActive = (isActive) => {\n                var _a;\n                this._core._reactor.publishPresence(this.type, this.id, {\n                    [inputName]: isActive,\n                });\n                if (!isActive)\n                    return;\n                if ((opts === null || opts === void 0 ? void 0 : opts.timeout) === null || (opts === null || opts === void 0 ? void 0 : opts.timeout) === 0)\n                    return;\n                timeout.set((_a = opts === null || opts === void 0 ? void 0 : opts.timeout) !== null && _a !== void 0 ? _a : defaultActivityStopTimeout, () => {\n                    this._core._reactor.publishPresence(this.type, this.id, {\n                        [inputName]: null,\n                    });\n                });\n            };\n            return {\n                active,\n                setActive: (a) => {\n                    setActive(a);\n                },\n                inputProps: {\n                    onKeyDown: (e) => {\n                        const isEnter = (opts === null || opts === void 0 ? void 0 : opts.stopOnEnter) && e.key === \"Enter\";\n                        const isActive = !isEnter;\n                        setActive(isActive);\n                    },\n                    onBlur: () => {\n                        setActive(false);\n                    },\n                },\n            };\n        };\n        this._core = _core;\n        this.type = type;\n        this.id = id;\n    }\n}\nconst defaultAuthState = {\n    isLoading: true,\n    user: undefined,\n    error: undefined,\n};\nclass InstantReactAbstractDatabase {\n    constructor(config, versions) {\n        this.tx = (0,_instantdb_core__WEBPACK_IMPORTED_MODULE_0__.txInit)();\n        this.getLocalId = (name) => {\n            return this._core.getLocalId(name);\n        };\n        /**\n         * Use this to write data! You can create, update, delete, and link objects\n         *\n         * @see https://instantdb.com/docs/instaml\n         *\n         * @example\n         *   // Create a new object in the `goals` namespace\n         *   const goalId = id();\n         *   db.transact(tx.goals[goalId].update({title: \"Get fit\"}))\n         *\n         *   // Update the title\n         *   db.transact(tx.goals[goalId].update({title: \"Get super fit\"}))\n         *\n         *   // Delete it\n         *   db.transact(tx.goals[goalId].delete())\n         *\n         *   // Or create an association:\n         *   todoId = id();\n         *   db.transact([\n         *    tx.todos[todoId].update({ title: 'Go on a run' }),\n         *    tx.goals[goalId].link({todos: todoId}),\n         *  ])\n         */\n        this.transact = (chunks) => {\n            return this._core.transact(chunks);\n        };\n        /**\n         * Use this to query your data!\n         *\n         * @see https://instantdb.com/docs/instaql\n         *\n         * @example\n         *  // listen to all goals\n         *  db.useQuery({ goals: {} })\n         *\n         *  // goals where the title is \"Get Fit\"\n         *  db.useQuery({ goals: { $: { where: { title: \"Get Fit\" } } } })\n         *\n         *  // all goals, _alongside_ their todos\n         *  db.useQuery({ goals: { todos: {} } })\n         *\n         *  // skip if `user` is not logged in\n         *  db.useQuery(auth.user ? { goals: {} } : null)\n         */\n        this.useQuery = (query) => {\n            return (0,_useQuery__WEBPACK_IMPORTED_MODULE_2__.useQueryInternal)(this._core, query).state;\n        };\n        /**\n         * Listen for the logged in state. This is useful\n         * for deciding when to show a login screen.\n         *\n         * Check out the docs for an example `Login` component too!\n         *\n         * @see https://instantdb.com/docs/auth\n         * @example\n         *  function App() {\n         *    const { isLoading, user, error } = db.useAuth()\n         *    if (isLoading) {\n         *      return <div>Loading...</div>\n         *    }\n         *    if (error) {\n         *      return <div>Uh oh! {error.message}</div>\n         *    }\n         *    if (user) {\n         *      return <Main user={user} />\n         *    }\n         *    return <Login />\n         *  }\n         *\n         */\n        this.useAuth = () => {\n            // We use a ref to store the result of the query.\n            // This is becuase `useSyncExternalStore` uses `Object.is`\n            // to compare the previous and next state.\n            // If we don't use a ref, the state will always be considered different, so\n            // the component will always re-render.\n            const resultCacheRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(this._core._reactor._currentUserCached);\n            // Similar to `resultCacheRef`, `useSyncExternalStore` will unsubscribe\n            // if `subscribe` changes, so we use `useCallback` to memoize the function.\n            const subscribe = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((cb) => {\n                const unsubscribe = this._core.subscribeAuth((auth) => {\n                    resultCacheRef.current = Object.assign({ isLoading: false }, auth);\n                    cb();\n                });\n                return unsubscribe;\n            }, []);\n            const state = (0,react__WEBPACK_IMPORTED_MODULE_1__.useSyncExternalStore)(subscribe, () => resultCacheRef.current, () => defaultAuthState);\n            return state;\n        };\n        /**\n         * Listen for connection status changes to Instant. Use this for things like\n         * showing connection state to users\n         *\n         * @see https://www.instantdb.com/docs/patterns#connection-status\n         * @example\n         *  function App() {\n         *    const status = db.useConnectionStatus()\n         *    const connectionState =\n         *      status === 'connecting' || status === 'opened'\n         *        ? 'authenticating'\n         *      : status === 'authenticated'\n         *        ? 'connected'\n         *      : status === 'closed'\n         *        ? 'closed'\n         *      : status === 'errored'\n         *        ? 'errored'\n         *      : 'unexpected state';\n         *\n         *    return <div>Connection state: {connectionState}</div>\n         *  }\n         */\n        this.useConnectionStatus = () => {\n            const statusRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(this._core._reactor.status);\n            const subscribe = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((cb) => {\n                const unsubscribe = this._core.subscribeConnectionStatus((newStatus) => {\n                    if (newStatus !== statusRef.current) {\n                        statusRef.current = newStatus;\n                        cb();\n                    }\n                });\n                return unsubscribe;\n            }, []);\n            const status = (0,react__WEBPACK_IMPORTED_MODULE_1__.useSyncExternalStore)(subscribe, () => statusRef.current, \n            // For SSR, always return 'connecting' as the initial state\n            () => 'connecting');\n            return status;\n        };\n        /**\n         * Use this for one-off queries.\n         * Returns local data if available, otherwise fetches from the server.\n         * Because we want to avoid stale data, this method will throw an error\n         * if the user is offline or there is no active connection to the server.\n         *\n         * @see https://instantdb.com/docs/instaql\n         *\n         * @example\n         *\n         *  const resp = await db.queryOnce({ goals: {} });\n         *  console.log(resp.data.goals)\n         */\n        this.queryOnce = (query) => {\n            return this._core.queryOnce(query);\n        };\n        this._core = (0,_instantdb_core__WEBPACK_IMPORTED_MODULE_0__.init)(config, \n        // @ts-expect-error because TS can't resolve subclass statics\n        this.constructor.Storage, \n        // @ts-expect-error because TS can't resolve subclass statics\n        this.constructor.NetworkListener, versions);\n        this.auth = this._core.auth;\n        this.storage = this._core.storage;\n    }\n    /**\n     * Obtain a handle to a room, which allows you to listen to topics and presence data\n     *\n     * If you don't provide a `type` or `id`, Instant will default to `_defaultRoomType` and `_defaultRoomId`\n     * as the room type and id, respectively.\n     *\n     * @see https://instantdb.com/docs/presence-and-topics\n     *\n     * @example\n     *  const {\n     *   useTopicEffect,\n     *   usePublishTopic,\n     *   useSyncPresence,\n     *   useTypingIndicator,\n     * } = db.room(roomType, roomId);\n     */\n    room(type = \"_defaultRoomType\", id = \"_defaultRoomId\") {\n        return new InstantReactRoom(this._core, type, id);\n    }\n}\n//# sourceMappingURL=InstantReactAbstractDatabase.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9yZWFjdC9kaXN0L21vZHVsZS9JbnN0YW50UmVhY3RBYnN0cmFjdERhdGFiYXNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQTZEO0FBQ29DO0FBQ25EO0FBQ0o7QUFDbkM7QUFDQTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixRQUFRO0FBQ25DO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksZ0RBQVM7QUFDckI7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsUUFBUTtBQUNsQztBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MscUJBQXFCLGdCQUFnQixFQUFFO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGdEQUFTO0FBQ3JCLGlDQUFpQyxrREFBVztBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixRQUFRO0FBQ25DO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwwQ0FBMEMsMEJBQTBCO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDO0FBQ3JDO0FBQ0Esc0NBQXNDLCtDQUFRO0FBQzlDO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQSxpQkFBaUI7QUFDakIsYUFBYTtBQUNiLFlBQVksZ0RBQVM7QUFDckI7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGFBQWE7QUFDYixpREFBaUQsWUFBWTtBQUM3RDtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsUUFBUTtBQUNuQywwREFBMEQscUJBQXFCO0FBQy9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGdEQUFTO0FBQ3JCLFlBQVksZ0RBQVM7QUFDckI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLFFBQVE7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQSw2QkFBNkIsZUFBZTtBQUM1QztBQUNBO0FBQ0EsdURBQXVEO0FBQ3ZELDRCQUE0Qix1REFBVTtBQUN0QztBQUNBO0FBQ0EsYUFBYTtBQUNiLDJCQUEyQiw4Q0FBTztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHlLQUF5SztBQUN6SyxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZTtBQUNmO0FBQ0Esa0JBQWtCLHVEQUFNO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0QsaUJBQWlCO0FBQ25FO0FBQ0E7QUFDQSxrREFBa0QsdUJBQXVCO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLHNCQUFzQjtBQUM5RCxxQ0FBcUMsY0FBYztBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsV0FBVztBQUNyQztBQUNBO0FBQ0EsMEJBQTBCLFNBQVMsS0FBSyxTQUFTLHdCQUF3QjtBQUN6RTtBQUNBO0FBQ0EsMEJBQTBCLFNBQVMsYUFBYTtBQUNoRDtBQUNBO0FBQ0Esc0NBQXNDLFlBQVk7QUFDbEQ7QUFDQTtBQUNBLG1CQUFtQiwyREFBZ0I7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IseUJBQXlCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLGNBQWM7QUFDbEQ7QUFDQTtBQUNBLG1DQUFtQyxNQUFNO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsNkNBQU07QUFDekM7QUFDQTtBQUNBLDhCQUE4QixrREFBVztBQUN6QztBQUNBLDZEQUE2RCxrQkFBa0I7QUFDL0U7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxhQUFhO0FBQ2IsMEJBQTBCLDJEQUFvQjtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsZ0JBQWdCO0FBQzdEO0FBQ0E7QUFDQTtBQUNBLDhCQUE4Qiw2Q0FBTTtBQUNwQyw4QkFBOEIsa0RBQVc7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGFBQWE7QUFDYiwyQkFBMkIsMkRBQW9CO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsV0FBVztBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHFEQUFTO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcREVMTFxcRG9jdW1lbnRzXFxlbWFpbC1jaGF0LWludGVyZmFjZVxcbm9kZV9tb2R1bGVzXFxAaW5zdGFudGRiXFxyZWFjdFxcZGlzdFxcbW9kdWxlXFxJbnN0YW50UmVhY3RBYnN0cmFjdERhdGFiYXNlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHR4SW5pdCwgaW5pdCBhcyBjb3JlX2luaXQsIH0gZnJvbSBcIkBpbnN0YW50ZGIvY29yZVwiO1xuaW1wb3J0IHsgdXNlQ2FsbGJhY2ssIHVzZUVmZmVjdCwgdXNlTWVtbywgdXNlUmVmLCB1c2VTdGF0ZSwgdXNlU3luY0V4dGVybmFsU3RvcmUsIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyB1c2VRdWVyeUludGVybmFsIH0gZnJvbSBcIi4vdXNlUXVlcnlcIjtcbmltcG9ydCB7IHVzZVRpbWVvdXQgfSBmcm9tIFwiLi91c2VUaW1lb3V0XCI7XG5leHBvcnQgY29uc3QgZGVmYXVsdEFjdGl2aXR5U3RvcFRpbWVvdXQgPSAxMDAwO1xuZXhwb3J0IGNsYXNzIEluc3RhbnRSZWFjdFJvb20ge1xuICAgIGNvbnN0cnVjdG9yKF9jb3JlLCB0eXBlLCBpZCkge1xuICAgICAgICAvKipcbiAgICAgICAgICogTGlzdGVuIGZvciBicm9hZGNhc3RlZCBldmVudHMgZ2l2ZW4gYSByb29tIGFuZCB0b3BpYy5cbiAgICAgICAgICpcbiAgICAgICAgICogQHNlZSBodHRwczovL2luc3RhbnRkYi5jb20vZG9jcy9wcmVzZW5jZS1hbmQtdG9waWNzXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqICBmdW5jdGlvbiBBcHAoeyByb29tSWQgfSkge1xuICAgICAgICAgKiAgICBkYi5yb29tKHJvb21UeXBlLCByb29tSWQpLnVzZVRvcGljRWZmZWN0KFwiY2hhdFwiLCAobWVzc2FnZSwgcGVlcikgPT4ge1xuICAgICAgICAgKiAgICAgIGNvbnNvbGUubG9nKFwiTmV3IG1lc3NhZ2VcIiwgbWVzc2FnZSwgJ2Zyb20nLCBwZWVyLm5hbWUpO1xuICAgICAgICAgKiAgICB9KTtcbiAgICAgICAgICpcbiAgICAgICAgICogICAgLy8gLi4uXG4gICAgICAgICAqICB9XG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLnVzZVRvcGljRWZmZWN0ID0gKHRvcGljLCBvbkV2ZW50KSA9PiB7XG4gICAgICAgICAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHVuc3ViID0gdGhpcy5fY29yZS5fcmVhY3Rvci5zdWJzY3JpYmVUb3BpYyh0aGlzLmlkLCB0b3BpYywgKGV2ZW50LCBwZWVyKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIG9uRXZlbnQoZXZlbnQsIHBlZXIpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybiB1bnN1YjtcbiAgICAgICAgICAgIH0sIFt0aGlzLmlkLCB0b3BpY10pO1xuICAgICAgICB9O1xuICAgICAgICAvKipcbiAgICAgICAgICogQnJvYWRjYXN0IGFuIGV2ZW50IHRvIGEgcm9vbS5cbiAgICAgICAgICpcbiAgICAgICAgICogQHNlZSBodHRwczovL2luc3RhbnRkYi5jb20vZG9jcy9wcmVzZW5jZS1hbmQtdG9waWNzXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqIGZ1bmN0aW9uIEFwcCh7IHJvb21JZCB9KSB7XG4gICAgICAgICAqICAgY29uc3QgcHVibGlzaFRvcGljID0gZGIucm9vbShyb29tVHlwZSwgcm9vbUlkKS51c2VQdWJsaXNoVG9waWMoXCJjbGlja3NcIik7XG4gICAgICAgICAqXG4gICAgICAgICAqICAgcmV0dXJuIChcbiAgICAgICAgICogICAgIDxidXR0b24gb25DbGljaz17KCkgPT4gcHVibGlzaFRvcGljKHsgdHM6IERhdGUubm93KCkgfSl9PkNsaWNrIG1lPC9idXR0b24+XG4gICAgICAgICAqICAgKTtcbiAgICAgICAgICogfVxuICAgICAgICAgKlxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy51c2VQdWJsaXNoVG9waWMgPSAodG9waWMpID0+IHtcbiAgICAgICAgICAgIHVzZUVmZmVjdCgoKSA9PiB0aGlzLl9jb3JlLl9yZWFjdG9yLmpvaW5Sb29tKHRoaXMuaWQpLCBbdGhpcy5pZF0pO1xuICAgICAgICAgICAgY29uc3QgcHVibGlzaFRvcGljID0gdXNlQ2FsbGJhY2soKGRhdGEpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLl9jb3JlLl9yZWFjdG9yLnB1Ymxpc2hUb3BpYyh7XG4gICAgICAgICAgICAgICAgICAgIHJvb21UeXBlOiB0aGlzLnR5cGUsXG4gICAgICAgICAgICAgICAgICAgIHJvb21JZDogdGhpcy5pZCxcbiAgICAgICAgICAgICAgICAgICAgdG9waWMsXG4gICAgICAgICAgICAgICAgICAgIGRhdGEsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LCBbdGhpcy5pZCwgdG9waWNdKTtcbiAgICAgICAgICAgIHJldHVybiBwdWJsaXNoVG9waWM7XG4gICAgICAgIH07XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBMaXN0ZW4gZm9yIHBlZXIncyBwcmVzZW5jZSBkYXRhIGluIGEgcm9vbSwgYW5kIHB1Ymxpc2ggdGhlIGN1cnJlbnQgdXNlcidzIHByZXNlbmNlLlxuICAgICAgICAgKlxuICAgICAgICAgKiBAc2VlIGh0dHBzOi8vaW5zdGFudGRiLmNvbS9kb2NzL3ByZXNlbmNlLWFuZC10b3BpY3NcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogIGZ1bmN0aW9uIEFwcCh7IHJvb21JZCB9KSB7XG4gICAgICAgICAqICAgIGNvbnN0IHtcbiAgICAgICAgICogICAgICBwZWVycyxcbiAgICAgICAgICogICAgICBwdWJsaXNoUHJlc2VuY2VcbiAgICAgICAgICogICAgfSA9IGRiLnJvb20ocm9vbVR5cGUsIHJvb21JZCkudXNlUHJlc2VuY2UoeyBrZXlzOiBbXCJuYW1lXCIsIFwiYXZhdGFyXCJdIH0pO1xuICAgICAgICAgKlxuICAgICAgICAgKiAgICAvLyAuLi5cbiAgICAgICAgICogIH1cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMudXNlUHJlc2VuY2UgPSAob3B0cyA9IHt9KSA9PiB7XG4gICAgICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICAgICAgY29uc3QgW3N0YXRlLCBzZXRTdGF0ZV0gPSB1c2VTdGF0ZSgoKSA9PiB7XG4gICAgICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgICAgIHJldHVybiAoKF9hID0gdGhpcy5fY29yZS5fcmVhY3Rvci5nZXRQcmVzZW5jZSh0aGlzLnR5cGUsIHRoaXMuaWQsIG9wdHMpKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiB7XG4gICAgICAgICAgICAgICAgICAgIHBlZXJzOiB7fSxcbiAgICAgICAgICAgICAgICAgICAgaXNMb2FkaW5nOiB0cnVlLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHVuc3ViID0gdGhpcy5fY29yZS5fcmVhY3Rvci5zdWJzY3JpYmVQcmVzZW5jZSh0aGlzLnR5cGUsIHRoaXMuaWQsIG9wdHMsIChkYXRhKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHNldFN0YXRlKGRhdGEpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybiB1bnN1YjtcbiAgICAgICAgICAgIH0sIFt0aGlzLmlkLCBvcHRzLnVzZXIsIChfYSA9IG9wdHMucGVlcnMpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5qb2luKCksIChfYiA9IG9wdHMua2V5cykgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmpvaW4oKV0pO1xuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUpLCB7IHB1Ymxpc2hQcmVzZW5jZTogKGRhdGEpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fY29yZS5fcmVhY3Rvci5wdWJsaXNoUHJlc2VuY2UodGhpcy50eXBlLCB0aGlzLmlkLCBkYXRhKTtcbiAgICAgICAgICAgICAgICB9IH0pO1xuICAgICAgICB9O1xuICAgICAgICAvKipcbiAgICAgICAgICogUHVibGlzaGVzIHByZXNlbmNlIGRhdGEgdG8gYSByb29tXG4gICAgICAgICAqXG4gICAgICAgICAqIEBzZWUgaHR0cHM6Ly9pbnN0YW50ZGIuY29tL2RvY3MvcHJlc2VuY2UtYW5kLXRvcGljc1xuICAgICAgICAgKiBAZXhhbXBsZVxuICAgICAgICAgKiAgZnVuY3Rpb24gQXBwKHsgcm9vbUlkIH0pIHtcbiAgICAgICAgICogICAgZGIucm9vbShyb29tVHlwZSwgcm9vbUlkKS51c2VTeW5jUHJlc2VuY2UoeyBuYW1lLCBhdmF0YXIsIGNvbG9yIH0pO1xuICAgICAgICAgKlxuICAgICAgICAgKiAgICAvLyAuLi5cbiAgICAgICAgICogIH1cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMudXNlU3luY1ByZXNlbmNlID0gKGRhdGEsIGRlcHMpID0+IHtcbiAgICAgICAgICAgIHVzZUVmZmVjdCgoKSA9PiB0aGlzLl9jb3JlLl9yZWFjdG9yLmpvaW5Sb29tKHRoaXMuaWQpLCBbdGhpcy5pZF0pO1xuICAgICAgICAgICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fY29yZS5fcmVhY3Rvci5wdWJsaXNoUHJlc2VuY2UodGhpcy50eXBlLCB0aGlzLmlkLCBkYXRhKTtcbiAgICAgICAgICAgIH0sIFt0aGlzLnR5cGUsIHRoaXMuaWQsIGRlcHMgIT09IG51bGwgJiYgZGVwcyAhPT0gdm9pZCAwID8gZGVwcyA6IEpTT04uc3RyaW5naWZ5KGRhdGEpXSk7XG4gICAgICAgIH07XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBNYW5hZ2UgdHlwaW5nIGluZGljYXRvciBzdGF0ZVxuICAgICAgICAgKlxuICAgICAgICAgKiBAc2VlIGh0dHBzOi8vaW5zdGFudGRiLmNvbS9kb2NzL3ByZXNlbmNlLWFuZC10b3BpY3NcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogIGZ1bmN0aW9uIEFwcCh7IHJvb21JZCB9KSB7XG4gICAgICAgICAqICAgIGNvbnN0IHtcbiAgICAgICAgICogICAgICBhY3RpdmUsXG4gICAgICAgICAqICAgICAgc2V0QWN0aXZlLFxuICAgICAgICAgKiAgICAgIGlucHV0UHJvcHMsXG4gICAgICAgICAqICAgIH0gPSBkYi5yb29tKHJvb21UeXBlLCByb29tSWQpLnVzZVR5cGluZ0luZGljYXRvcihcImNoYXQtaW5wdXRcIiwgb3B0cyk7XG4gICAgICAgICAqXG4gICAgICAgICAqICAgIHJldHVybiA8aW5wdXQgey4uLmlucHV0UHJvcHN9IC8+O1xuICAgICAgICAgKiAgfVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy51c2VUeXBpbmdJbmRpY2F0b3IgPSAoaW5wdXROYW1lLCBvcHRzID0ge30pID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHRpbWVvdXQgPSB1c2VUaW1lb3V0KCk7XG4gICAgICAgICAgICBjb25zdCBvbnNlcnZlZFByZXNlbmNlID0gdGhpcy51c2VQcmVzZW5jZSh7XG4gICAgICAgICAgICAgICAga2V5czogW2lucHV0TmFtZV0sXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGNvbnN0IGFjdGl2ZSA9IHVzZU1lbW8oKCkgPT4ge1xuICAgICAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgICAgICBjb25zdCBwcmVzZW5jZVNuYXBzaG90ID0gdGhpcy5fY29yZS5fcmVhY3Rvci5nZXRQcmVzZW5jZSh0aGlzLnR5cGUsIHRoaXMuaWQpO1xuICAgICAgICAgICAgICAgIHJldHVybiAob3B0cyA9PT0gbnVsbCB8fCBvcHRzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRzLndyaXRlT25seSlcbiAgICAgICAgICAgICAgICAgICAgPyBbXVxuICAgICAgICAgICAgICAgICAgICA6IE9iamVjdC52YWx1ZXMoKF9hID0gcHJlc2VuY2VTbmFwc2hvdCA9PT0gbnVsbCB8fCBwcmVzZW5jZVNuYXBzaG90ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBwcmVzZW5jZVNuYXBzaG90LnBlZXJzKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiB7fSkuZmlsdGVyKChwKSA9PiBwW2lucHV0TmFtZV0gPT09IHRydWUpO1xuICAgICAgICAgICAgfSwgW29wdHMgPT09IG51bGwgfHwgb3B0cyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0cy53cml0ZU9ubHksIG9uc2VydmVkUHJlc2VuY2VdKTtcbiAgICAgICAgICAgIGNvbnN0IHNldEFjdGl2ZSA9IChpc0FjdGl2ZSkgPT4ge1xuICAgICAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgICAgICB0aGlzLl9jb3JlLl9yZWFjdG9yLnB1Ymxpc2hQcmVzZW5jZSh0aGlzLnR5cGUsIHRoaXMuaWQsIHtcbiAgICAgICAgICAgICAgICAgICAgW2lucHV0TmFtZV06IGlzQWN0aXZlLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGlmICghaXNBY3RpdmUpXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICBpZiAoKG9wdHMgPT09IG51bGwgfHwgb3B0cyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0cy50aW1lb3V0KSA9PT0gbnVsbCB8fCAob3B0cyA9PT0gbnVsbCB8fCBvcHRzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRzLnRpbWVvdXQpID09PSAwKVxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgdGltZW91dC5zZXQoKF9hID0gb3B0cyA9PT0gbnVsbCB8fCBvcHRzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRzLnRpbWVvdXQpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGRlZmF1bHRBY3Rpdml0eVN0b3BUaW1lb3V0LCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2NvcmUuX3JlYWN0b3IucHVibGlzaFByZXNlbmNlKHRoaXMudHlwZSwgdGhpcy5pZCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgW2lucHV0TmFtZV06IG51bGwsXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgYWN0aXZlLFxuICAgICAgICAgICAgICAgIHNldEFjdGl2ZTogKGEpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgc2V0QWN0aXZlKGEpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgaW5wdXRQcm9wczoge1xuICAgICAgICAgICAgICAgICAgICBvbktleURvd246IChlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBpc0VudGVyID0gKG9wdHMgPT09IG51bGwgfHwgb3B0cyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0cy5zdG9wT25FbnRlcikgJiYgZS5rZXkgPT09IFwiRW50ZXJcIjtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGlzQWN0aXZlID0gIWlzRW50ZXI7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRBY3RpdmUoaXNBY3RpdmUpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBvbkJsdXI6ICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldEFjdGl2ZShmYWxzZSk7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuX2NvcmUgPSBfY29yZTtcbiAgICAgICAgdGhpcy50eXBlID0gdHlwZTtcbiAgICAgICAgdGhpcy5pZCA9IGlkO1xuICAgIH1cbn1cbmNvbnN0IGRlZmF1bHRBdXRoU3RhdGUgPSB7XG4gICAgaXNMb2FkaW5nOiB0cnVlLFxuICAgIHVzZXI6IHVuZGVmaW5lZCxcbiAgICBlcnJvcjogdW5kZWZpbmVkLFxufTtcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEluc3RhbnRSZWFjdEFic3RyYWN0RGF0YWJhc2Uge1xuICAgIGNvbnN0cnVjdG9yKGNvbmZpZywgdmVyc2lvbnMpIHtcbiAgICAgICAgdGhpcy50eCA9IHR4SW5pdCgpO1xuICAgICAgICB0aGlzLmdldExvY2FsSWQgPSAobmFtZSkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2NvcmUuZ2V0TG9jYWxJZChuYW1lKTtcbiAgICAgICAgfTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIFVzZSB0aGlzIHRvIHdyaXRlIGRhdGEhIFlvdSBjYW4gY3JlYXRlLCB1cGRhdGUsIGRlbGV0ZSwgYW5kIGxpbmsgb2JqZWN0c1xuICAgICAgICAgKlxuICAgICAgICAgKiBAc2VlIGh0dHBzOi8vaW5zdGFudGRiLmNvbS9kb2NzL2luc3RhbWxcbiAgICAgICAgICpcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogICAvLyBDcmVhdGUgYSBuZXcgb2JqZWN0IGluIHRoZSBgZ29hbHNgIG5hbWVzcGFjZVxuICAgICAgICAgKiAgIGNvbnN0IGdvYWxJZCA9IGlkKCk7XG4gICAgICAgICAqICAgZGIudHJhbnNhY3QodHguZ29hbHNbZ29hbElkXS51cGRhdGUoe3RpdGxlOiBcIkdldCBmaXRcIn0pKVxuICAgICAgICAgKlxuICAgICAgICAgKiAgIC8vIFVwZGF0ZSB0aGUgdGl0bGVcbiAgICAgICAgICogICBkYi50cmFuc2FjdCh0eC5nb2Fsc1tnb2FsSWRdLnVwZGF0ZSh7dGl0bGU6IFwiR2V0IHN1cGVyIGZpdFwifSkpXG4gICAgICAgICAqXG4gICAgICAgICAqICAgLy8gRGVsZXRlIGl0XG4gICAgICAgICAqICAgZGIudHJhbnNhY3QodHguZ29hbHNbZ29hbElkXS5kZWxldGUoKSlcbiAgICAgICAgICpcbiAgICAgICAgICogICAvLyBPciBjcmVhdGUgYW4gYXNzb2NpYXRpb246XG4gICAgICAgICAqICAgdG9kb0lkID0gaWQoKTtcbiAgICAgICAgICogICBkYi50cmFuc2FjdChbXG4gICAgICAgICAqICAgIHR4LnRvZG9zW3RvZG9JZF0udXBkYXRlKHsgdGl0bGU6ICdHbyBvbiBhIHJ1bicgfSksXG4gICAgICAgICAqICAgIHR4LmdvYWxzW2dvYWxJZF0ubGluayh7dG9kb3M6IHRvZG9JZH0pLFxuICAgICAgICAgKiAgXSlcbiAgICAgICAgICovXG4gICAgICAgIHRoaXMudHJhbnNhY3QgPSAoY2h1bmtzKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fY29yZS50cmFuc2FjdChjaHVua3MpO1xuICAgICAgICB9O1xuICAgICAgICAvKipcbiAgICAgICAgICogVXNlIHRoaXMgdG8gcXVlcnkgeW91ciBkYXRhIVxuICAgICAgICAgKlxuICAgICAgICAgKiBAc2VlIGh0dHBzOi8vaW5zdGFudGRiLmNvbS9kb2NzL2luc3RhcWxcbiAgICAgICAgICpcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogIC8vIGxpc3RlbiB0byBhbGwgZ29hbHNcbiAgICAgICAgICogIGRiLnVzZVF1ZXJ5KHsgZ29hbHM6IHt9IH0pXG4gICAgICAgICAqXG4gICAgICAgICAqICAvLyBnb2FscyB3aGVyZSB0aGUgdGl0bGUgaXMgXCJHZXQgRml0XCJcbiAgICAgICAgICogIGRiLnVzZVF1ZXJ5KHsgZ29hbHM6IHsgJDogeyB3aGVyZTogeyB0aXRsZTogXCJHZXQgRml0XCIgfSB9IH0gfSlcbiAgICAgICAgICpcbiAgICAgICAgICogIC8vIGFsbCBnb2FscywgX2Fsb25nc2lkZV8gdGhlaXIgdG9kb3NcbiAgICAgICAgICogIGRiLnVzZVF1ZXJ5KHsgZ29hbHM6IHsgdG9kb3M6IHt9IH0gfSlcbiAgICAgICAgICpcbiAgICAgICAgICogIC8vIHNraXAgaWYgYHVzZXJgIGlzIG5vdCBsb2dnZWQgaW5cbiAgICAgICAgICogIGRiLnVzZVF1ZXJ5KGF1dGgudXNlciA/IHsgZ29hbHM6IHt9IH0gOiBudWxsKVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy51c2VRdWVyeSA9IChxdWVyeSkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHVzZVF1ZXJ5SW50ZXJuYWwodGhpcy5fY29yZSwgcXVlcnkpLnN0YXRlO1xuICAgICAgICB9O1xuICAgICAgICAvKipcbiAgICAgICAgICogTGlzdGVuIGZvciB0aGUgbG9nZ2VkIGluIHN0YXRlLiBUaGlzIGlzIHVzZWZ1bFxuICAgICAgICAgKiBmb3IgZGVjaWRpbmcgd2hlbiB0byBzaG93IGEgbG9naW4gc2NyZWVuLlxuICAgICAgICAgKlxuICAgICAgICAgKiBDaGVjayBvdXQgdGhlIGRvY3MgZm9yIGFuIGV4YW1wbGUgYExvZ2luYCBjb21wb25lbnQgdG9vIVxuICAgICAgICAgKlxuICAgICAgICAgKiBAc2VlIGh0dHBzOi8vaW5zdGFudGRiLmNvbS9kb2NzL2F1dGhcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogIGZ1bmN0aW9uIEFwcCgpIHtcbiAgICAgICAgICogICAgY29uc3QgeyBpc0xvYWRpbmcsIHVzZXIsIGVycm9yIH0gPSBkYi51c2VBdXRoKClcbiAgICAgICAgICogICAgaWYgKGlzTG9hZGluZykge1xuICAgICAgICAgKiAgICAgIHJldHVybiA8ZGl2PkxvYWRpbmcuLi48L2Rpdj5cbiAgICAgICAgICogICAgfVxuICAgICAgICAgKiAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICogICAgICByZXR1cm4gPGRpdj5VaCBvaCEge2Vycm9yLm1lc3NhZ2V9PC9kaXY+XG4gICAgICAgICAqICAgIH1cbiAgICAgICAgICogICAgaWYgKHVzZXIpIHtcbiAgICAgICAgICogICAgICByZXR1cm4gPE1haW4gdXNlcj17dXNlcn0gLz5cbiAgICAgICAgICogICAgfVxuICAgICAgICAgKiAgICByZXR1cm4gPExvZ2luIC8+XG4gICAgICAgICAqICB9XG4gICAgICAgICAqXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLnVzZUF1dGggPSAoKSA9PiB7XG4gICAgICAgICAgICAvLyBXZSB1c2UgYSByZWYgdG8gc3RvcmUgdGhlIHJlc3VsdCBvZiB0aGUgcXVlcnkuXG4gICAgICAgICAgICAvLyBUaGlzIGlzIGJlY3Vhc2UgYHVzZVN5bmNFeHRlcm5hbFN0b3JlYCB1c2VzIGBPYmplY3QuaXNgXG4gICAgICAgICAgICAvLyB0byBjb21wYXJlIHRoZSBwcmV2aW91cyBhbmQgbmV4dCBzdGF0ZS5cbiAgICAgICAgICAgIC8vIElmIHdlIGRvbid0IHVzZSBhIHJlZiwgdGhlIHN0YXRlIHdpbGwgYWx3YXlzIGJlIGNvbnNpZGVyZWQgZGlmZmVyZW50LCBzb1xuICAgICAgICAgICAgLy8gdGhlIGNvbXBvbmVudCB3aWxsIGFsd2F5cyByZS1yZW5kZXIuXG4gICAgICAgICAgICBjb25zdCByZXN1bHRDYWNoZVJlZiA9IHVzZVJlZih0aGlzLl9jb3JlLl9yZWFjdG9yLl9jdXJyZW50VXNlckNhY2hlZCk7XG4gICAgICAgICAgICAvLyBTaW1pbGFyIHRvIGByZXN1bHRDYWNoZVJlZmAsIGB1c2VTeW5jRXh0ZXJuYWxTdG9yZWAgd2lsbCB1bnN1YnNjcmliZVxuICAgICAgICAgICAgLy8gaWYgYHN1YnNjcmliZWAgY2hhbmdlcywgc28gd2UgdXNlIGB1c2VDYWxsYmFja2AgdG8gbWVtb2l6ZSB0aGUgZnVuY3Rpb24uXG4gICAgICAgICAgICBjb25zdCBzdWJzY3JpYmUgPSB1c2VDYWxsYmFjaygoY2IpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCB1bnN1YnNjcmliZSA9IHRoaXMuX2NvcmUuc3Vic2NyaWJlQXV0aCgoYXV0aCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZXN1bHRDYWNoZVJlZi5jdXJyZW50ID0gT2JqZWN0LmFzc2lnbih7IGlzTG9hZGluZzogZmFsc2UgfSwgYXV0aCk7XG4gICAgICAgICAgICAgICAgICAgIGNiKCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHVuc3Vic2NyaWJlO1xuICAgICAgICAgICAgfSwgW10pO1xuICAgICAgICAgICAgY29uc3Qgc3RhdGUgPSB1c2VTeW5jRXh0ZXJuYWxTdG9yZShzdWJzY3JpYmUsICgpID0+IHJlc3VsdENhY2hlUmVmLmN1cnJlbnQsICgpID0+IGRlZmF1bHRBdXRoU3RhdGUpO1xuICAgICAgICAgICAgcmV0dXJuIHN0YXRlO1xuICAgICAgICB9O1xuICAgICAgICAvKipcbiAgICAgICAgICogTGlzdGVuIGZvciBjb25uZWN0aW9uIHN0YXR1cyBjaGFuZ2VzIHRvIEluc3RhbnQuIFVzZSB0aGlzIGZvciB0aGluZ3MgbGlrZVxuICAgICAgICAgKiBzaG93aW5nIGNvbm5lY3Rpb24gc3RhdGUgdG8gdXNlcnNcbiAgICAgICAgICpcbiAgICAgICAgICogQHNlZSBodHRwczovL3d3dy5pbnN0YW50ZGIuY29tL2RvY3MvcGF0dGVybnMjY29ubmVjdGlvbi1zdGF0dXNcbiAgICAgICAgICogQGV4YW1wbGVcbiAgICAgICAgICogIGZ1bmN0aW9uIEFwcCgpIHtcbiAgICAgICAgICogICAgY29uc3Qgc3RhdHVzID0gZGIudXNlQ29ubmVjdGlvblN0YXR1cygpXG4gICAgICAgICAqICAgIGNvbnN0IGNvbm5lY3Rpb25TdGF0ZSA9XG4gICAgICAgICAqICAgICAgc3RhdHVzID09PSAnY29ubmVjdGluZycgfHwgc3RhdHVzID09PSAnb3BlbmVkJ1xuICAgICAgICAgKiAgICAgICAgPyAnYXV0aGVudGljYXRpbmcnXG4gICAgICAgICAqICAgICAgOiBzdGF0dXMgPT09ICdhdXRoZW50aWNhdGVkJ1xuICAgICAgICAgKiAgICAgICAgPyAnY29ubmVjdGVkJ1xuICAgICAgICAgKiAgICAgIDogc3RhdHVzID09PSAnY2xvc2VkJ1xuICAgICAgICAgKiAgICAgICAgPyAnY2xvc2VkJ1xuICAgICAgICAgKiAgICAgIDogc3RhdHVzID09PSAnZXJyb3JlZCdcbiAgICAgICAgICogICAgICAgID8gJ2Vycm9yZWQnXG4gICAgICAgICAqICAgICAgOiAndW5leHBlY3RlZCBzdGF0ZSc7XG4gICAgICAgICAqXG4gICAgICAgICAqICAgIHJldHVybiA8ZGl2PkNvbm5lY3Rpb24gc3RhdGU6IHtjb25uZWN0aW9uU3RhdGV9PC9kaXY+XG4gICAgICAgICAqICB9XG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLnVzZUNvbm5lY3Rpb25TdGF0dXMgPSAoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBzdGF0dXNSZWYgPSB1c2VSZWYodGhpcy5fY29yZS5fcmVhY3Rvci5zdGF0dXMpO1xuICAgICAgICAgICAgY29uc3Qgc3Vic2NyaWJlID0gdXNlQ2FsbGJhY2soKGNiKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgdW5zdWJzY3JpYmUgPSB0aGlzLl9jb3JlLnN1YnNjcmliZUNvbm5lY3Rpb25TdGF0dXMoKG5ld1N0YXR1cykgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAobmV3U3RhdHVzICE9PSBzdGF0dXNSZWYuY3VycmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzUmVmLmN1cnJlbnQgPSBuZXdTdGF0dXM7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYigpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHVuc3Vic2NyaWJlO1xuICAgICAgICAgICAgfSwgW10pO1xuICAgICAgICAgICAgY29uc3Qgc3RhdHVzID0gdXNlU3luY0V4dGVybmFsU3RvcmUoc3Vic2NyaWJlLCAoKSA9PiBzdGF0dXNSZWYuY3VycmVudCwgXG4gICAgICAgICAgICAvLyBGb3IgU1NSLCBhbHdheXMgcmV0dXJuICdjb25uZWN0aW5nJyBhcyB0aGUgaW5pdGlhbCBzdGF0ZVxuICAgICAgICAgICAgKCkgPT4gJ2Nvbm5lY3RpbmcnKTtcbiAgICAgICAgICAgIHJldHVybiBzdGF0dXM7XG4gICAgICAgIH07XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBVc2UgdGhpcyBmb3Igb25lLW9mZiBxdWVyaWVzLlxuICAgICAgICAgKiBSZXR1cm5zIGxvY2FsIGRhdGEgaWYgYXZhaWxhYmxlLCBvdGhlcndpc2UgZmV0Y2hlcyBmcm9tIHRoZSBzZXJ2ZXIuXG4gICAgICAgICAqIEJlY2F1c2Ugd2Ugd2FudCB0byBhdm9pZCBzdGFsZSBkYXRhLCB0aGlzIG1ldGhvZCB3aWxsIHRocm93IGFuIGVycm9yXG4gICAgICAgICAqIGlmIHRoZSB1c2VyIGlzIG9mZmxpbmUgb3IgdGhlcmUgaXMgbm8gYWN0aXZlIGNvbm5lY3Rpb24gdG8gdGhlIHNlcnZlci5cbiAgICAgICAgICpcbiAgICAgICAgICogQHNlZSBodHRwczovL2luc3RhbnRkYi5jb20vZG9jcy9pbnN0YXFsXG4gICAgICAgICAqXG4gICAgICAgICAqIEBleGFtcGxlXG4gICAgICAgICAqXG4gICAgICAgICAqICBjb25zdCByZXNwID0gYXdhaXQgZGIucXVlcnlPbmNlKHsgZ29hbHM6IHt9IH0pO1xuICAgICAgICAgKiAgY29uc29sZS5sb2cocmVzcC5kYXRhLmdvYWxzKVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5xdWVyeU9uY2UgPSAocXVlcnkpID0+IHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9jb3JlLnF1ZXJ5T25jZShxdWVyeSk7XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuX2NvcmUgPSBjb3JlX2luaXQoY29uZmlnLCBcbiAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciBiZWNhdXNlIFRTIGNhbid0IHJlc29sdmUgc3ViY2xhc3Mgc3RhdGljc1xuICAgICAgICB0aGlzLmNvbnN0cnVjdG9yLlN0b3JhZ2UsIFxuICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIGJlY2F1c2UgVFMgY2FuJ3QgcmVzb2x2ZSBzdWJjbGFzcyBzdGF0aWNzXG4gICAgICAgIHRoaXMuY29uc3RydWN0b3IuTmV0d29ya0xpc3RlbmVyLCB2ZXJzaW9ucyk7XG4gICAgICAgIHRoaXMuYXV0aCA9IHRoaXMuX2NvcmUuYXV0aDtcbiAgICAgICAgdGhpcy5zdG9yYWdlID0gdGhpcy5fY29yZS5zdG9yYWdlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBPYnRhaW4gYSBoYW5kbGUgdG8gYSByb29tLCB3aGljaCBhbGxvd3MgeW91IHRvIGxpc3RlbiB0byB0b3BpY3MgYW5kIHByZXNlbmNlIGRhdGFcbiAgICAgKlxuICAgICAqIElmIHlvdSBkb24ndCBwcm92aWRlIGEgYHR5cGVgIG9yIGBpZGAsIEluc3RhbnQgd2lsbCBkZWZhdWx0IHRvIGBfZGVmYXVsdFJvb21UeXBlYCBhbmQgYF9kZWZhdWx0Um9vbUlkYFxuICAgICAqIGFzIHRoZSByb29tIHR5cGUgYW5kIGlkLCByZXNwZWN0aXZlbHkuXG4gICAgICpcbiAgICAgKiBAc2VlIGh0dHBzOi8vaW5zdGFudGRiLmNvbS9kb2NzL3ByZXNlbmNlLWFuZC10b3BpY3NcbiAgICAgKlxuICAgICAqIEBleGFtcGxlXG4gICAgICogIGNvbnN0IHtcbiAgICAgKiAgIHVzZVRvcGljRWZmZWN0LFxuICAgICAqICAgdXNlUHVibGlzaFRvcGljLFxuICAgICAqICAgdXNlU3luY1ByZXNlbmNlLFxuICAgICAqICAgdXNlVHlwaW5nSW5kaWNhdG9yLFxuICAgICAqIH0gPSBkYi5yb29tKHJvb21UeXBlLCByb29tSWQpO1xuICAgICAqL1xuICAgIHJvb20odHlwZSA9IFwiX2RlZmF1bHRSb29tVHlwZVwiLCBpZCA9IFwiX2RlZmF1bHRSb29tSWRcIikge1xuICAgICAgICByZXR1cm4gbmV3IEluc3RhbnRSZWFjdFJvb20odGhpcy5fY29yZSwgdHlwZSwgaWQpO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUluc3RhbnRSZWFjdEFic3RyYWN0RGF0YWJhc2UuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/react/dist/module/InstantReactAbstractDatabase.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/react/dist/module/InstantReactWebDatabase.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@instantdb/react/dist/module/InstantReactWebDatabase.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ InstantReactWebDatabase)\n/* harmony export */ });\n/* harmony import */ var _InstantReactAbstractDatabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./InstantReactAbstractDatabase */ \"(ssr)/./node_modules/@instantdb/react/dist/module/InstantReactAbstractDatabase.js\");\n\nclass InstantReactWebDatabase extends _InstantReactAbstractDatabase__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n}\n//# sourceMappingURL=InstantReactWebDatabase.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9yZWFjdC9kaXN0L21vZHVsZS9JbnN0YW50UmVhY3RXZWJEYXRhYmFzZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwRTtBQUMzRCxzQ0FBc0MscUVBQTRCO0FBQ2pGO0FBQ0EiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcREVMTFxcRG9jdW1lbnRzXFxlbWFpbC1jaGF0LWludGVyZmFjZVxcbm9kZV9tb2R1bGVzXFxAaW5zdGFudGRiXFxyZWFjdFxcZGlzdFxcbW9kdWxlXFxJbnN0YW50UmVhY3RXZWJEYXRhYmFzZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgSW5zdGFudFJlYWN0QWJzdHJhY3REYXRhYmFzZSBmcm9tIFwiLi9JbnN0YW50UmVhY3RBYnN0cmFjdERhdGFiYXNlXCI7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBJbnN0YW50UmVhY3RXZWJEYXRhYmFzZSBleHRlbmRzIEluc3RhbnRSZWFjdEFic3RyYWN0RGF0YWJhc2Uge1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9SW5zdGFudFJlYWN0V2ViRGF0YWJhc2UuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/react/dist/module/InstantReactWebDatabase.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/react/dist/module/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@instantdb/react/dist/module/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Cursors: () => (/* reexport safe */ _Cursors__WEBPACK_IMPORTED_MODULE_4__.Cursors),\n/* harmony export */   InstantReactAbstractDatabase: () => (/* reexport safe */ _InstantReactAbstractDatabase__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   InstantReactWebDatabase: () => (/* reexport safe */ _InstantReactWebDatabase__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   i: () => (/* reexport safe */ _instantdb_core__WEBPACK_IMPORTED_MODULE_0__.i),\n/* harmony export */   id: () => (/* reexport safe */ _instantdb_core__WEBPACK_IMPORTED_MODULE_0__.id),\n/* harmony export */   init: () => (/* reexport safe */ _init__WEBPACK_IMPORTED_MODULE_3__.init),\n/* harmony export */   init_experimental: () => (/* reexport safe */ _init__WEBPACK_IMPORTED_MODULE_3__.init_experimental),\n/* harmony export */   lookup: () => (/* reexport safe */ _instantdb_core__WEBPACK_IMPORTED_MODULE_0__.lookup),\n/* harmony export */   tx: () => (/* reexport safe */ _instantdb_core__WEBPACK_IMPORTED_MODULE_0__.tx)\n/* harmony export */ });\n/* harmony import */ var _instantdb_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @instantdb/core */ \"(ssr)/./node_modules/@instantdb/core/dist/module/index.js\");\n/* harmony import */ var _InstantReactAbstractDatabase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./InstantReactAbstractDatabase */ \"(ssr)/./node_modules/@instantdb/react/dist/module/InstantReactAbstractDatabase.js\");\n/* harmony import */ var _InstantReactWebDatabase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./InstantReactWebDatabase */ \"(ssr)/./node_modules/@instantdb/react/dist/module/InstantReactWebDatabase.js\");\n/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./init */ \"(ssr)/./node_modules/@instantdb/react/dist/module/init.js\");\n/* harmony import */ var _Cursors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Cursors */ \"(ssr)/./node_modules/@instantdb/react/dist/module/Cursors.js\");\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9yZWFjdC9kaXN0L21vZHVsZS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFxRDtBQUNxQjtBQUNWO0FBQ2Y7QUFDYjtBQUdKO0FBQ2hDIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXERFTExcXERvY3VtZW50c1xcZW1haWwtY2hhdC1pbnRlcmZhY2VcXG5vZGVfbW9kdWxlc1xcQGluc3RhbnRkYlxccmVhY3RcXGRpc3RcXG1vZHVsZVxcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaWQsIHR4LCBsb29rdXAsIGksIH0gZnJvbSBcIkBpbnN0YW50ZGIvY29yZVwiO1xuaW1wb3J0IEluc3RhbnRSZWFjdEFic3RyYWN0RGF0YWJhc2UgZnJvbSBcIi4vSW5zdGFudFJlYWN0QWJzdHJhY3REYXRhYmFzZVwiO1xuaW1wb3J0IEluc3RhbnRSZWFjdFdlYkRhdGFiYXNlIGZyb20gXCIuL0luc3RhbnRSZWFjdFdlYkRhdGFiYXNlXCI7XG5pbXBvcnQgeyBpbml0LCBpbml0X2V4cGVyaW1lbnRhbCB9IGZyb20gXCIuL2luaXRcIjtcbmltcG9ydCB7IEN1cnNvcnMgfSBmcm9tIFwiLi9DdXJzb3JzXCI7XG5leHBvcnQgeyBpZCwgdHgsIGxvb2t1cCwgaW5pdCwgaW5pdF9leHBlcmltZW50YWwsIEluc3RhbnRSZWFjdFdlYkRhdGFiYXNlLCBDdXJzb3JzLCBpLCBcbi8vIGludGVybmFsXG5JbnN0YW50UmVhY3RBYnN0cmFjdERhdGFiYXNlLCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/react/dist/module/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/react/dist/module/init.js":
/*!***********************************************************!*\
  !*** ./node_modules/@instantdb/react/dist/module/init.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   init: () => (/* binding */ init),\n/* harmony export */   init_experimental: () => (/* binding */ init_experimental)\n/* harmony export */ });\n/* harmony import */ var _InstantReactWebDatabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./InstantReactWebDatabase */ \"(ssr)/./node_modules/@instantdb/react/dist/module/InstantReactWebDatabase.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./version */ \"(ssr)/./node_modules/@instantdb/react/dist/module/version.js\");\n\n\n/**\n *\n * The first step: init your application!\n *\n * Visit https://instantdb.com/dash to get your `appId` :)\n *\n * @example\n *  import { init } from \"@instantdb/react\"\n *\n *  const db = init({ appId: \"my-app-id\" })\n *\n *  // You can also provide a schema for type safety and editor autocomplete!\n *\n *  import { init } from \"@instantdb/react\"\n *  import schema from \"\"../instant.schema.ts\";\n *\n *  const db = init({ appId: \"my-app-id\", schema })\n *\n *  // To learn more: https://instantdb.com/docs/modeling-data\n */\nfunction init(config) {\n    return new _InstantReactWebDatabase__WEBPACK_IMPORTED_MODULE_0__[\"default\"](config, {\n        \"@instantdb/react\": _version__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    });\n}\n/**\n * @deprecated\n * `init_experimental` is deprecated. You can replace it with `init`.\n *\n * @example\n *\n * // Before\n * import { init_experimental } from \"@instantdb/react\"\n * const db = init_experimental({  ...  });\n *\n * // After\n * import { init } from \"@instantdb/react\"\n * const db = init({ ...  });\n */\nconst init_experimental = init;\n//# sourceMappingURL=init.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9yZWFjdC9kaXN0L21vZHVsZS9pbml0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBZ0U7QUFDaEM7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLE9BQU87QUFDcEI7QUFDQSxzQkFBc0Isb0JBQW9CO0FBQzFDO0FBQ0E7QUFDQTtBQUNBLGFBQWEsT0FBTztBQUNwQjtBQUNBO0FBQ0Esc0JBQXNCLDRCQUE0QjtBQUNsRDtBQUNBO0FBQ0E7QUFDTztBQUNQLGVBQWUsZ0VBQXVCO0FBQ3RDLDRCQUE0QixnREFBTztBQUNuQyxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksb0JBQW9CO0FBQ2hDLG1DQUFtQyxNQUFNO0FBQ3pDO0FBQ0E7QUFDQSxZQUFZLE9BQU87QUFDbkIscUJBQXFCLE1BQU07QUFDM0I7QUFDTztBQUNQIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXERFTExcXERvY3VtZW50c1xcZW1haWwtY2hhdC1pbnRlcmZhY2VcXG5vZGVfbW9kdWxlc1xcQGluc3RhbnRkYlxccmVhY3RcXGRpc3RcXG1vZHVsZVxcaW5pdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgSW5zdGFudFJlYWN0V2ViRGF0YWJhc2UgZnJvbSBcIi4vSW5zdGFudFJlYWN0V2ViRGF0YWJhc2VcIjtcbmltcG9ydCB2ZXJzaW9uIGZyb20gXCIuL3ZlcnNpb25cIjtcbi8qKlxuICpcbiAqIFRoZSBmaXJzdCBzdGVwOiBpbml0IHlvdXIgYXBwbGljYXRpb24hXG4gKlxuICogVmlzaXQgaHR0cHM6Ly9pbnN0YW50ZGIuY29tL2Rhc2ggdG8gZ2V0IHlvdXIgYGFwcElkYCA6KVxuICpcbiAqIEBleGFtcGxlXG4gKiAgaW1wb3J0IHsgaW5pdCB9IGZyb20gXCJAaW5zdGFudGRiL3JlYWN0XCJcbiAqXG4gKiAgY29uc3QgZGIgPSBpbml0KHsgYXBwSWQ6IFwibXktYXBwLWlkXCIgfSlcbiAqXG4gKiAgLy8gWW91IGNhbiBhbHNvIHByb3ZpZGUgYSBzY2hlbWEgZm9yIHR5cGUgc2FmZXR5IGFuZCBlZGl0b3IgYXV0b2NvbXBsZXRlIVxuICpcbiAqICBpbXBvcnQgeyBpbml0IH0gZnJvbSBcIkBpbnN0YW50ZGIvcmVhY3RcIlxuICogIGltcG9ydCBzY2hlbWEgZnJvbSBcIlwiLi4vaW5zdGFudC5zY2hlbWEudHNcIjtcbiAqXG4gKiAgY29uc3QgZGIgPSBpbml0KHsgYXBwSWQ6IFwibXktYXBwLWlkXCIsIHNjaGVtYSB9KVxuICpcbiAqICAvLyBUbyBsZWFybiBtb3JlOiBodHRwczovL2luc3RhbnRkYi5jb20vZG9jcy9tb2RlbGluZy1kYXRhXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpbml0KGNvbmZpZykge1xuICAgIHJldHVybiBuZXcgSW5zdGFudFJlYWN0V2ViRGF0YWJhc2UoY29uZmlnLCB7XG4gICAgICAgIFwiQGluc3RhbnRkYi9yZWFjdFwiOiB2ZXJzaW9uLFxuICAgIH0pO1xufVxuLyoqXG4gKiBAZGVwcmVjYXRlZFxuICogYGluaXRfZXhwZXJpbWVudGFsYCBpcyBkZXByZWNhdGVkLiBZb3UgY2FuIHJlcGxhY2UgaXQgd2l0aCBgaW5pdGAuXG4gKlxuICogQGV4YW1wbGVcbiAqXG4gKiAvLyBCZWZvcmVcbiAqIGltcG9ydCB7IGluaXRfZXhwZXJpbWVudGFsIH0gZnJvbSBcIkBpbnN0YW50ZGIvcmVhY3RcIlxuICogY29uc3QgZGIgPSBpbml0X2V4cGVyaW1lbnRhbCh7ICAuLi4gIH0pO1xuICpcbiAqIC8vIEFmdGVyXG4gKiBpbXBvcnQgeyBpbml0IH0gZnJvbSBcIkBpbnN0YW50ZGIvcmVhY3RcIlxuICogY29uc3QgZGIgPSBpbml0KHsgLi4uICB9KTtcbiAqL1xuZXhwb3J0IGNvbnN0IGluaXRfZXhwZXJpbWVudGFsID0gaW5pdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluaXQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/react/dist/module/init.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/react/dist/module/useQuery.js":
/*!***************************************************************!*\
  !*** ./node_modules/@instantdb/react/dist/module/useQuery.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useQueryInternal: () => (/* binding */ useQueryInternal)\n/* harmony export */ });\n/* harmony import */ var _instantdb_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @instantdb/core */ \"(ssr)/./node_modules/@instantdb/core/dist/module/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst defaultState = {\n    isLoading: true,\n    data: undefined,\n    pageInfo: undefined,\n    error: undefined,\n};\nfunction stateForResult(result) {\n    return Object.assign({ isLoading: !Boolean(result), data: undefined, pageInfo: undefined, error: undefined }, (result ? result : {}));\n}\nfunction useQueryInternal(_core, _query) {\n    const query = _query ? (0,_instantdb_core__WEBPACK_IMPORTED_MODULE_0__.coerceQuery)(_query) : null;\n    const queryHash = (0,_instantdb_core__WEBPACK_IMPORTED_MODULE_0__.weakHash)(query);\n    // We use a ref to store the result of the query.\n    // This is becuase `useSyncExternalStore` uses `Object.is`\n    // to compare the previous and next state.\n    // If we don't use a ref, the state will always be considered different, so\n    // the component will always re-render.\n    const resultCacheRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(stateForResult(_core._reactor.getPreviousResult(query)));\n    // Similar to `resultCacheRef`, `useSyncExternalStore` will unsubscribe\n    // if `subscribe` changes, so we use `useCallback` to memoize the function.\n    const subscribe = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((cb) => {\n        // Don't subscribe if query is null\n        if (!query) {\n            const unsubscribe = () => { };\n            return unsubscribe;\n        }\n        const unsubscribe = _core.subscribeQuery(query, (result) => {\n            resultCacheRef.current = Object.assign({ isLoading: !Boolean(result), data: undefined, pageInfo: undefined, error: undefined }, result);\n            cb();\n        });\n        return unsubscribe;\n    }, \n    // Build a new subscribe function if the query changes\n    [queryHash]);\n    const state = (0,react__WEBPACK_IMPORTED_MODULE_1__.useSyncExternalStore)(subscribe, () => resultCacheRef.current, () => defaultState);\n    return { state, query };\n}\n//# sourceMappingURL=useQuery.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9yZWFjdC9kaXN0L21vZHVsZS91c2VRdWVyeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXlEO0FBQ1M7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIscUZBQXFGLHVCQUF1QjtBQUN2STtBQUNPO0FBQ1AsMkJBQTJCLDREQUFXO0FBQ3RDLHNCQUFzQix5REFBUTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLDZDQUFNO0FBQ2pDO0FBQ0E7QUFDQSxzQkFBc0Isa0RBQVc7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFELHFGQUFxRjtBQUMxSTtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0Esa0JBQWtCLDJEQUFvQjtBQUN0QyxhQUFhO0FBQ2I7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxERUxMXFxEb2N1bWVudHNcXGVtYWlsLWNoYXQtaW50ZXJmYWNlXFxub2RlX21vZHVsZXNcXEBpbnN0YW50ZGJcXHJlYWN0XFxkaXN0XFxtb2R1bGVcXHVzZVF1ZXJ5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHdlYWtIYXNoLCBjb2VyY2VRdWVyeSwgfSBmcm9tIFwiQGluc3RhbnRkYi9jb3JlXCI7XG5pbXBvcnQgeyB1c2VDYWxsYmFjaywgdXNlUmVmLCB1c2VTeW5jRXh0ZXJuYWxTdG9yZSB9IGZyb20gXCJyZWFjdFwiO1xuY29uc3QgZGVmYXVsdFN0YXRlID0ge1xuICAgIGlzTG9hZGluZzogdHJ1ZSxcbiAgICBkYXRhOiB1bmRlZmluZWQsXG4gICAgcGFnZUluZm86IHVuZGVmaW5lZCxcbiAgICBlcnJvcjogdW5kZWZpbmVkLFxufTtcbmZ1bmN0aW9uIHN0YXRlRm9yUmVzdWx0KHJlc3VsdCkge1xuICAgIHJldHVybiBPYmplY3QuYXNzaWduKHsgaXNMb2FkaW5nOiAhQm9vbGVhbihyZXN1bHQpLCBkYXRhOiB1bmRlZmluZWQsIHBhZ2VJbmZvOiB1bmRlZmluZWQsIGVycm9yOiB1bmRlZmluZWQgfSwgKHJlc3VsdCA/IHJlc3VsdCA6IHt9KSk7XG59XG5leHBvcnQgZnVuY3Rpb24gdXNlUXVlcnlJbnRlcm5hbChfY29yZSwgX3F1ZXJ5KSB7XG4gICAgY29uc3QgcXVlcnkgPSBfcXVlcnkgPyBjb2VyY2VRdWVyeShfcXVlcnkpIDogbnVsbDtcbiAgICBjb25zdCBxdWVyeUhhc2ggPSB3ZWFrSGFzaChxdWVyeSk7XG4gICAgLy8gV2UgdXNlIGEgcmVmIHRvIHN0b3JlIHRoZSByZXN1bHQgb2YgdGhlIHF1ZXJ5LlxuICAgIC8vIFRoaXMgaXMgYmVjdWFzZSBgdXNlU3luY0V4dGVybmFsU3RvcmVgIHVzZXMgYE9iamVjdC5pc2BcbiAgICAvLyB0byBjb21wYXJlIHRoZSBwcmV2aW91cyBhbmQgbmV4dCBzdGF0ZS5cbiAgICAvLyBJZiB3ZSBkb24ndCB1c2UgYSByZWYsIHRoZSBzdGF0ZSB3aWxsIGFsd2F5cyBiZSBjb25zaWRlcmVkIGRpZmZlcmVudCwgc29cbiAgICAvLyB0aGUgY29tcG9uZW50IHdpbGwgYWx3YXlzIHJlLXJlbmRlci5cbiAgICBjb25zdCByZXN1bHRDYWNoZVJlZiA9IHVzZVJlZihzdGF0ZUZvclJlc3VsdChfY29yZS5fcmVhY3Rvci5nZXRQcmV2aW91c1Jlc3VsdChxdWVyeSkpKTtcbiAgICAvLyBTaW1pbGFyIHRvIGByZXN1bHRDYWNoZVJlZmAsIGB1c2VTeW5jRXh0ZXJuYWxTdG9yZWAgd2lsbCB1bnN1YnNjcmliZVxuICAgIC8vIGlmIGBzdWJzY3JpYmVgIGNoYW5nZXMsIHNvIHdlIHVzZSBgdXNlQ2FsbGJhY2tgIHRvIG1lbW9pemUgdGhlIGZ1bmN0aW9uLlxuICAgIGNvbnN0IHN1YnNjcmliZSA9IHVzZUNhbGxiYWNrKChjYikgPT4ge1xuICAgICAgICAvLyBEb24ndCBzdWJzY3JpYmUgaWYgcXVlcnkgaXMgbnVsbFxuICAgICAgICBpZiAoIXF1ZXJ5KSB7XG4gICAgICAgICAgICBjb25zdCB1bnN1YnNjcmliZSA9ICgpID0+IHsgfTtcbiAgICAgICAgICAgIHJldHVybiB1bnN1YnNjcmliZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB1bnN1YnNjcmliZSA9IF9jb3JlLnN1YnNjcmliZVF1ZXJ5KHF1ZXJ5LCAocmVzdWx0KSA9PiB7XG4gICAgICAgICAgICByZXN1bHRDYWNoZVJlZi5jdXJyZW50ID0gT2JqZWN0LmFzc2lnbih7IGlzTG9hZGluZzogIUJvb2xlYW4ocmVzdWx0KSwgZGF0YTogdW5kZWZpbmVkLCBwYWdlSW5mbzogdW5kZWZpbmVkLCBlcnJvcjogdW5kZWZpbmVkIH0sIHJlc3VsdCk7XG4gICAgICAgICAgICBjYigpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHVuc3Vic2NyaWJlO1xuICAgIH0sIFxuICAgIC8vIEJ1aWxkIGEgbmV3IHN1YnNjcmliZSBmdW5jdGlvbiBpZiB0aGUgcXVlcnkgY2hhbmdlc1xuICAgIFtxdWVyeUhhc2hdKTtcbiAgICBjb25zdCBzdGF0ZSA9IHVzZVN5bmNFeHRlcm5hbFN0b3JlKHN1YnNjcmliZSwgKCkgPT4gcmVzdWx0Q2FjaGVSZWYuY3VycmVudCwgKCkgPT4gZGVmYXVsdFN0YXRlKTtcbiAgICByZXR1cm4geyBzdGF0ZSwgcXVlcnkgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVzZVF1ZXJ5LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/react/dist/module/useQuery.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/react/dist/module/useTimeout.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@instantdb/react/dist/module/useTimeout.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useTimeout: () => (/* binding */ useTimeout)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction useTimeout() {\n    const timeoutRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        clear();\n    }, []);\n    function set(delay, fn) {\n        clearTimeout(timeoutRef.current);\n        timeoutRef.current = setTimeout(fn, delay);\n    }\n    function clear() {\n        clearTimeout(timeoutRef.current);\n    }\n    return { set, clear };\n}\n//# sourceMappingURL=useTimeout.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9yZWFjdC9kaXN0L21vZHVsZS91c2VUaW1lb3V0LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEwQztBQUNuQztBQUNQLHVCQUF1Qiw2Q0FBTTtBQUM3QixJQUFJLGdEQUFTO0FBQ2I7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxERUxMXFxEb2N1bWVudHNcXGVtYWlsLWNoYXQtaW50ZXJmYWNlXFxub2RlX21vZHVsZXNcXEBpbnN0YW50ZGJcXHJlYWN0XFxkaXN0XFxtb2R1bGVcXHVzZVRpbWVvdXQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VSZWYgfSBmcm9tIFwicmVhY3RcIjtcbmV4cG9ydCBmdW5jdGlvbiB1c2VUaW1lb3V0KCkge1xuICAgIGNvbnN0IHRpbWVvdXRSZWYgPSB1c2VSZWYobnVsbCk7XG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgY2xlYXIoKTtcbiAgICB9LCBbXSk7XG4gICAgZnVuY3Rpb24gc2V0KGRlbGF5LCBmbikge1xuICAgICAgICBjbGVhclRpbWVvdXQodGltZW91dFJlZi5jdXJyZW50KTtcbiAgICAgICAgdGltZW91dFJlZi5jdXJyZW50ID0gc2V0VGltZW91dChmbiwgZGVsYXkpO1xuICAgIH1cbiAgICBmdW5jdGlvbiBjbGVhcigpIHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXRSZWYuY3VycmVudCk7XG4gICAgfVxuICAgIHJldHVybiB7IHNldCwgY2xlYXIgfTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXVzZVRpbWVvdXQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/react/dist/module/useTimeout.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@instantdb/react/dist/module/version.js":
/*!**************************************************************!*\
  !*** ./node_modules/@instantdb/react/dist/module/version.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Autogenerated by publish_packages.clj\nconst version = \"v0.17.3\";\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (version);\n//# sourceMappingURL=version.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGluc3RhbnRkYi9yZWFjdC9kaXN0L21vZHVsZS92ZXJzaW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0EsaUVBQWUsT0FBTyxFQUFDO0FBQ3ZCIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXERFTExcXERvY3VtZW50c1xcZW1haWwtY2hhdC1pbnRlcmZhY2VcXG5vZGVfbW9kdWxlc1xcQGluc3RhbnRkYlxccmVhY3RcXGRpc3RcXG1vZHVsZVxcdmVyc2lvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBdXRvZ2VuZXJhdGVkIGJ5IHB1Ymxpc2hfcGFja2FnZXMuY2xqXG5jb25zdCB2ZXJzaW9uID0gXCJ2MC4xNy4zXCI7XG5leHBvcnQgZGVmYXVsdCB2ZXJzaW9uO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVyc2lvbi5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@instantdb/react/dist/module/version.js\n");

/***/ })

};
;